%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 5_1412.i042.008.P.m004.c23.web development icons.eps
%%Creator: Adobe Illustrator(R) 18.0
%%For: IvAN
%%CreationDate: 12/10/2014
%%BoundingBox: 0 0 450 450
%%HiResBoundingBox: 0 0 450 450
%%CropBox: 0 0 450 450
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 18.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 18.0.0 x18 R agm 4.7713 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c011 79.156289, 2014/03/31-23:39:12        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">5_1412.i042.008.P.m004.c23.web development icons</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:MetadataDate>2014-12-09T23:35:45+02:00</xmp:MetadataDate>
         <xmp:ModifyDate>2014-12-09T23:35:45+02:00</xmp:ModifyDate>
         <xmp:CreateDate>2014-12-09T23:35:45+02:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC 2014 (Windows)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEC0ALQAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAC0AAAAAEA&#xA;AQLQAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXmk3mP&#xA;81tS8xa9a6BLosOnaTeiziW8tLqaY/6PFMWZ0vIFO8p6Jmu1GtnDIYRhxUAfqA53+pyMeGJjZlXw&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:eab7172a-cbca-c046-9448-e3acb85c68b5</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:eab7172a-cbca-c046-9448-e3acb85c68b5</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:4795A680D67EE41198A7D4D70400DF73</stRef:instanceID>
            <stRef:documentID>xmp.did:4795A680D67EE41198A7D4D70400DF73</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F3EF8B3A4C7DE411B562FF5BF1A9FFC4</stEvt:instanceID>
                  <stEvt:when>2014-12-06T15:31:48+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:4795A680D67EE41198A7D4D70400DF73</stEvt:instanceID>
                  <stEvt:when>2014-12-09T02:26:16+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:eab7172a-cbca-c046-9448-e3acb85c68b5</stEvt:instanceID>
                  <stEvt:when>2014-12-09T23:35:45+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2014 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>450.000000</stDim:w>
            <stDim:h>450.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=70 Y=80 K=70</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>60</xmpG:red>
                           <xmpG:green>36</xmpG:green>
                           <xmpG:blue>21</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -450 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 450 li
450 450 li
450 0 li
cp
clp
450 450 mo
0 450 li
0 0 li
450 0 li
450 450 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
136.198 372.486 mo
167.992 347.105 li
199.786 372.486 li
167.992 389.256 li
136.198 372.486 li
cp
.0862745 .756863 .819608 rgb
f
167.992 387.625 mo
138.783 372.243 li
167.992 348.902 li
197.201 372.243 li
167.992 387.625 li
cp
.0588235 .188235 .247059 rgb
f
168.311 332.8 mo
160.529 332.772 154.196 339.324 154.167 347.434 cv
154.147 353.043 157.768 355.728 160.34 360.235 cv
161.653 362.535 161.546 371.119 161.546 371.119 cv
161.541 372.837 162.871 374.232 164.52 374.238 cv
168.17 374.252 li
168.313 332.8 li
168.311 332.8 li
cp
.992157 .776471 .227451 rgb
f
182.354 347.53 mo
182.383 339.422 176.097 332.827 168.313 332.8 cv
168.17 374.252 li
171.816 374.264 li
173.464 374.27 174.805 372.883 174.81 371.167 cv
174.81 371.167 174.764 362.495 176.094 360.203 cv
178.696 355.715 182.334 353.14 182.354 347.53 cv
cp
.992157 .596078 0 rgb
f
165.662 368.092 mo
167.063 366.698 169.326 366.707 170.718 368.109 cv
172.678 370.082 li
174.068 371.482 174.061 373.747 172.659 375.139 cv
170.686 377.098 li
169.285 378.49 167.021 378.481 165.631 377.08 cv
163.67 375.107 li
162.279 373.706 162.288 371.441 163.688 370.051 cv
165.662 368.092 li
cp
1 1 1 rgb
f
176.307 372.789 mo
176.305 373.632 175.262 374.313 173.977 374.308 cv
162.357 374.268 li
161.075 374.263 160.037 373.576 160.041 372.73 cv
160.041 372.73 li
160.041 371.887 161.086 371.208 162.368 371.213 cv
173.989 371.252 li
175.272 371.257 176.31 371.943 176.307 372.789 cv
176.307 372.789 li
cp
.901961 .901961 .901961 rgb
f
176.316 369.928 mo
176.314 370.772 175.271 371.453 173.986 371.448 cv
162.368 371.408 li
161.085 371.403 160.047 370.715 160.051 369.871 cv
160.051 369.871 li
160.053 369.027 161.096 368.348 162.378 368.353 cv
173.999 368.392 li
175.281 368.397 176.32 369.085 176.316 369.928 cv
176.316 369.928 li
cp
1 1 1 rgb
f
176.325 367.067 mo
176.325 367.911 175.28 368.592 173.998 368.586 cv
162.378 368.545 li
161.095 368.542 160.057 367.855 160.06 367.011 cv
160.06 367.011 li
160.061 366.167 161.104 365.486 162.39 365.491 cv
174.009 365.531 li
175.291 365.537 176.329 366.224 176.325 367.067 cv
176.325 367.067 li
cp
.901961 .901961 .901961 rgb
f
176.338 364.207 mo
176.335 365.051 175.291 365.731 174.008 365.728 cv
162.388 365.686 li
161.104 365.683 160.066 364.994 160.069 364.15 cv
160.069 364.15 li
160.072 363.308 161.115 362.627 162.399 362.63 cv
174.019 362.671 li
175.302 362.676 176.34 363.363 176.338 364.207 cv
176.338 364.207 li
cp
1 1 1 rgb
f
154.645 411.664 mo
154.656 411.695 li
154.67 412.43 154.413 413.044 153.883 413.538 cv
153.353 414.032 152.653 414.279 151.783 414.279 cv
150.898 414.279 150.178 413.966 149.621 413.34 cv
149.064 412.713 148.786 411.918 148.786 410.955 cv
148.786 409.564 li
148.786 408.6 149.064 407.805 149.621 407.176 cv
150.178 406.547 150.898 406.233 151.783 406.233 cv
152.667 406.233 153.371 406.469 153.894 406.94 cv
154.416 407.41 154.67 408.035 154.656 408.811 cv
154.645 408.844 li
153.63 408.844 li
153.63 408.296 153.469 407.863 153.147 407.544 cv
152.825 407.225 152.37 407.066 151.783 407.066 cv
151.192 407.066 150.721 407.305 150.37 407.78 cv
150.019 408.256 149.844 408.848 149.844 409.553 cv
149.844 410.955 li
149.844 411.667 150.019 412.262 150.37 412.738 cv
150.721 413.214 151.192 413.452 151.783 413.452 cv
152.37 413.452 152.825 413.293 153.147 412.977 cv
153.469 412.66 153.63 412.223 153.63 411.664 cv
154.645 411.664 li
cp
.501961 .501961 .501961 rgb
f
158.636 409.289 mo
158.094 409.258 li
157.814 409.258 157.579 409.324 157.388 409.456 cv
157.196 409.588 157.048 409.775 156.944 410.015 cv
156.944 414.166 li
155.886 414.166 li
155.886 408.355 li
156.831 408.355 li
156.934 409.203 li
157.098 408.902 157.302 408.668 157.543 408.5 cv
157.785 408.332 158.063 408.248 158.378 408.248 cv
158.457 408.248 158.532 408.254 158.604 408.266 cv
158.676 408.279 158.735 408.293 158.781 408.307 cv
158.636 409.289 li
cp
f
161.875 409.08 mo
161.506 409.08 161.201 409.223 160.959 409.508 cv
160.718 409.791 160.57 410.156 160.516 410.6 cv
160.527 410.627 li
163.148 410.627 li
163.148 410.541 li
163.148 410.119 163.044 409.77 162.836 409.494 cv
162.629 409.218 162.308 409.08 161.875 409.08 cv
cp
162.041 414.279 mo
161.207 414.279 160.557 414.013 160.089 413.478 cv
159.622 412.945 159.388 412.244 159.388 411.373 cv
159.388 411.137 li
159.388 410.303 159.629 409.613 160.11 409.066 cv
160.592 408.521 161.18 408.248 161.875 408.248 cv
162.652 408.248 163.235 408.489 163.623 408.973 cv
164.012 409.456 164.206 410.099 164.206 410.9 cv
164.206 411.459 li
160.489 411.459 li
160.473 411.486 li
160.473 412.07 160.602 412.543 160.86 412.906 cv
161.118 413.271 161.512 413.452 162.041 413.452 cv
162.399 413.452 162.714 413.4 162.984 413.299 cv
163.254 413.197 163.486 413.057 163.68 412.877 cv
164.093 413.565 li
163.886 413.766 163.612 413.935 163.271 414.072 cv
162.931 414.211 162.521 414.279 162.041 414.279 cv
cp
f
167.208 413.393 mo
167.592 413.393 167.937 413.295 168.245 413.098 cv
168.553 412.9 168.753 412.676 168.847 412.421 cv
168.847 411.476 li
167.66 411.476 li
167.233 411.476 166.893 411.583 166.637 411.798 cv
166.38 412.013 166.252 412.266 166.252 412.555 cv
166.252 412.813 166.333 413.018 166.494 413.168 cv
166.655 413.318 166.894 413.393 167.208 413.393 cv
cp
168.965 414.166 mo
168.929 413.991 168.901 413.836 168.882 413.701 cv
168.862 413.568 168.85 413.433 168.847 413.297 cv
168.65 413.576 168.393 413.809 168.076 413.998 cv
167.759 414.185 167.418 414.279 167.053 414.279 cv
166.448 414.279 165.986 414.125 165.67 413.815 cv
165.352 413.505 165.194 413.078 165.194 412.533 cv
165.194 411.978 165.419 411.545 165.868 411.23 cv
166.318 410.918 166.927 410.762 167.697 410.762 cv
168.847 410.762 li
168.847 410.186 li
168.847 409.846 168.743 409.576 168.535 409.379 cv
168.328 409.18 168.034 409.08 167.654 409.08 cv
167.311 409.08 167.033 409.166 166.822 409.338 cv
166.61 409.51 166.505 409.716 166.505 409.955 cv
165.5 409.967 li
165.49 409.934 li
165.465 409.512 165.663 409.125 166.083 408.773 cv
166.504 408.423 167.047 408.248 167.713 408.248 cv
168.372 408.248 168.902 408.415 169.303 408.75 cv
169.704 409.084 169.905 409.566 169.905 410.197 cv
169.905 412.996 li
169.905 413.203 169.915 413.404 169.937 413.598 cv
169.958 413.791 169.998 413.98 170.055 414.166 cv
168.965 414.166 li
cp
f
172.913 406.953 mo
172.913 408.355 li
174.014 408.355 li
174.014 409.139 li
172.913 409.139 li
172.913 412.668 li
172.913 412.94 172.969 413.132 173.082 413.242 cv
173.194 413.353 173.344 413.409 173.53 413.409 cv
173.591 413.409 173.659 413.4 173.734 413.385 cv
173.81 413.369 173.872 413.352 173.922 413.334 cv
174.067 414.059 li
173.989 414.123 173.872 414.176 173.718 414.217 cv
173.564 414.259 173.412 414.279 173.262 414.279 cv
172.832 414.279 172.49 414.149 172.236 413.891 cv
171.981 413.631 171.854 413.223 171.854 412.668 cv
171.854 409.139 li
170.931 409.139 li
170.931 408.355 li
171.854 408.355 li
171.854 406.953 li
172.913 406.953 li
cp
f
176.291 414.166 mo
175.233 414.166 li
175.233 408.355 li
176.291 408.355 li
176.291 414.166 li
cp
176.291 406.867 mo
175.233 406.867 li
175.233 405.787 li
176.291 405.787 li
176.291 406.867 li
cp
f
179.857 412.453 mo
179.949 412.861 li
179.981 412.861 li
180.083 412.453 li
181.42 408.355 li
182.5 408.355 li
180.362 414.166 li
179.562 414.166 li
177.397 408.355 li
178.482 408.355 li
179.857 412.453 li
cp
f
185.621 409.08 mo
185.252 409.08 184.947 409.223 184.705 409.508 cv
184.463 409.791 184.315 410.156 184.262 410.6 cv
184.272 410.627 li
186.894 410.627 li
186.894 410.541 li
186.894 410.119 186.79 409.77 186.582 409.494 cv
186.374 409.218 186.054 409.08 185.621 409.08 cv
cp
185.787 414.279 mo
184.953 414.279 184.302 414.013 183.834 413.478 cv
183.368 412.945 183.134 412.244 183.134 411.373 cv
183.134 411.137 li
183.134 410.303 183.374 409.613 183.856 409.066 cv
184.338 408.521 184.926 408.248 185.621 408.248 cv
186.397 408.248 186.98 408.489 187.369 408.973 cv
187.757 409.456 187.952 410.099 187.952 410.9 cv
187.952 411.459 li
184.235 411.459 li
184.219 411.486 li
184.219 412.07 184.348 412.543 184.605 412.906 cv
184.863 413.271 185.257 413.452 185.787 413.452 cv
186.145 413.452 186.459 413.4 186.73 413.299 cv
187 413.197 187.232 413.057 187.425 412.877 cv
187.839 413.565 li
187.631 413.766 187.357 413.935 187.017 414.072 cv
186.677 414.211 186.267 414.279 185.787 414.279 cv
cp
f
159.759 427.367 mo
158.701 427.367 li
158.701 421.555 li
159.759 421.555 li
159.759 427.367 li
cp
159.759 420.067 mo
158.701 420.067 li
158.701 418.988 li
159.759 418.988 li
159.759 420.067 li
cp
f
162.203 424.682 mo
162.203 425.269 162.323 425.738 162.563 426.092 cv
162.802 426.443 163.175 426.62 163.68 426.62 cv
163.995 426.62 164.26 426.549 164.475 426.405 cv
164.689 426.262 164.865 426.061 165.001 425.804 cv
165.001 423.092 li
164.865 422.852 164.688 422.66 164.472 422.52 cv
164.255 422.378 163.995 422.307 163.69 422.307 cv
163.182 422.307 162.807 422.517 162.565 422.935 cv
162.323 423.354 162.203 423.898 162.203 424.568 cv
162.203 424.682 li
cp
161.145 424.568 mo
161.145 423.634 161.344 422.88 161.743 422.307 cv
162.143 421.734 162.702 421.447 163.422 421.447 cv
163.762 421.447 164.063 421.51 164.327 421.636 cv
164.59 421.762 164.815 421.943 165.001 422.184 cv
165.001 418.988 li
166.059 418.988 li
166.059 427.367 li
165.248 427.367 li
165.087 426.631 li
164.897 426.91 164.663 427.121 164.383 427.265 cv
164.104 427.408 163.78 427.479 163.411 427.479 cv
162.702 427.479 162.147 427.223 161.746 426.709 cv
161.345 426.195 161.145 425.52 161.145 424.682 cv
161.145 424.568 li
cp
f
169.878 422.28 mo
169.509 422.28 169.204 422.422 168.962 422.707 cv
168.721 422.992 168.573 423.356 168.519 423.801 cv
168.53 423.827 li
171.151 423.827 li
171.151 423.741 li
171.151 423.318 171.047 422.97 170.839 422.693 cv
170.632 422.418 170.311 422.28 169.878 422.28 cv
cp
170.044 427.479 mo
169.21 427.479 168.56 427.213 168.092 426.68 cv
167.625 426.146 167.391 425.443 167.391 424.574 cv
167.391 424.338 li
167.391 423.503 167.632 422.813 168.113 422.268 cv
168.595 421.721 169.183 421.447 169.878 421.447 cv
170.655 421.447 171.238 421.69 171.626 422.173 cv
172.015 422.656 172.209 423.299 172.209 424.102 cv
172.209 424.66 li
168.492 424.66 li
168.476 424.686 li
168.476 425.27 168.605 425.744 168.863 426.107 cv
169.121 426.471 169.515 426.652 170.044 426.652 cv
170.402 426.652 170.717 426.602 170.987 426.5 cv
171.257 426.397 171.489 426.257 171.683 426.078 cv
172.096 426.766 li
171.889 426.966 171.615 427.135 171.274 427.273 cv
170.934 427.41 170.524 427.479 170.044 427.479 cv
cp
f
175.211 426.594 mo
175.595 426.594 175.94 426.494 176.248 426.298 cv
176.556 426.102 176.756 425.875 176.85 425.621 cv
176.85 424.676 li
175.663 424.676 li
175.236 424.676 174.895 424.783 174.64 424.998 cv
174.383 425.213 174.255 425.465 174.255 425.756 cv
174.255 426.014 174.336 426.217 174.497 426.367 cv
174.658 426.518 174.896 426.594 175.211 426.594 cv
cp
176.968 427.367 mo
176.932 427.191 176.904 427.037 176.885 426.902 cv
176.865 426.768 176.853 426.633 176.85 426.496 cv
176.653 426.775 176.395 427.01 176.079 427.197 cv
175.762 427.385 175.421 427.479 175.056 427.479 cv
174.451 427.479 173.989 427.324 173.673 427.016 cv
173.355 426.705 173.197 426.278 173.197 425.734 cv
173.197 425.179 173.422 424.744 173.871 424.432 cv
174.321 424.118 174.93 423.961 175.7 423.961 cv
176.85 423.961 li
176.85 423.387 li
176.85 423.047 176.746 422.777 176.538 422.578 cv
176.331 422.379 176.037 422.28 175.657 422.28 cv
175.313 422.28 175.036 422.366 174.825 422.538 cv
174.613 422.71 174.508 422.916 174.508 423.156 cv
173.503 423.166 li
173.493 423.135 li
173.468 422.712 173.665 422.325 174.086 421.975 cv
174.507 421.623 175.05 421.447 175.716 421.447 cv
176.375 421.447 176.905 421.615 177.306 421.949 cv
177.707 422.285 177.908 422.768 177.908 423.397 cv
177.908 426.195 li
177.908 426.403 177.919 426.603 177.94 426.797 cv
177.961 426.99 178.001 427.181 178.058 427.367 cv
176.968 427.367 li
cp
f
169.247 104.997 mo
169.257 105.029 li
169.271 105.763 169.014 106.377 168.484 106.872 cv
167.954 107.366 167.254 107.613 166.384 107.613 cv
165.499 107.613 164.779 107.299 164.222 106.673 cv
163.665 106.046 163.387 105.252 163.387 104.288 cv
163.387 102.897 li
163.387 101.934 163.665 101.138 164.222 100.51 cv
164.779 99.8809 165.499 99.5669 166.384 99.5669 cv
167.268 99.5669 167.972 99.8022 168.495 100.273 cv
169.018 100.744 169.271 101.368 169.257 102.145 cv
169.247 102.177 li
168.231 102.177 li
168.231 101.629 168.07 101.196 167.748 100.877 cv
167.426 100.559 166.971 100.399 166.384 100.399 cv
165.793 100.399 165.322 100.638 164.971 101.114 cv
164.62 101.59 164.445 102.181 164.445 102.886 cv
164.445 104.288 li
164.445 105.001 164.62 105.595 164.971 106.071 cv
165.322 106.547 165.793 106.786 166.384 106.786 cv
166.971 106.786 167.426 106.627 167.748 106.311 cv
168.07 105.993 168.231 105.556 168.231 104.997 cv
169.247 104.997 li
cp
f
174.177 106.641 mo
173.995 106.952 173.76 107.192 173.474 107.36 cv
173.187 107.529 172.856 107.613 172.48 107.613 cv
171.846 107.613 171.352 107.411 170.998 107.006 cv
170.643 106.601 170.466 105.971 170.466 105.115 cv
170.466 101.688 li
171.524 101.688 li
171.524 105.126 li
171.524 105.746 171.615 106.171 171.798 106.404 cv
171.98 106.637 172.265 106.753 172.652 106.753 cv
173.028 106.753 173.338 106.677 173.583 106.525 cv
173.829 106.373 174.014 106.157 174.14 105.878 cv
174.14 101.688 li
175.198 101.688 li
175.198 107.5 li
174.247 107.5 li
174.177 106.641 li
cp
f
180.118 105.937 mo
180.118 105.704 180.029 105.515 179.852 105.368 cv
179.674 105.221 179.339 105.092 178.845 104.981 cv
178.161 104.834 177.635 104.628 177.268 104.363 cv
176.901 104.098 176.718 103.744 176.718 103.3 cv
176.718 102.827 176.919 102.422 177.322 102.086 cv
177.725 101.749 178.247 101.581 178.888 101.581 cv
179.546 101.581 180.08 101.76 180.488 102.118 cv
180.896 102.476 181.092 102.894 181.074 103.37 cv
181.063 103.402 li
180.053 103.402 li
180.053 103.151 179.943 102.924 179.723 102.72 cv
179.502 102.516 179.224 102.414 178.888 102.414 cv
178.515 102.414 178.237 102.498 178.052 102.666 cv
177.868 102.835 177.776 103.035 177.776 103.268 cv
177.776 103.497 177.855 103.674 178.015 103.799 cv
178.174 103.925 178.503 104.039 179 104.143 cv
179.713 104.294 180.254 104.506 180.623 104.782 cv
180.991 105.058 181.176 105.418 181.176 105.862 cv
181.176 106.377 180.967 106.798 180.55 107.124 cv
180.133 107.45 179.588 107.613 178.915 107.613 cv
178.173 107.613 177.59 107.425 177.164 107.049 cv
176.737 106.673 176.535 106.234 176.557 105.733 cv
176.567 105.701 li
177.577 105.701 li
177.595 106.077 177.735 106.352 177.996 106.525 cv
178.257 106.699 178.563 106.786 178.915 106.786 cv
179.29 106.786 179.585 106.706 179.798 106.547 cv
180.011 106.387 180.118 106.184 180.118 105.937 cv
cp
f
183.963 100.287 mo
183.963 101.688 li
185.064 101.688 li
185.064 102.473 li
183.963 102.473 li
183.963 106.002 li
183.963 106.273 184.02 106.465 184.133 106.576 cv
184.245 106.687 184.395 106.743 184.581 106.743 cv
184.642 106.743 184.71 106.734 184.785 106.719 cv
184.86 106.702 184.923 106.686 184.973 106.668 cv
185.118 107.393 li
185.04 107.457 184.923 107.51 184.769 107.551 cv
184.615 107.592 184.463 107.613 184.313 107.613 cv
183.883 107.613 183.541 107.483 183.287 107.224 cv
183.032 106.964 182.905 106.557 182.905 106.002 cv
182.905 102.473 li
181.981 102.473 li
181.981 101.688 li
182.905 101.688 li
182.905 100.287 li
183.963 100.287 li
cp
f
187.009 104.659 mo
187.009 105.274 187.139 105.783 187.398 106.184 cv
187.658 106.585 188.044 106.786 188.556 106.786 cv
189.061 106.786 189.444 106.585 189.705 106.184 cv
189.966 105.783 190.097 105.274 190.097 104.659 cv
190.097 104.54 li
190.097 103.932 189.966 103.425 189.702 103.021 cv
189.439 102.616 189.053 102.414 188.545 102.414 cv
188.04 102.414 187.658 102.616 187.398 103.021 cv
187.139 103.425 187.009 103.932 187.009 104.54 cv
187.009 104.659 li
cp
185.951 104.54 mo
185.951 103.681 186.184 102.973 186.649 102.416 cv
187.114 101.859 187.747 101.581 188.545 101.581 cv
189.351 101.581 189.987 101.858 190.454 102.414 cv
190.922 102.969 191.155 103.678 191.155 104.54 cv
191.155 104.659 li
191.155 105.525 190.922 106.234 190.457 106.786 cv
189.992 107.337 189.358 107.613 188.556 107.613 cv
187.753 107.613 187.119 107.336 186.651 106.783 cv
186.185 106.229 185.951 105.521 185.951 104.659 cv
185.951 104.54 li
cp
f
193.395 101.688 mo
193.47 102.451 li
193.66 102.175 193.901 101.961 194.192 101.81 cv
194.484 101.657 194.824 101.581 195.21 101.581 cv
195.597 101.581 195.929 101.67 196.207 101.85 cv
196.484 102.029 196.693 102.297 196.832 102.655 cv
197.019 102.322 197.261 102.06 197.561 101.868 cv
197.859 101.677 198.209 101.581 198.61 101.581 cv
199.201 101.581 199.668 101.784 200.012 102.19 cv
200.356 102.597 200.528 103.209 200.528 104.025 cv
200.528 107.5 li
199.47 107.5 li
199.47 104.014 li
199.47 103.441 199.371 103.036 199.174 102.798 cv
198.977 102.56 198.684 102.44 198.293 102.44 cv
197.932 102.44 197.639 102.566 197.415 102.816 cv
197.191 103.067 197.06 103.384 197.02 103.767 cv
197.02 103.81 li
197.02 107.5 li
195.957 107.5 li
195.957 104.014 li
195.957 103.47 195.856 103.071 195.653 102.819 cv
195.451 102.566 195.16 102.44 194.781 102.44 cv
194.458 102.44 194.193 102.507 193.986 102.639 cv
193.778 102.771 193.619 102.958 193.508 103.198 cv
193.508 107.5 li
192.45 107.5 li
192.45 101.688 li
193.395 101.688 li
cp
f
168.333 119.986 mo
168.659 119.986 168.944 119.877 169.188 119.661 cv
169.431 119.444 169.553 119.178 169.553 118.863 cv
170.509 118.863 li
170.525 118.896 li
170.539 119.397 170.324 119.842 169.88 120.23 cv
169.436 120.619 168.921 120.813 168.333 120.813 cv
167.517 120.813 166.887 120.536 166.443 119.98 cv
165.999 119.425 165.777 118.734 165.777 117.907 cv
165.777 117.682 li
165.777 116.862 166 116.173 166.445 115.616 cv
166.892 115.06 167.52 114.781 168.333 114.781 cv
168.981 114.781 169.513 114.982 169.926 115.383 cv
170.34 115.784 170.539 116.276 170.525 116.86 cv
170.514 116.892 li
169.553 116.892 li
169.553 116.538 169.438 116.236 169.206 115.987 cv
168.976 115.738 168.685 115.614 168.333 115.614 cv
167.814 115.614 167.436 115.815 167.197 116.218 cv
166.96 116.621 166.84 117.109 166.84 117.682 cv
166.84 117.907 li
166.84 118.491 166.957 118.983 167.192 119.384 cv
167.427 119.785 167.807 119.986 168.333 119.986 cv
cp
f
172.593 117.859 mo
172.593 118.475 172.723 118.983 172.982 119.384 cv
173.242 119.785 173.627 119.986 174.14 119.986 cv
174.645 119.986 175.028 119.785 175.289 119.384 cv
175.55 118.983 175.681 118.475 175.681 117.859 cv
175.681 117.741 li
175.681 117.132 175.55 116.626 175.286 116.221 cv
175.023 115.816 174.637 115.614 174.129 115.614 cv
173.624 115.614 173.242 115.816 172.982 116.221 cv
172.723 116.626 172.593 117.132 172.593 117.741 cv
172.593 117.859 li
cp
171.535 117.741 mo
171.535 116.881 171.768 116.173 172.233 115.616 cv
172.698 115.06 173.331 114.781 174.129 114.781 cv
174.935 114.781 175.571 115.059 176.038 115.614 cv
176.506 116.169 176.739 116.878 176.739 117.741 cv
176.739 117.859 li
176.739 118.726 176.506 119.435 176.041 119.986 cv
175.576 120.537 174.942 120.813 174.14 120.813 cv
173.337 120.813 172.703 120.536 172.235 119.983 cv
171.769 119.43 171.535 118.722 171.535 117.859 cv
171.535 117.741 li
cp
f
178.85 118.015 mo
178.85 118.602 178.97 119.072 179.21 119.425 cv
179.45 119.777 179.822 119.954 180.327 119.954 cv
180.642 119.954 180.907 119.882 181.122 119.739 cv
181.337 119.596 181.512 119.395 181.648 119.137 cv
181.648 116.425 li
181.512 116.185 181.336 115.994 181.119 115.853 cv
180.903 115.711 180.642 115.641 180.338 115.641 cv
179.83 115.641 179.454 115.85 179.213 116.269 cv
178.971 116.688 178.85 117.232 178.85 117.902 cv
178.85 118.015 li
cp
177.792 117.902 mo
177.792 116.967 177.992 116.213 178.391 115.641 cv
178.79 115.068 179.35 114.781 180.069 114.781 cv
180.41 114.781 180.711 114.844 180.975 114.969 cv
181.237 115.095 181.462 115.277 181.648 115.517 cv
181.648 112.321 li
182.706 112.321 li
182.706 120.7 li
181.895 120.7 li
181.734 119.964 li
181.544 120.244 181.31 120.455 181.031 120.598 cv
180.751 120.741 180.427 120.813 180.059 120.813 cv
179.35 120.813 178.794 120.556 178.394 120.042 cv
177.993 119.528 177.792 118.853 177.792 118.015 cv
177.792 117.902 li
cp
f
185.43 120.7 mo
184.372 120.7 li
184.372 114.889 li
185.43 114.889 li
185.43 120.7 li
cp
185.43 113.401 mo
184.372 113.401 li
184.372 112.321 li
185.43 112.321 li
185.43 113.401 li
cp
f
188.002 114.889 mo
188.078 115.753 li
188.271 115.445 188.514 115.206 188.806 115.036 cv
189.097 114.866 189.429 114.781 189.802 114.781 cv
190.428 114.781 190.914 114.965 191.257 115.332 cv
191.601 115.699 191.773 116.266 191.773 117.032 cv
191.773 120.7 li
190.715 120.7 li
190.715 117.053 li
190.715 116.541 190.614 116.178 190.411 115.963 cv
190.209 115.748 189.9 115.641 189.485 115.641 cv
189.159 115.641 188.882 115.706 188.655 115.837 cv
188.428 115.967 188.248 116.151 188.115 116.387 cv
188.115 120.7 li
187.057 120.7 li
187.057 114.889 li
188.002 114.889 li
cp
f
194.179 118.015 mo
194.179 118.598 194.299 119.067 194.539 119.422 cv
194.779 119.776 195.149 119.954 195.651 119.954 cv
195.97 119.954 196.236 119.881 196.451 119.736 cv
196.666 119.591 196.843 119.386 196.983 119.121 cv
196.983 116.446 li
196.847 116.199 196.669 116.003 196.451 115.858 cv
196.233 115.713 195.97 115.641 195.662 115.641 cv
195.157 115.641 194.783 115.85 194.542 116.269 cv
194.3 116.688 194.179 117.232 194.179 117.902 cv
194.179 118.015 li
cp
193.121 117.902 mo
193.121 116.967 193.321 116.213 193.72 115.641 cv
194.119 115.068 194.677 114.781 195.393 114.781 cv
195.762 114.781 196.086 114.855 196.365 115.004 cv
196.645 115.153 196.879 115.367 197.069 115.646 cv
197.198 114.889 li
198.041 114.889 li
198.041 120.732 li
198.041 121.477 197.824 122.049 197.391 122.448 cv
196.958 122.848 196.333 123.047 195.517 123.047 cv
195.237 123.047 194.936 123.009 194.611 122.932 cv
194.288 122.855 194.002 122.75 193.755 122.618 cv
193.916 121.796 li
194.12 121.903 194.366 121.99 194.654 122.057 cv
194.943 122.123 195.227 122.156 195.506 122.156 cv
196.021 122.156 196.396 122.039 196.631 121.804 cv
196.866 121.569 196.983 121.212 196.983 120.732 cv
196.983 120.072 li
196.793 120.315 196.566 120.499 196.301 120.625 cv
196.036 120.751 195.729 120.813 195.382 120.813 cv
194.673 120.813 194.119 120.556 193.72 120.042 cv
193.321 119.528 193.121 118.853 193.121 118.015 cv
193.121 117.902 li
cp
f
212.5 85.1719 mo
152 85.1719 li
152 46.5298 li
212.5 46.5298 li
212.5 85.1719 li
cp
149 43.4409 mo
149 88.2607 li
215.5 88.2607 li
215.5 43.4409 li
149 43.4409 li
cp
.0588235 .188235 .247059 rgb
f
212.5 52.8291 mo
152 52.8291 li
152 46.5298 li
212.5 46.5298 li
212.5 52.8291 li
cp
.172549 .345098 .443137 rgb
f
201.768 51.0684 mo
198.99 51.0684 li
198.99 48.2905 li
201.768 48.2905 li
201.768 51.0684 li
cp
.992157 .776471 .227451 rgb
f
205.884 51.0684 mo
203.106 51.0684 li
203.106 48.2905 li
205.884 48.2905 li
205.884 51.0684 li
cp
.756863 .839216 .294118 rgb
f
210 51.0684 mo
207.222 51.0684 li
207.222 48.2905 li
210 48.2905 li
210 51.0684 li
cp
.992157 .411765 .168627 rgb
f
182.25 85.1719 mo
152 85.1719 li
152 52.8291 li
182.25 52.8291 li
182.25 85.1719 li
cp
.0862745 .756863 .819608 rgb
f
212.5 85.1719 mo
182.25 85.1719 li
182.25 52.8291 li
212.5 52.8291 li
212.5 85.1719 li
cp
.0784314 .690196 .74902 rgb
f
168.585 69.8262 mo
168.585 69.8999 li
175.641 72.3823 li
175.641 75.7085 li
165.099 71.2207 li
165.099 68.4443 li
175.641 63.9688 li
175.641 67.2949 li
168.585 69.8262 li
cp
1 1 1 rgb
f
180.496 78.0811 mo
177.022 78.0811 li
183.553 58.7471 li
187.026 58.7471 li
180.496 78.0811 li
cp
f
195.904 69.9609 mo
195.904 69.8877 li
188.737 67.3682 li
188.737 64.0786 li
199.401 68.5547 li
199.401 71.3306 li
188.737 75.8184 li
188.737 72.5166 li
195.904 69.9609 li
cp
f
321.073 43.2139 mo
312.28 43.2139 li
312.28 87.8286 li
321.073 87.8286 li
322.851 87.8286 324.291 86.3882 324.291 84.6113 cv
324.291 46.4312 li
324.291 44.6538 322.851 43.2139 321.073 43.2139 cv
cp
.0588235 .188235 .247059 rgb
f
303.485 43.2139 mo
301.708 43.2139 300.268 44.6538 300.268 46.4312 cv
300.268 84.6113 li
300.268 86.3882 301.708 87.8286 303.485 87.8286 cv
312.28 87.8286 li
312.28 43.2139 li
303.485 43.2139 li
cp
.172549 .345098 .443137 rgb
f
317.165 45.8013 mo
307.395 45.8013 li
307.395 44.9985 li
317.165 44.9985 li
317.165 45.8013 li
cp
1 1 1 rgb
f
312.28 81.8535 mo
311.136 81.8535 310.204 82.7832 310.204 83.9287 cv
310.204 85.0732 311.136 86.0049 312.28 86.0049 cv
313.425 86.0049 314.355 85.0732 314.355 83.9287 cv
314.355 82.7832 313.425 81.8535 312.28 81.8535 cv
cp
312.28 86.5815 mo
310.817 86.5815 309.627 85.3916 309.627 83.9287 cv
309.627 82.4673 310.817 81.2764 312.28 81.2764 cv
313.742 81.2764 314.933 82.4673 314.933 83.9287 cv
314.933 85.3916 313.742 86.5815 312.28 86.5815 cv
cp
f
301.435 48.0522 mo
301.435 79.668 li
312.397 79.668 li
312.397 48.0522 li
301.435 48.0522 li
cp
.0862745 .756863 .819608 rgb
f
323.126 48.0522 mo
312.397 48.0522 li
312.397 79.668 li
323.126 79.668 li
323.126 48.0522 li
cp
.0705882 .615686 .670588 rgb
f
261.476 99.6797 mo
261.476 104.873 li
261.476 105.733 261.196 106.404 260.638 106.888 cv
260.079 107.371 259.359 107.613 258.478 107.613 cv
257.63 107.613 256.935 107.37 256.395 106.885 cv
255.854 106.4 255.584 105.729 255.584 104.873 cv
255.584 99.6797 li
256.642 99.6797 li
256.642 104.873 li
256.642 105.472 256.813 105.939 257.154 106.278 cv
257.496 106.616 257.938 106.786 258.478 106.786 cv
259.051 106.786 259.518 106.616 259.878 106.278 cv
260.237 105.939 260.418 105.472 260.418 104.873 cv
260.418 99.6797 li
261.476 99.6797 li
cp
.501961 .501961 .501961 rgb
f
266.385 105.937 mo
266.385 105.704 266.296 105.515 266.119 105.368 cv
265.941 105.221 265.605 105.092 265.111 104.981 cv
264.428 104.834 263.902 104.628 263.535 104.363 cv
263.168 104.098 262.984 103.744 262.984 103.3 cv
262.984 102.827 263.186 102.422 263.589 102.086 cv
263.992 101.749 264.514 101.581 265.154 101.581 cv
265.814 101.581 266.348 101.76 266.756 102.118 cv
267.164 102.476 267.359 102.894 267.341 103.37 cv
267.33 103.402 li
266.32 103.402 li
266.32 103.151 266.21 102.924 265.99 102.72 cv
265.77 102.516 265.491 102.414 265.154 102.414 cv
264.782 102.414 264.504 102.498 264.319 102.666 cv
264.135 102.835 264.043 103.035 264.043 103.268 cv
264.043 103.497 264.123 103.674 264.282 103.799 cv
264.441 103.925 264.77 104.039 265.268 104.143 cv
265.98 104.294 266.521 104.506 266.89 104.782 cv
267.258 105.058 267.443 105.418 267.443 105.862 cv
267.443 106.377 267.234 106.798 266.817 107.124 cv
266.4 107.45 265.855 107.613 265.182 107.613 cv
264.44 107.613 263.857 107.425 263.431 107.049 cv
263.004 106.673 262.803 106.234 262.824 105.733 cv
262.834 105.701 li
263.844 105.701 li
263.862 106.077 264.002 106.352 264.264 106.525 cv
264.524 106.699 264.83 106.786 265.182 106.786 cv
265.558 106.786 265.852 106.706 266.065 106.547 cv
266.278 106.387 266.385 106.184 266.385 105.937 cv
cp
f
270.998 102.414 mo
270.63 102.414 270.324 102.556 270.082 102.841 cv
269.842 103.125 269.693 103.49 269.64 103.934 cv
269.65 103.96 li
272.271 103.96 li
272.271 103.874 li
272.271 103.452 272.168 103.103 271.96 102.827 cv
271.752 102.551 271.432 102.414 270.998 102.414 cv
cp
271.165 107.613 mo
270.33 107.613 269.68 107.346 269.213 106.813 cv
268.746 106.279 268.512 105.577 268.512 104.707 cv
268.512 104.471 li
268.512 103.636 268.752 102.946 269.234 102.4 cv
269.716 101.854 270.304 101.581 270.998 101.581 cv
271.775 101.581 272.358 101.823 272.746 102.306 cv
273.135 102.79 273.33 103.432 273.33 104.234 cv
273.33 104.793 li
269.613 104.793 li
269.597 104.82 li
269.597 105.403 269.726 105.877 269.983 106.24 cv
270.241 106.604 270.635 106.786 271.165 106.786 cv
271.523 106.786 271.838 106.734 272.107 106.633 cv
272.378 106.53 272.609 106.39 272.803 106.211 cv
273.217 106.898 li
273.01 107.099 272.735 107.268 272.395 107.406 cv
272.055 107.544 271.645 107.613 271.165 107.613 cv
cp
f
277.267 102.623 mo
276.725 102.591 li
276.445 102.591 276.209 102.657 276.018 102.79 cv
275.826 102.922 275.679 103.108 275.574 103.348 cv
275.574 107.5 li
274.517 107.5 li
274.517 101.688 li
275.462 101.688 li
275.564 102.537 li
275.728 102.236 275.932 102.002 276.174 101.834 cv
276.416 101.665 276.693 101.581 277.009 101.581 cv
277.088 101.581 277.162 101.587 277.234 101.6 cv
277.307 101.612 277.365 101.626 277.412 101.64 cv
277.267 102.623 li
cp
f
282.246 107.5 mo
281.188 107.5 li
281.188 101.688 li
282.246 101.688 li
282.246 107.5 li
cp
282.246 100.201 mo
281.188 100.201 li
281.188 99.1211 li
282.246 99.1211 li
282.246 100.201 li
cp
f
284.818 101.688 mo
284.894 102.553 li
285.087 102.245 285.33 102.006 285.621 101.836 cv
285.913 101.666 286.245 101.581 286.617 101.581 cv
287.244 101.581 287.729 101.765 288.073 102.132 cv
288.417 102.498 288.589 103.065 288.589 103.831 cv
288.589 107.5 li
287.531 107.5 li
287.531 103.853 li
287.531 103.341 287.43 102.978 287.227 102.763 cv
287.025 102.548 286.717 102.44 286.301 102.44 cv
285.975 102.44 285.698 102.506 285.471 102.637 cv
285.244 102.767 285.064 102.951 284.932 103.187 cv
284.932 107.5 li
283.873 107.5 li
283.873 101.688 li
284.818 101.688 li
cp
f
291.597 100.287 mo
291.597 101.688 li
292.697 101.688 li
292.697 102.473 li
291.597 102.473 li
291.597 106.002 li
291.597 106.273 291.652 106.465 291.766 106.576 cv
291.879 106.687 292.028 106.743 292.215 106.743 cv
292.275 106.743 292.344 106.734 292.418 106.719 cv
292.494 106.702 292.557 106.686 292.606 106.668 cv
292.752 107.393 li
292.673 107.457 292.557 107.51 292.402 107.551 cv
292.248 107.592 292.096 107.613 291.945 107.613 cv
291.516 107.613 291.174 107.483 290.92 107.224 cv
290.666 106.964 290.539 106.557 290.539 106.002 cv
290.539 102.473 li
289.615 102.473 li
289.615 101.688 li
290.539 101.688 li
290.539 100.287 li
291.597 100.287 li
cp
f
296.07 102.414 mo
295.702 102.414 295.396 102.556 295.154 102.841 cv
294.914 103.125 294.766 103.49 294.712 103.934 cv
294.723 103.96 li
297.344 103.96 li
297.344 103.874 li
297.344 103.452 297.24 103.103 297.032 102.827 cv
296.824 102.551 296.504 102.414 296.07 102.414 cv
cp
296.237 107.613 mo
295.402 107.613 294.752 107.346 294.285 106.813 cv
293.818 106.279 293.584 105.577 293.584 104.707 cv
293.584 104.471 li
293.584 103.636 293.824 102.946 294.307 102.4 cv
294.788 101.854 295.376 101.581 296.07 101.581 cv
296.848 101.581 297.431 101.823 297.818 102.306 cv
298.207 102.79 298.402 103.432 298.402 104.234 cv
298.402 104.793 li
294.685 104.793 li
294.669 104.82 li
294.669 105.403 294.798 105.877 295.056 106.24 cv
295.314 106.604 295.707 106.786 296.237 106.786 cv
296.596 106.786 296.91 106.734 297.18 106.633 cv
297.45 106.53 297.682 106.39 297.875 106.211 cv
298.289 106.898 li
298.082 107.099 297.808 107.268 297.467 107.406 cv
297.127 107.544 296.717 107.613 296.237 107.613 cv
cp
f
302.339 102.623 mo
301.797 102.591 li
301.518 102.591 301.281 102.657 301.09 102.79 cv
300.898 102.922 300.751 103.108 300.646 103.348 cv
300.646 107.5 li
299.589 107.5 li
299.589 101.688 li
300.534 101.688 li
300.637 102.537 li
300.801 102.236 301.004 102.002 301.246 101.834 cv
301.488 101.665 301.766 101.581 302.081 101.581 cv
302.16 101.581 302.234 101.587 302.307 101.6 cv
302.379 101.612 302.438 101.626 302.484 101.64 cv
302.339 102.623 li
cp
f
303.961 107.5 mo
303.961 102.473 li
303.053 102.473 li
303.053 101.688 li
303.961 101.688 li
303.961 100.953 li
303.961 100.333 304.123 99.8545 304.447 99.5156 cv
304.771 99.1777 305.223 99.0083 305.803 99.0083 cv
305.925 99.0083 306.047 99.0181 306.172 99.0381 cv
306.295 99.0576 306.432 99.0854 306.582 99.1211 cv
306.453 99.9268 li
306.389 99.9126 306.31 99.8999 306.219 99.8892 cv
306.129 99.8784 306.032 99.873 305.932 99.873 cv
305.624 99.873 305.395 99.9653 305.244 100.149 cv
305.094 100.334 305.02 100.602 305.02 100.953 cv
305.02 101.688 li
306.072 101.688 li
306.072 102.473 li
305.02 102.473 li
305.02 107.5 li
303.961 107.5 li
cp
f
308.956 106.727 mo
309.34 106.727 309.685 106.628 309.992 106.431 cv
310.301 106.234 310.501 106.009 310.594 105.754 cv
310.594 104.809 li
309.407 104.809 li
308.98 104.809 308.641 104.916 308.385 105.131 cv
308.128 105.346 308 105.599 308 105.889 cv
308 106.146 308.08 106.351 308.242 106.501 cv
308.402 106.651 308.641 106.727 308.956 106.727 cv
cp
310.713 107.5 mo
310.677 107.325 310.648 107.17 310.629 107.035 cv
310.609 106.901 310.598 106.766 310.594 106.63 cv
310.397 106.909 310.141 107.143 309.824 107.331 cv
309.506 107.519 309.166 107.613 308.801 107.613 cv
308.195 107.613 307.734 107.458 307.418 107.148 cv
307.1 106.838 306.941 106.412 306.941 105.867 cv
306.941 105.312 307.166 104.878 307.615 104.564 cv
308.065 104.252 308.675 104.095 309.445 104.095 cv
310.594 104.095 li
310.594 103.52 li
310.594 103.18 310.49 102.91 310.283 102.712 cv
310.075 102.513 309.781 102.414 309.402 102.414 cv
309.059 102.414 308.781 102.499 308.569 102.671 cv
308.357 102.843 308.252 103.049 308.252 103.289 cv
307.248 103.3 li
307.237 103.268 li
307.213 102.845 307.41 102.459 307.83 102.107 cv
308.252 101.756 308.795 101.581 309.461 101.581 cv
310.119 101.581 310.65 101.748 311.051 102.083 cv
311.451 102.418 311.652 102.9 311.652 103.531 cv
311.652 106.329 li
311.652 106.537 311.663 106.737 311.685 106.931 cv
311.706 107.124 311.746 107.314 311.803 107.5 cv
310.713 107.5 li
cp
f
315.498 106.786 mo
315.824 106.786 316.108 106.677 316.352 106.461 cv
316.596 106.244 316.717 105.978 316.717 105.663 cv
317.674 105.663 li
317.689 105.695 li
317.703 106.197 317.488 106.642 317.045 107.03 cv
316.602 107.419 316.086 107.613 315.498 107.613 cv
314.682 107.613 314.051 107.335 313.607 106.78 cv
313.164 106.225 312.941 105.534 312.941 104.707 cv
312.941 104.481 li
312.941 103.662 313.164 102.973 313.609 102.416 cv
314.057 101.859 314.685 101.581 315.498 101.581 cv
316.146 101.581 316.678 101.782 317.09 102.183 cv
317.504 102.584 317.703 103.076 317.689 103.66 cv
317.679 103.692 li
316.717 103.692 li
316.717 103.337 316.602 103.036 316.371 102.787 cv
316.141 102.538 315.85 102.414 315.498 102.414 cv
314.978 102.414 314.6 102.615 314.361 103.018 cv
314.124 103.421 314.005 103.909 314.005 104.481 cv
314.005 104.707 li
314.005 105.29 314.122 105.783 314.357 106.184 cv
314.592 106.585 314.972 106.786 315.498 106.786 cv
cp
f
321.185 102.414 mo
320.817 102.414 320.512 102.556 320.27 102.841 cv
320.029 103.125 319.881 103.49 319.827 103.934 cv
319.838 103.96 li
322.459 103.96 li
322.459 103.874 li
322.459 103.452 322.355 103.103 322.147 102.827 cv
321.939 102.551 321.619 102.414 321.185 102.414 cv
cp
321.352 107.613 mo
320.518 107.613 319.867 107.346 319.4 106.813 cv
318.934 106.279 318.699 105.577 318.699 104.707 cv
318.699 104.471 li
318.699 103.636 318.939 102.946 319.422 102.4 cv
319.903 101.854 320.491 101.581 321.185 101.581 cv
321.963 101.581 322.546 101.823 322.934 102.306 cv
323.322 102.79 323.518 103.432 323.518 104.234 cv
323.518 104.793 li
319.801 104.793 li
319.784 104.82 li
319.784 105.403 319.913 105.877 320.171 106.24 cv
320.429 106.604 320.822 106.786 321.352 106.786 cv
321.711 106.786 322.025 106.734 322.295 106.633 cv
322.565 106.53 322.797 106.39 322.99 106.211 cv
323.404 106.898 li
323.197 107.099 322.923 107.268 322.582 107.406 cv
322.242 107.544 321.832 107.613 321.352 107.613 cv
cp
f
274.43 118.015 mo
274.43 118.602 274.551 119.072 274.79 119.425 cv
275.029 119.777 275.402 119.954 275.907 119.954 cv
276.223 119.954 276.487 119.882 276.702 119.739 cv
276.917 119.596 277.092 119.395 277.228 119.137 cv
277.228 116.425 li
277.092 116.185 276.916 115.994 276.699 115.853 cv
276.482 115.711 276.223 115.641 275.918 115.641 cv
275.41 115.641 275.034 115.85 274.793 116.269 cv
274.551 116.688 274.43 117.232 274.43 117.902 cv
274.43 118.015 li
cp
273.372 117.902 mo
273.372 116.967 273.572 116.213 273.971 115.641 cv
274.37 115.068 274.93 114.781 275.649 114.781 cv
275.99 114.781 276.291 114.844 276.555 114.969 cv
276.817 115.095 277.043 115.277 277.228 115.517 cv
277.228 112.321 li
278.287 112.321 li
278.287 120.7 li
277.476 120.7 li
277.314 119.964 li
277.125 120.244 276.891 120.455 276.611 120.598 cv
276.332 120.741 276.008 120.813 275.639 120.813 cv
274.93 120.813 274.375 120.556 273.974 120.042 cv
273.572 119.528 273.372 118.853 273.372 118.015 cv
273.372 117.902 li
cp
f
282.105 115.614 mo
281.736 115.614 281.432 115.756 281.189 116.041 cv
280.948 116.325 280.801 116.69 280.746 117.134 cv
280.758 117.161 li
283.379 117.161 li
283.379 117.075 li
283.379 116.652 283.274 116.303 283.066 116.027 cv
282.859 115.752 282.539 115.614 282.105 115.614 cv
cp
282.271 120.813 mo
281.438 120.813 280.787 120.546 280.319 120.013 cv
279.852 119.479 279.619 118.777 279.619 117.907 cv
279.619 117.671 li
279.619 116.836 279.859 116.146 280.341 115.601 cv
280.822 115.054 281.41 114.781 282.105 114.781 cv
282.883 114.781 283.465 115.023 283.853 115.506 cv
284.242 115.99 284.436 116.632 284.436 117.435 cv
284.436 117.993 li
280.72 117.993 li
280.703 118.02 li
280.703 118.604 280.832 119.077 281.09 119.44 cv
281.348 119.804 281.742 119.986 282.271 119.986 cv
282.63 119.986 282.944 119.935 283.215 119.833 cv
283.484 119.73 283.717 119.59 283.91 119.411 cv
284.324 120.099 li
284.116 120.299 283.842 120.468 283.502 120.606 cv
283.162 120.744 282.752 120.813 282.271 120.813 cv
cp
f
289.002 119.137 mo
289.002 118.904 288.913 118.715 288.736 118.568 cv
288.559 118.421 288.223 118.292 287.728 118.181 cv
287.045 118.034 286.52 117.829 286.152 117.563 cv
285.785 117.298 285.602 116.944 285.602 116.5 cv
285.602 116.027 285.804 115.623 286.206 115.286 cv
286.609 114.95 287.131 114.781 287.771 114.781 cv
288.431 114.781 288.965 114.96 289.373 115.318 cv
289.781 115.676 289.977 116.094 289.958 116.57 cv
289.947 116.602 li
288.938 116.602 li
288.938 116.352 288.827 116.124 288.607 115.92 cv
288.387 115.716 288.108 115.614 287.771 115.614 cv
287.399 115.614 287.121 115.698 286.936 115.866 cv
286.752 116.035 286.66 116.235 286.66 116.468 cv
286.66 116.697 286.74 116.874 286.899 116.999 cv
287.059 117.125 287.387 117.239 287.885 117.343 cv
288.598 117.494 289.139 117.706 289.507 117.982 cv
289.875 118.258 290.06 118.618 290.06 119.062 cv
290.06 119.578 289.852 119.998 289.435 120.324 cv
289.018 120.65 288.473 120.813 287.799 120.813 cv
287.058 120.813 286.475 120.625 286.048 120.249 cv
285.621 119.873 285.42 119.435 285.441 118.933 cv
285.451 118.901 li
286.461 118.901 li
286.479 119.277 286.619 119.552 286.881 119.726 cv
287.142 119.899 287.447 119.986 287.799 119.986 cv
288.175 119.986 288.469 119.906 288.683 119.747 cv
288.896 119.587 289.002 119.384 289.002 119.137 cv
cp
f
292.52 120.7 mo
291.462 120.7 li
291.462 114.889 li
292.52 114.889 li
292.52 120.7 li
cp
292.52 113.401 mo
291.462 113.401 li
291.462 112.321 li
292.52 112.321 li
292.52 113.401 li
cp
f
295.018 118.015 mo
295.018 118.598 295.138 119.067 295.377 119.422 cv
295.617 119.776 295.988 119.954 296.489 119.954 cv
296.809 119.954 297.074 119.881 297.289 119.736 cv
297.504 119.591 297.682 119.386 297.821 119.121 cv
297.821 116.446 li
297.685 116.199 297.508 116.003 297.289 115.858 cv
297.071 115.713 296.809 115.641 296.5 115.641 cv
295.995 115.641 295.621 115.85 295.381 116.269 cv
295.139 116.688 295.018 117.232 295.018 117.902 cv
295.018 118.015 li
cp
293.959 117.902 mo
293.959 116.967 294.159 116.213 294.559 115.641 cv
294.957 115.068 295.516 114.781 296.231 114.781 cv
296.6 114.781 296.924 114.855 297.203 115.004 cv
297.482 115.153 297.717 115.367 297.907 115.646 cv
298.036 114.889 li
298.879 114.889 li
298.879 120.732 li
298.879 121.477 298.662 122.049 298.229 122.448 cv
297.797 122.848 297.172 123.047 296.355 123.047 cv
296.076 123.047 295.773 123.009 295.449 122.932 cv
295.126 122.855 294.84 122.75 294.594 122.618 cv
294.754 121.796 li
294.959 121.903 295.205 121.99 295.492 122.057 cv
295.781 122.123 296.064 122.156 296.344 122.156 cv
296.859 122.156 297.234 122.039 297.469 121.804 cv
297.704 121.569 297.821 121.212 297.821 120.732 cv
297.821 120.072 li
297.631 120.315 297.404 120.499 297.139 120.625 cv
296.874 120.751 296.568 120.813 296.221 120.813 cv
295.512 120.813 294.957 120.556 294.559 120.042 cv
294.159 119.528 293.959 118.853 293.959 118.015 cv
293.959 117.902 li
cp
f
301.345 114.889 mo
301.42 115.753 li
301.613 115.445 301.855 115.206 302.148 115.036 cv
302.439 114.866 302.771 114.781 303.145 114.781 cv
303.77 114.781 304.256 114.965 304.6 115.332 cv
304.943 115.699 305.115 116.266 305.115 117.032 cv
305.115 120.7 li
304.057 120.7 li
304.057 117.053 li
304.057 116.541 303.956 116.178 303.754 115.963 cv
303.551 115.748 303.242 115.641 302.827 115.641 cv
302.502 115.641 302.225 115.706 301.998 115.837 cv
301.77 115.967 301.59 116.151 301.457 116.387 cv
301.457 120.7 li
300.399 120.7 li
300.399 114.889 li
301.345 114.889 li
cp
f
260.554 31.4922 mo
258.162 31.4922 256.223 33.4312 256.223 35.8213 cv
256.223 83.4526 li
256.223 85.8428 258.162 87.7817 260.554 87.7817 cv
277.583 87.7817 li
277.583 31.4922 li
260.554 31.4922 li
cp
.172549 .345098 .443137 rgb
f
294.614 31.4922 mo
277.583 31.4922 li
277.583 87.7817 li
294.614 87.7817 li
297.006 87.7817 298.942 85.8428 298.942 83.4526 cv
298.942 35.8213 li
298.942 33.4312 297.006 31.4922 294.614 31.4922 cv
cp
.0588235 .188235 .247059 rgb
f
279.968 84.4878 mo
279.968 85.8042 278.898 86.8711 277.583 86.8711 cv
276.266 86.8711 275.199 85.8042 275.199 84.4878 cv
275.199 83.1704 276.266 82.103 277.583 82.103 cv
278.898 82.103 279.968 83.1704 279.968 84.4878 cv
cp
1 1 1 rgb
f
289.439 33.7749 mo
289.439 34.2285 289.071 34.5947 288.618 34.5947 cv
288.164 34.5947 287.796 34.2285 287.796 33.7749 cv
287.796 33.3208 288.164 32.9521 288.618 32.9521 cv
289.071 32.9521 289.439 33.3208 289.439 33.7749 cv
cp
f
258.109 36.1558 mo
258.109 80.5869 li
277.492 80.5869 li
277.492 36.1558 li
258.109 36.1558 li
cp
.992157 .776471 .227451 rgb
f
297.058 36.1558 mo
277.492 36.1558 li
277.492 80.5869 li
297.058 80.5869 li
297.058 36.1558 li
cp
.992157 .627451 .0784314 rgb
f
267.564 71.1221 mo
265.358 71.1221 263.564 69.3276 263.564 67.1221 cv
263.564 58.7305 li
263.564 56.5249 265.358 54.7305 267.564 54.7305 cv
313.164 54.7305 li
315.37 54.7305 317.164 56.5249 317.164 58.7305 cv
317.164 67.1221 li
317.164 69.3276 315.37 71.1221 313.164 71.1221 cv
267.564 71.1221 li
cp
1 1 1 rgb
f
313.164 70.1221 mo
267.564 70.1221 li
265.907 70.1221 264.564 68.7788 264.564 67.1221 cv
264.564 58.7305 li
264.564 57.0737 265.907 55.7305 267.564 55.7305 cv
313.164 55.7305 li
314.821 55.7305 316.164 57.0737 316.164 58.7305 cv
316.164 67.1221 li
316.164 68.7788 314.821 70.1221 313.164 70.1221 cv
cp
.623529 .713726 .0117647 rgb
f
274.431 63.5444 mo
275.564 63.5444 li
275.01 61.7778 li
274.989 61.7778 li
274.431 63.5444 li
cp
275.809 64.333 mo
274.184 64.333 li
273.846 65.4141 li
272.795 65.4141 li
274.486 60.4004 li
275.516 60.4004 li
277.199 65.4141 li
276.149 65.4141 li
275.809 64.333 li
cp
1 1 1 rgb
f
278.681 62.8213 mo
279.594 62.8213 li
279.873 62.8213 280.086 62.7446 280.23 62.5923 cv
280.375 62.4395 280.447 62.2451 280.447 62.0083 cv
280.447 61.7676 280.375 61.5684 280.232 61.4111 cv
280.089 61.2539 279.876 61.1753 279.594 61.1753 cv
278.681 61.1753 li
278.681 62.8213 li
cp
278.681 63.5957 mo
278.681 65.4141 li
277.675 65.4141 li
277.675 60.4004 li
279.594 60.4004 li
280.17 60.4004 280.623 60.5479 280.955 60.8428 cv
281.287 61.1377 281.453 61.5239 281.453 62.0015 cv
281.453 62.4814 281.287 62.8672 280.955 63.1587 cv
280.623 63.4502 280.17 63.5957 279.594 63.5957 cv
278.681 63.5957 li
cp
f
283.167 62.8213 mo
284.08 62.8213 li
284.359 62.8213 284.572 62.7446 284.717 62.5923 cv
284.861 62.4395 284.934 62.2451 284.934 62.0083 cv
284.934 61.7676 284.861 61.5684 284.719 61.4111 cv
284.575 61.2539 284.362 61.1753 284.08 61.1753 cv
283.167 61.1753 li
283.167 62.8213 li
cp
283.167 63.5957 mo
283.167 65.4141 li
282.161 65.4141 li
282.161 60.4004 li
284.08 60.4004 li
284.656 60.4004 285.109 60.5479 285.441 60.8428 cv
285.773 61.1377 285.939 61.5239 285.939 62.0015 cv
285.939 62.4814 285.773 62.8672 285.441 63.1587 cv
285.109 63.4502 284.656 63.5957 284.08 63.5957 cv
283.167 63.5957 li
cp
f
287.658 62.6353 mo
288.385 62.6353 li
288.667 62.6353 288.877 62.5757 289.017 62.4561 cv
289.155 62.3369 289.225 62.1602 289.225 61.9258 cv
289.225 61.6963 289.155 61.5137 289.017 61.3784 cv
288.877 61.2427 288.673 61.1753 288.401 61.1753 cv
287.658 61.1753 li
287.658 62.6353 li
cp
287.658 63.4102 mo
287.658 65.4141 li
286.648 65.4141 li
286.648 60.4004 li
288.401 60.4004 li
288.974 60.4004 289.421 60.5308 289.744 60.791 cv
290.068 61.0518 290.23 61.415 290.23 61.8809 cv
290.23 62.1382 290.162 62.3604 290.025 62.5474 cv
289.889 62.7344 289.689 62.8853 289.428 63 cv
289.724 63.0874 289.936 63.2334 290.066 63.4375 cv
290.196 63.6416 290.261 63.8945 290.261 64.1948 cv
290.261 64.5635 li
290.261 64.7036 290.28 64.8501 290.318 65.0024 cv
290.355 65.1553 290.421 65.2681 290.513 65.3418 cv
290.513 65.4141 li
289.476 65.4141 li
289.384 65.3408 289.325 65.2188 289.299 65.0488 cv
289.272 64.8794 289.259 64.7148 289.259 64.5566 cv
289.259 64.2021 li
289.259 63.9517 289.19 63.7573 289.054 63.6182 cv
288.918 63.4795 288.725 63.4102 288.474 63.4102 cv
287.658 63.4102 li
cp
f
294.148 62.4492 mo
294.148 62.0591 294.051 61.7388 293.855 61.4883 cv
293.661 61.2383 293.391 61.1133 293.047 61.1133 cv
292.707 61.1133 292.442 61.2383 292.253 61.4883 cv
292.064 61.7388 291.969 62.0591 291.969 62.4492 cv
291.969 63.3584 li
291.969 63.7554 292.064 64.0791 292.255 64.3296 cv
292.445 64.5796 292.712 64.7046 293.054 64.7046 cv
293.397 64.7046 293.667 64.5796 293.859 64.3296 cv
294.052 64.0791 294.148 63.7554 294.148 63.3584 cv
294.148 62.4492 li
cp
295.15 63.3584 mo
295.15 63.9761 294.957 64.4849 294.568 64.8853 cv
294.181 65.2861 293.676 65.4863 293.054 65.4863 cv
292.434 65.4863 291.931 65.2856 291.545 64.8838 cv
291.16 64.4819 290.967 63.9736 290.967 63.3584 cv
290.967 62.4561 li
290.967 61.8433 291.159 61.3354 291.544 60.9321 cv
291.928 60.5293 292.429 60.3281 293.047 60.3281 cv
293.669 60.3281 294.175 60.5293 294.565 60.9321 cv
294.955 61.3354 295.15 61.8433 295.15 62.4561 cv
295.15 63.3584 li
cp
f
297.499 64.0537 mo
297.561 64.3296 li
297.582 64.3296 li
297.641 64.0645 li
298.732 60.4004 li
299.793 60.4004 li
298.088 65.4141 li
297.056 65.4141 li
295.354 60.4004 li
296.415 60.4004 li
297.499 64.0537 li
cp
f
303.14 63.2104 mo
301.276 63.2104 li
301.276 64.6426 li
303.49 64.6426 li
303.49 65.4141 li
300.27 65.4141 li
300.27 60.4004 li
303.48 60.4004 li
303.48 61.1753 li
301.276 61.1753 li
301.276 62.4355 li
303.14 62.4355 li
303.14 63.2104 li
cp
f
305.199 61.1753 mo
305.199 64.6426 li
305.943 64.6426 li
306.271 64.6426 306.537 64.5195 306.74 64.2725 cv
306.943 64.0259 307.045 63.7095 307.045 63.3237 cv
307.045 62.4873 li
307.045 62.106 306.943 61.792 306.74 61.5454 cv
306.537 61.2983 306.271 61.1753 305.943 61.1753 cv
305.199 61.1753 li
cp
304.19 65.4141 mo
304.19 60.4004 li
305.943 60.4004 li
306.554 60.4004 307.058 60.5962 307.455 60.9873 cv
307.852 61.3789 308.051 61.8809 308.051 62.4941 cv
308.051 63.3237 li
308.051 63.939 307.852 64.4414 307.455 64.8306 cv
307.058 65.2197 306.554 65.4141 305.943 65.4141 cv
304.19 65.4141 li
cp
f
387.416 105.529 mo
387.416 105.174 387.289 104.877 387.034 104.637 cv
386.779 104.397 386.332 104.193 385.691 104.025 cv
384.896 103.828 384.275 103.538 383.83 103.155 cv
383.385 102.771 383.162 102.29 383.162 101.71 cv
383.162 101.098 383.401 100.587 383.881 100.179 cv
384.361 99.771 384.984 99.5669 385.75 99.5669 cv
386.574 99.5669 387.23 99.8008 387.719 100.268 cv
388.207 100.735 388.445 101.28 388.431 101.903 cv
388.414 101.936 li
387.404 101.936 li
387.404 101.492 387.25 101.124 386.939 100.835 cv
386.631 100.544 386.234 100.399 385.75 100.399 cv
385.256 100.399 384.877 100.52 384.615 100.759 cv
384.352 100.999 384.22 101.311 384.22 101.694 cv
384.22 102.034 384.363 102.318 384.652 102.545 cv
384.94 102.772 385.408 102.972 386.057 103.144 cv
386.844 103.348 387.444 103.649 387.855 104.046 cv
388.268 104.444 388.474 104.935 388.474 105.518 cv
388.474 106.148 388.226 106.655 387.73 107.038 cv
387.234 107.421 386.586 107.613 385.788 107.613 cv
385.033 107.613 384.365 107.401 383.787 106.979 cv
383.209 106.557 382.929 105.991 382.947 105.282 cv
382.957 105.249 li
383.967 105.249 li
383.967 105.74 384.153 106.119 384.525 106.386 cv
384.898 106.652 385.318 106.786 385.788 106.786 cv
386.289 106.786 386.685 106.673 386.978 106.447 cv
387.27 106.222 387.416 105.915 387.416 105.529 cv
cp
.501961 .501961 .501961 rgb
f
392.066 102.414 mo
391.698 102.414 391.393 102.556 391.15 102.841 cv
390.91 103.125 390.762 103.49 390.708 103.934 cv
390.719 103.96 li
393.34 103.96 li
393.34 103.874 li
393.34 103.452 393.236 103.103 393.028 102.827 cv
392.82 102.551 392.5 102.414 392.066 102.414 cv
cp
392.233 107.613 mo
391.398 107.613 390.748 107.346 390.281 106.813 cv
389.814 106.279 389.58 105.577 389.58 104.707 cv
389.58 104.471 li
389.58 103.636 389.82 102.946 390.303 102.4 cv
390.784 101.854 391.372 101.581 392.066 101.581 cv
392.844 101.581 393.427 101.823 393.814 102.306 cv
394.203 102.79 394.398 103.432 394.398 104.234 cv
394.398 104.793 li
390.682 104.793 li
390.665 104.82 li
390.665 105.403 390.794 105.877 391.052 106.24 cv
391.31 106.604 391.703 106.786 392.233 106.786 cv
392.592 106.786 392.906 106.734 393.176 106.633 cv
393.446 106.53 393.678 106.39 393.871 106.211 cv
394.285 106.898 li
394.078 107.099 393.804 107.268 393.463 107.406 cv
393.123 107.544 392.713 107.613 392.233 107.613 cv
cp
f
396.396 104.659 mo
396.396 105.274 396.525 105.783 396.785 106.184 cv
397.045 106.585 397.431 106.786 397.943 106.786 cv
398.447 106.786 398.831 106.585 399.092 106.184 cv
399.353 105.783 399.484 105.274 399.484 104.659 cv
399.484 104.54 li
399.484 103.932 399.353 103.425 399.09 103.021 cv
398.826 102.616 398.44 102.414 397.932 102.414 cv
397.428 102.414 397.045 102.616 396.785 103.021 cv
396.525 103.425 396.396 103.932 396.396 104.54 cv
396.396 104.659 li
cp
395.338 104.54 mo
395.338 103.681 395.57 102.973 396.036 102.416 cv
396.502 101.859 397.134 101.581 397.932 101.581 cv
398.738 101.581 399.375 101.858 399.842 102.414 cv
400.309 102.969 400.543 103.678 400.543 104.54 cv
400.543 104.659 li
400.543 105.525 400.31 106.234 399.844 106.786 cv
399.379 107.337 398.745 107.613 397.943 107.613 cv
397.141 107.613 396.506 107.336 396.039 106.783 cv
395.572 106.229 395.338 105.521 395.338 104.659 cv
395.338 104.54 li
cp
f
383.063 113.487 mo
383.063 114.889 li
384.164 114.889 li
384.164 115.673 li
383.063 115.673 li
383.063 119.202 li
383.063 119.474 383.119 119.665 383.232 119.776 cv
383.344 119.887 383.494 119.943 383.68 119.943 cv
383.741 119.943 383.809 119.935 383.885 119.919 cv
383.959 119.902 384.021 119.886 384.072 119.868 cv
384.217 120.593 li
384.139 120.657 384.021 120.71 383.868 120.751 cv
383.715 120.793 383.563 120.813 383.412 120.813 cv
382.982 120.813 382.641 120.683 382.386 120.424 cv
382.131 120.164 382.004 119.757 382.004 119.202 cv
382.004 115.673 li
381.08 115.673 li
381.08 114.889 li
382.004 114.889 li
382.004 113.487 li
383.063 113.487 li
cp
f
387.112 119.927 mo
387.496 119.927 387.841 119.828 388.148 119.631 cv
388.457 119.435 388.657 119.209 388.75 118.955 cv
388.75 118.009 li
387.563 118.009 li
387.137 118.009 386.797 118.117 386.541 118.331 cv
386.284 118.546 386.156 118.799 386.156 119.089 cv
386.156 119.347 386.236 119.551 386.398 119.701 cv
386.559 119.852 386.797 119.927 387.112 119.927 cv
cp
388.869 120.7 mo
388.833 120.525 388.805 120.37 388.785 120.235 cv
388.766 120.102 388.754 119.966 388.75 119.83 cv
388.554 120.109 388.297 120.343 387.98 120.531 cv
387.662 120.719 387.322 120.813 386.957 120.813 cv
386.352 120.813 385.891 120.658 385.574 120.349 cv
385.256 120.039 385.098 119.612 385.098 119.067 cv
385.098 118.512 385.322 118.078 385.771 117.765 cv
386.222 117.452 386.831 117.295 387.602 117.295 cv
388.75 117.295 li
388.75 116.72 li
388.75 116.38 388.646 116.11 388.439 115.912 cv
388.231 115.713 387.938 115.614 387.559 115.614 cv
387.215 115.614 386.938 115.7 386.726 115.872 cv
386.514 116.044 386.408 116.249 386.408 116.489 cv
385.404 116.5 li
385.394 116.468 li
385.369 116.045 385.566 115.659 385.986 115.308 cv
386.408 114.956 386.951 114.781 387.617 114.781 cv
388.275 114.781 388.807 114.949 389.207 115.283 cv
389.607 115.618 389.809 116.101 389.809 116.731 cv
389.809 119.529 li
389.809 119.737 389.819 119.938 389.841 120.131 cv
389.862 120.324 389.902 120.514 389.959 120.7 cv
388.869 120.7 li
cp
f
392.215 118.015 mo
392.215 118.598 392.335 119.067 392.574 119.422 cv
392.814 119.776 393.185 119.954 393.686 119.954 cv
394.006 119.954 394.271 119.881 394.486 119.736 cv
394.701 119.591 394.879 119.386 395.019 119.121 cv
395.019 116.446 li
394.883 116.199 394.705 116.003 394.486 115.858 cv
394.269 115.713 394.006 115.641 393.697 115.641 cv
393.192 115.641 392.818 115.85 392.578 116.269 cv
392.336 116.688 392.215 117.232 392.215 117.902 cv
392.215 118.015 li
cp
391.156 117.902 mo
391.156 116.967 391.356 116.213 391.756 115.641 cv
392.154 115.068 392.713 114.781 393.429 114.781 cv
393.797 114.781 394.121 114.855 394.4 115.004 cv
394.68 115.153 394.914 115.367 395.104 115.646 cv
395.233 114.889 li
396.076 114.889 li
396.076 120.732 li
396.076 121.477 395.859 122.049 395.427 122.448 cv
394.994 122.848 394.369 123.047 393.553 123.047 cv
393.273 123.047 392.971 123.009 392.646 122.932 cv
392.323 122.855 392.037 122.75 391.791 122.618 cv
391.951 121.796 li
392.156 121.903 392.402 121.99 392.689 122.057 cv
392.978 122.123 393.262 122.156 393.541 122.156 cv
394.057 122.156 394.432 122.039 394.666 121.804 cv
394.901 121.569 395.019 121.212 395.019 120.732 cv
395.019 120.072 li
394.828 120.315 394.602 120.499 394.336 120.625 cv
394.071 120.751 393.766 120.813 393.418 120.813 cv
392.709 120.813 392.154 120.556 391.756 120.042 cv
391.356 119.528 391.156 118.853 391.156 118.015 cv
391.156 117.902 li
cp
f
400.975 119.137 mo
400.975 118.904 400.887 118.715 400.709 118.568 cv
400.531 118.421 400.196 118.292 399.702 118.181 cv
399.018 118.034 398.492 117.829 398.125 117.563 cv
397.759 117.298 397.575 116.944 397.575 116.5 cv
397.575 116.027 397.777 115.623 398.18 115.286 cv
398.582 114.95 399.103 114.781 399.745 114.781 cv
400.404 114.781 400.938 114.96 401.346 115.318 cv
401.754 115.676 401.949 116.094 401.932 116.57 cv
401.92 116.602 li
400.91 116.602 li
400.91 116.352 400.801 116.124 400.58 115.92 cv
400.359 115.716 400.082 115.614 399.745 115.614 cv
399.373 115.614 399.094 115.698 398.91 115.866 cv
398.726 116.035 398.633 116.235 398.633 116.468 cv
398.633 116.697 398.713 116.874 398.873 116.999 cv
399.031 117.125 399.36 117.239 399.857 117.343 cv
400.57 117.494 401.111 117.706 401.48 117.982 cv
401.849 118.258 402.033 118.618 402.033 119.062 cv
402.033 119.578 401.824 119.998 401.408 120.324 cv
400.99 120.65 400.445 120.813 399.771 120.813 cv
399.031 120.813 398.447 120.625 398.021 120.249 cv
397.595 119.873 397.393 119.435 397.414 118.933 cv
397.425 118.901 li
398.435 118.901 li
398.453 119.277 398.592 119.552 398.853 119.726 cv
399.115 119.899 399.421 119.986 399.771 119.986 cv
400.148 119.986 400.442 119.906 400.656 119.747 cv
400.869 119.587 400.975 119.384 400.975 119.137 cv
cp
f
411.49 42.2734 mo
411.489 40.6167 410.358 38.54 408.971 37.6357 cv
395.506 28.8672 li
394.814 28.4165 393.907 28.1909 393 28.1895 cv
393 34.2295 li
394.821 34.2295 396.298 35.7061 396.298 37.5273 cv
396.298 39.3486 394.821 40.8252 393 40.8252 cv
393 88.1577 li
408.5 88.1577 li
410.157 88.1577 411.5 86.814 411.5 85.1572 cv
411.5 76.4126 411.498 51.0186 411.49 42.2734 cv
cp
.0588235 .188235 .247059 rgb
f
389.702 37.5273 mo
389.702 35.7061 391.179 34.2295 393 34.2295 cv
393 28.1895 li
392.088 28.188 391.175 28.4136 390.478 28.8672 cv
377.014 37.6357 li
375.626 38.54 374.5 40.6162 374.5 42.2729 cv
374.5 85.1577 li
374.5 86.8145 375.843 88.1577 377.5 88.1577 cv
393 88.1577 li
393 40.8252 li
391.179 40.8252 389.702 39.3486 389.702 37.5273 cv
cp
.172549 .345098 .443137 rgb
f
378 84.6577 mo
408 84.6577 li
408 75.4829 407.998 50.8599 407.99 42.2759 cv
407.99 41.8022 407.46 40.8291 407.06 40.5688 cv
393.595 31.7993 li
393.548 31.7715 393.333 31.6899 392.99 31.6895 cv
392.649 31.6895 392.435 31.7725 392.386 31.8018 cv
378.924 40.5679 li
378.527 40.8271 378 41.7993 378 42.2729 cv
378 84.6577 li
cp
408.5 85.6577 mo
377 85.6577 li
377 42.2729 li
377 41.459 377.695 40.1758 378.378 39.73 cv
391.843 30.9624 li
392.045 30.8306 392.453 30.6895 392.991 30.6895 cv
393.533 30.6899 393.94 30.8306 394.141 30.9619 cv
407.606 39.731 li
408.292 40.1777 408.99 41.4619 408.99 42.2754 cv
408.998 51.02 409 76.4131 409 85.1572 cv
409 85.6572 li
408.5 85.6577 li
cp
1 1 1 rgb
f
389.703 54.1719 mo
390.236 54.1719 390.658 53.9854 390.967 53.6123 cv
391.276 53.2383 391.576 52.5723 391.865 51.6133 cv
392.348 49.9971 392.923 48.7715 393.589 47.9346 cv
394.256 47.0977 395.161 46.6787 396.307 46.6787 cv
397.459 46.6787 398.4 47.1475 399.131 48.084 cv
399.861 49.0205 400.227 50.2227 400.227 51.6904 cv
400.227 53.248 399.834 54.502 399.049 55.4512 cv
398.264 56.4004 397.234 56.8594 395.959 56.8271 cv
395.901 56.8076 li
395.901 54.085 li
396.603 54.085 397.143 53.8711 397.52 53.4434 cv
397.895 53.0146 398.084 52.418 398.084 51.6523 cv
398.084 50.957 397.916 50.4238 397.582 50.0537 cv
397.247 49.6836 396.818 49.499 396.297 49.499 cv
395.82 49.499 395.43 49.7031 395.125 50.1113 cv
394.818 50.5205 394.495 51.2266 394.154 52.2314 cv
393.716 53.7891 393.154 54.9736 392.469 55.7842 cv
391.783 56.5957 390.867 57.001 389.722 57.001 cv
388.512 57.001 387.549 56.5283 386.835 55.582 cv
386.12 54.6357 385.764 53.3936 385.764 51.8545 cv
385.764 50.3486 386.14 49.0527 386.893 47.9678 cv
387.646 46.8838 388.77 46.3574 390.263 46.3896 cv
390.32 46.4092 li
390.32 49.1416 li
389.49 49.1416 388.879 49.3848 388.486 49.8701 cv
388.094 50.3564 387.896 51.0176 387.896 51.8545 cv
387.896 52.6074 388.064 53.1826 388.398 53.5781 cv
388.734 53.9736 389.168 54.1719 389.703 54.1719 cv
cp
f
392.145 67.0615 mo
392.145 61.8379 li
388.129 61.8379 li
388.129 68.0469 li
385.966 68.0469 li
385.966 59.0186 li
400.024 59.0186 li
400.024 68.0176 li
397.852 68.0176 li
397.852 61.8379 li
394.318 61.8379 li
394.318 67.0615 li
392.145 67.0615 li
cp
f
394.279 78.5811 mo
395.373 78.5811 396.271 78.3076 396.973 77.7607 cv
397.675 77.2129 398.025 76.457 398.025 75.4912 cv
398.025 74.5381 397.675 73.7969 396.973 73.2656 cv
396.271 72.7344 395.373 72.4688 394.279 72.4688 cv
391.73 72.4688 li
390.617 72.4688 389.709 72.7363 389.008 73.2705 cv
388.306 73.8047 387.955 74.5518 387.955 75.5107 cv
387.955 76.4766 388.306 77.2295 389.008 77.7705 cv
389.709 78.3105 390.617 78.5811 391.73 78.5811 cv
394.279 78.5811 li
cp
391.73 81.3906 mo
389.998 81.3906 388.571 80.8467 387.447 79.7588 cv
386.324 78.6709 385.764 77.2549 385.764 75.5107 cv
385.764 73.7725 386.326 72.3633 387.453 71.2813 cv
388.579 70.2002 390.005 69.6592 391.73 69.6592 cv
394.26 69.6592 li
395.978 69.6592 397.402 70.1982 398.533 71.2764 cv
399.662 72.3545 400.227 73.7598 400.227 75.4912 cv
400.227 77.2354 399.662 78.6553 398.533 79.749 cv
397.402 80.8438 395.978 81.3906 394.26 81.3906 cv
391.73 81.3906 li
cp
f
393.985 38.0234 mo
393.985 38.0234 393.896 38.1982 393.731 38.5259 cv
393.566 38.8354 393.316 39.2759 392.966 39.812 cv
392.266 40.8813 391.161 42.3535 389.501 43.8276 cv
387.856 45.3042 385.607 46.7539 382.906 47.6328 cv
381.563 48.0762 380.119 48.3779 378.641 48.5161 cv
377.526 48.5913 li
377.512 48.6021 377.154 48.6152 377.188 48.6348 cv
376.96 48.6982 li
376.619 48.8086 376.295 49.0117 375.967 49.3096 cv
375.309 49.9102 374.718 50.8979 374.262 51.9658 cv
373.799 53.0386 373.447 54.2061 373.167 55.3618 cv
372.608 57.6826 372.327 59.9688 372.16 61.9238 cv
371.997 63.8838 371.959 65.5269 371.96 66.6592 cv
371.963 67.7944 372 68.4141 372 68.4141 cv
372.1 70.0703 370.837 71.4941 369.181 71.5938 cv
367.524 71.6929 366.101 70.4307 366.001 68.7744 cv
365.996 68.6855 365.994 68.5972 365.997 68.5098 cv
366 68.4141 li
366 68.4141 366.022 67.6611 366.131 66.3975 cv
366.241 65.1323 366.439 63.3496 366.805 61.2275 cv
367.178 59.106 367.696 56.6406 368.575 54.0181 cv
369.02 52.708 369.551 51.3564 370.281 50.0044 cv
371.02 48.6655 371.928 47.2695 373.411 46.1304 cv
374.152 45.5732 375.063 45.106 376.058 44.9048 cv
376.311 44.8564 376.532 44.8169 376.838 44.7959 cv
377.209 44.7666 377.192 44.7866 377.518 44.7813 cv
378.435 44.7983 li
379.654 44.7886 380.848 44.644 381.976 44.377 cv
384.237 43.8506 386.215 42.8159 387.732 41.6714 cv
389.262 40.5337 390.349 39.3213 391.038 38.4404 cv
391.384 37.999 391.632 37.6367 391.791 37.3921 cv
391.938 37.1567 392.015 37.0313 392.015 37.0313 cv
392.066 36.9482 li
392.387 36.4316 393.065 36.2725 393.582 36.5928 cv
394.069 36.895 394.236 37.5205 393.985 38.0234 cv
cp
.992157 .627451 .0784314 rgb
f
50.8311 201.788 mo
50.9653 202.814 li
50.9976 202.819 li
51.1802 201.788 li
52.5659 196.68 li
53.6025 196.68 li
54.999 201.788 li
55.1816 202.835 li
55.2139 202.835 li
55.3589 201.788 li
56.4761 196.68 li
57.6255 196.68 li
55.7349 204.5 li
54.7896 204.5 li
53.2266 199.075 li
53.1084 198.372 li
53.0762 198.372 li
52.9634 199.075 li
51.3789 204.5 li
50.4336 204.5 li
48.5483 196.68 li
49.6924 196.68 li
50.8311 201.788 li
cp
.501961 .501961 .501961 rgb
f
60.6602 199.414 mo
60.2915 199.414 59.9863 199.556 59.7441 199.841 cv
59.5029 200.125 59.355 200.49 59.3013 200.934 cv
59.312 200.96 li
61.9331 200.96 li
61.9331 200.874 li
61.9331 200.452 61.8291 200.103 61.6216 199.827 cv
61.4141 199.551 61.0933 199.414 60.6602 199.414 cv
cp
60.8267 204.613 mo
59.9922 204.613 59.3418 204.346 58.874 203.813 cv
58.4072 203.279 58.1733 202.577 58.1733 201.707 cv
58.1733 201.471 li
58.1733 200.636 58.4141 199.946 58.8955 199.4 cv
59.3774 198.854 59.9653 198.581 60.6602 198.581 cv
61.437 198.581 62.02 198.823 62.4082 199.306 cv
62.7969 199.79 62.9912 200.432 62.9912 201.234 cv
62.9912 201.793 li
59.2744 201.793 li
59.2583 201.82 li
59.2583 202.403 59.3872 202.877 59.645 203.24 cv
59.9028 203.604 60.2969 203.786 60.8267 203.786 cv
61.1846 203.786 61.499 203.734 61.7695 203.633 cv
62.0396 203.53 62.2715 203.39 62.4648 203.211 cv
62.8784 203.898 li
62.6709 204.099 62.397 204.268 62.0566 204.406 cv
61.7163 204.544 61.3066 204.613 60.8267 204.613 cv
cp
f
68.083 201.702 mo
68.083 201.036 67.9604 200.492 67.7148 200.071 cv
67.4697 199.651 67.0967 199.44 66.5952 199.44 cv
66.2695 199.44 65.9946 199.52 65.7705 199.68 cv
65.5469 199.839 65.3687 200.053 65.2363 200.321 cv
65.2363 202.84 li
65.3726 203.127 65.5508 203.351 65.7705 203.512 cv
65.9912 203.673 66.2695 203.753 66.606 203.753 cv
67.1035 203.753 67.4741 203.576 67.7178 203.222 cv
67.9614 202.867 68.083 202.398 68.083 201.814 cv
68.083 201.702 li
cp
69.1411 201.814 mo
69.1411 202.652 68.9395 203.328 68.5371 203.842 cv
68.1338 204.356 67.5801 204.613 66.8745 204.613 cv
66.4878 204.613 66.1523 204.537 65.8672 204.385 cv
65.583 204.232 65.3472 204.008 65.1611 203.71 cv
64.9893 204.5 li
64.1782 204.5 li
64.1782 196.121 li
65.2363 196.121 li
65.2363 199.376 li
65.4189 199.118 65.6455 198.921 65.916 198.785 cv
66.186 198.649 66.502 198.581 66.8638 198.581 cv
67.5801 198.581 68.1387 198.868 68.5396 199.44 cv
68.9404 200.013 69.1411 200.767 69.1411 201.702 cv
69.1411 201.814 li
cp
f
73.8086 202.937 mo
73.8086 202.704 73.7197 202.515 73.543 202.368 cv
73.3652 202.221 73.0298 202.092 72.5356 201.981 cv
71.8516 201.834 71.3262 201.628 70.959 201.363 cv
70.5923 201.098 70.4087 200.744 70.4087 200.3 cv
70.4087 199.827 70.6104 199.422 71.0127 199.086 cv
71.416 198.749 71.9375 198.581 72.5786 198.581 cv
73.2373 198.581 73.771 198.76 74.1792 199.118 cv
74.5874 199.476 74.7827 199.894 74.7646 200.37 cv
74.7539 200.402 li
73.7441 200.402 li
73.7441 200.151 73.6338 199.924 73.4141 199.72 cv
73.1934 199.516 72.915 199.414 72.5786 199.414 cv
72.2061 199.414 71.9277 199.498 71.7432 199.666 cv
71.5591 199.835 71.4668 200.035 71.4668 200.268 cv
71.4668 200.497 71.5464 200.674 71.7061 200.799 cv
71.8652 200.925 72.1938 201.039 72.6914 201.143 cv
73.4038 201.294 73.9448 201.506 74.3135 201.782 cv
74.6821 202.058 74.8667 202.418 74.8667 202.862 cv
74.8667 203.377 74.6582 203.798 74.2412 204.124 cv
73.8237 204.45 73.2788 204.613 72.6055 204.613 cv
71.8643 204.613 71.2808 204.425 70.8545 204.049 cv
70.4282 203.673 70.2261 203.234 70.2476 202.733 cv
70.2583 202.701 li
71.2681 202.701 li
71.2861 203.077 71.4258 203.352 71.687 203.525 cv
71.9482 203.699 72.2544 203.786 72.6055 203.786 cv
72.9814 203.786 73.2759 203.706 73.4893 203.547 cv
73.7021 203.387 73.8086 203.184 73.8086 202.937 cv
cp
f
77.3267 204.5 mo
76.2686 204.5 li
76.2686 198.689 li
77.3267 198.689 li
77.3267 204.5 li
cp
77.3267 197.201 mo
76.2686 197.201 li
76.2686 196.121 li
77.3267 196.121 li
77.3267 197.201 li
cp
f
80.4258 197.287 mo
80.4258 198.689 li
81.5269 198.689 li
81.5269 199.473 li
80.4258 199.473 li
80.4258 203.001 li
80.4258 203.273 80.4819 203.465 80.5952 203.576 cv
80.7075 203.687 80.8574 203.743 81.0435 203.743 cv
81.1045 203.743 81.1724 203.734 81.2476 203.719 cv
81.3228 203.702 81.3853 203.686 81.4355 203.667 cv
81.5806 204.393 li
81.502 204.457 81.3853 204.51 81.2314 204.551 cv
81.0776 204.592 80.9253 204.613 80.7749 204.613 cv
80.3452 204.613 80.0034 204.483 79.749 204.224 cv
79.4946 203.964 79.3677 203.557 79.3677 203.001 cv
79.3677 199.473 li
78.4438 199.473 li
78.4438 198.689 li
79.3677 198.689 li
79.3677 197.287 li
80.4258 197.287 li
cp
f
84.8999 199.414 mo
84.5313 199.414 84.2261 199.556 83.9839 199.841 cv
83.7427 200.125 83.5947 200.49 83.541 200.934 cv
83.5518 200.96 li
86.1729 200.96 li
86.1729 200.874 li
86.1729 200.452 86.0688 200.103 85.8613 199.827 cv
85.6538 199.551 85.333 199.414 84.8999 199.414 cv
cp
85.0664 204.613 mo
84.2319 204.613 83.5815 204.346 83.1138 203.813 cv
82.647 203.279 82.4131 202.577 82.4131 201.707 cv
82.4131 201.471 li
82.4131 200.636 82.6538 199.946 83.1353 199.4 cv
83.6172 198.854 84.2051 198.581 84.8999 198.581 cv
85.6768 198.581 86.2598 198.823 86.6479 199.306 cv
87.0366 199.79 87.231 200.432 87.231 201.234 cv
87.231 201.793 li
83.5142 201.793 li
83.498 201.82 li
83.498 202.403 83.627 202.877 83.8848 203.24 cv
84.1426 203.604 84.5366 203.786 85.0664 203.786 cv
85.4243 203.786 85.7388 203.734 86.0093 203.633 cv
86.2793 203.53 86.5112 203.39 86.7046 203.211 cv
87.1182 203.898 li
86.9106 204.099 86.6367 204.268 86.2964 204.406 cv
85.9561 204.544 85.5464 204.613 85.0664 204.613 cv
cp
f
38.6147 214.859 mo
38.6147 215.475 38.7446 215.983 39.0044 216.384 cv
39.2637 216.785 39.6494 216.986 40.1616 216.986 cv
40.6665 216.986 41.0498 216.785 41.311 216.384 cv
41.5723 215.983 41.7031 215.475 41.7031 214.859 cv
41.7031 214.741 li
41.7031 214.132 41.5718 213.626 41.3081 213.221 cv
41.0454 212.816 40.6592 212.614 40.1509 212.614 cv
39.646 212.614 39.2637 212.816 39.0044 213.221 cv
38.7446 213.626 38.6147 214.132 38.6147 214.741 cv
38.6147 214.859 li
cp
37.5566 214.741 mo
37.5566 213.881 37.7896 213.173 38.2549 212.616 cv
38.7202 212.06 39.3525 211.781 40.1509 211.781 cv
40.9565 211.781 41.5933 212.059 42.0601 212.614 cv
42.5278 213.169 42.7612 213.878 42.7612 214.741 cv
42.7612 214.859 li
42.7612 215.726 42.5283 216.435 42.063 216.986 cv
41.5977 217.537 40.9639 217.813 40.1616 217.813 cv
39.3594 217.813 38.7251 217.536 38.2573 216.983 cv
37.7905 216.43 37.5566 215.722 37.5566 214.859 cv
37.5566 214.741 li
cp
f
47.9497 214.902 mo
47.9497 214.243 47.8198 213.701 47.5601 213.277 cv
47.3008 212.852 46.9185 212.641 46.4136 212.641 cv
46.1094 212.641 45.8496 212.71 45.6348 212.848 cv
45.4199 212.985 45.2461 213.174 45.1138 213.414 cv
45.1138 216.223 li
45.2461 216.463 45.4199 216.65 45.6348 216.784 cv
45.8496 216.919 46.1128 216.986 46.4243 216.986 cv
46.9258 216.986 47.3052 216.802 47.563 216.436 cv
47.8208 216.068 47.9497 215.595 47.9497 215.015 cv
47.9497 214.902 li
cp
49.0078 215.015 mo
49.0078 215.852 48.8071 216.528 48.4063 217.042 cv
48.0054 217.556 47.4521 217.813 46.7466 217.813 cv
46.3887 217.813 46.0742 217.753 45.8042 217.633 cv
45.5337 217.513 45.3037 217.333 45.1138 217.093 cv
45.1138 219.935 li
44.0557 219.935 li
44.0557 211.889 li
44.8667 211.889 li
45.0332 212.641 li
45.2231 212.361 45.4595 212.148 45.7422 212.001 cv
46.0249 211.855 46.3545 211.781 46.7305 211.781 cv
47.4502 211.781 48.0098 212.067 48.4087 212.638 cv
48.8081 213.209 49.0078 213.964 49.0078 214.902 cv
49.0078 215.015 li
cp
f
51.7793 210.487 mo
51.7793 211.889 li
52.8804 211.889 li
52.8804 212.673 li
51.7793 212.673 li
51.7793 216.202 li
51.7793 216.474 51.8354 216.665 51.9487 216.776 cv
52.061 216.887 52.2109 216.943 52.397 216.943 cv
52.458 216.943 52.5259 216.935 52.6011 216.919 cv
52.6763 216.902 52.7388 216.886 52.7891 216.868 cv
52.9341 217.593 li
52.8555 217.657 52.7388 217.71 52.585 217.751 cv
52.4312 217.792 52.2788 217.813 52.1284 217.813 cv
51.6987 217.813 51.3569 217.683 51.1025 217.424 cv
50.8481 217.164 50.7212 216.757 50.7212 216.202 cv
50.7212 212.673 li
49.7974 212.673 li
49.7974 211.889 li
50.7212 211.889 li
50.7212 210.487 li
51.7793 210.487 li
cp
f
55.1577 217.7 mo
54.0996 217.7 li
54.0996 211.889 li
55.1577 211.889 li
55.1577 217.7 li
cp
55.1577 210.401 mo
54.0996 210.401 li
54.0996 209.321 li
55.1577 209.321 li
55.1577 210.401 li
cp
f
57.7305 211.889 mo
57.8057 212.651 li
57.9956 212.376 58.2363 212.162 58.5278 212.01 cv
58.8198 211.857 59.1592 211.781 59.5459 211.781 cv
59.9326 211.781 60.2646 211.871 60.5425 212.05 cv
60.8198 212.229 61.0283 212.498 61.168 212.855 cv
61.354 212.523 61.5967 212.26 61.896 212.068 cv
62.1948 211.877 62.5449 211.781 62.9458 211.781 cv
63.5366 211.781 64.0039 211.984 64.3477 212.391 cv
64.6914 212.797 64.8633 213.409 64.8633 214.225 cv
64.8633 217.7 li
63.8052 217.7 li
63.8052 214.214 li
63.8052 213.642 63.7065 213.236 63.5098 212.998 cv
63.313 212.76 63.019 212.641 62.6289 212.641 cv
62.2671 212.641 61.9746 212.766 61.7505 213.017 cv
61.5269 213.267 61.3955 213.584 61.356 213.967 cv
61.356 214.01 li
61.356 217.7 li
60.2925 217.7 li
60.2925 214.214 li
60.2925 213.67 60.1914 213.271 59.9888 213.02 cv
59.7866 212.767 59.4956 212.641 59.1162 212.641 cv
58.7939 212.641 58.5288 212.707 58.3213 212.839 cv
58.1138 212.972 57.9541 213.158 57.8433 213.398 cv
57.8433 217.7 li
56.7852 217.7 li
56.7852 211.889 li
57.7305 211.889 li
cp
f
67.5435 217.7 mo
66.4854 217.7 li
66.4854 211.889 li
67.5435 211.889 li
67.5435 217.7 li
cp
67.5435 210.401 mo
66.4854 210.401 li
66.4854 209.321 li
67.5435 209.321 li
67.5435 210.401 li
cp
f
70.1699 216.873 mo
73.5269 216.873 li
73.5269 217.7 li
68.9077 217.7 li
68.9077 216.959 li
72.0498 212.727 li
68.9453 212.727 li
68.9453 211.889 li
73.3442 211.889 li
73.3442 212.608 li
70.1699 216.873 li
cp
f
76.5186 216.927 mo
76.9019 216.927 77.2471 216.828 77.5552 216.631 cv
77.8633 216.435 78.0635 216.209 78.1567 215.955 cv
78.1567 215.009 li
76.9697 215.009 li
76.5435 215.009 76.2026 215.117 75.9468 215.331 cv
75.6904 215.546 75.5625 215.799 75.5625 216.089 cv
75.5625 216.347 75.6431 216.551 75.8042 216.701 cv
75.9653 216.852 76.2036 216.927 76.5186 216.927 cv
cp
78.2749 217.7 mo
78.2393 217.525 78.2114 217.37 78.1919 217.235 cv
78.1719 217.102 78.1602 216.966 78.1567 216.83 cv
77.96 217.109 77.7026 217.343 77.3862 217.531 cv
77.0688 217.719 76.728 217.813 76.3628 217.813 cv
75.7578 217.813 75.2964 217.658 74.98 217.349 cv
74.6626 217.039 74.5044 216.612 74.5044 216.067 cv
74.5044 215.512 74.729 215.078 75.1782 214.765 cv
75.6279 214.452 76.2373 214.295 77.0073 214.295 cv
78.1567 214.295 li
78.1567 213.72 li
78.1567 213.38 78.0527 213.11 77.8452 212.912 cv
77.6377 212.713 77.3438 212.614 76.9644 212.614 cv
76.6206 212.614 76.3433 212.7 76.1318 212.872 cv
75.9204 213.044 75.8149 213.249 75.8149 213.489 cv
74.8105 213.5 li
74.7998 213.468 li
74.7749 213.045 74.9727 212.659 75.3931 212.308 cv
75.814 211.956 76.3574 211.781 77.0234 211.781 cv
77.6821 211.781 78.2124 211.949 78.6133 212.283 cv
79.0142 212.618 79.2148 213.101 79.2148 213.731 cv
79.2148 216.529 li
79.2148 216.737 79.2256 216.938 79.2471 217.131 cv
79.2686 217.324 79.3081 217.514 79.3652 217.7 cv
78.2749 217.7 li
cp
f
82.2227 210.487 mo
82.2227 211.889 li
83.3237 211.889 li
83.3237 212.673 li
82.2227 212.673 li
82.2227 216.202 li
82.2227 216.474 82.2788 216.665 82.3921 216.776 cv
82.5044 216.887 82.6543 216.943 82.8403 216.943 cv
82.9014 216.943 82.9692 216.935 83.0444 216.919 cv
83.1196 216.902 83.1821 216.886 83.2324 216.868 cv
83.3774 217.593 li
83.2988 217.657 83.1821 217.71 83.0283 217.751 cv
82.8745 217.792 82.7222 217.813 82.5718 217.813 cv
82.1421 217.813 81.8003 217.683 81.5459 217.424 cv
81.2915 217.164 81.1646 216.757 81.1646 216.202 cv
81.1646 212.673 li
80.2407 212.673 li
80.2407 211.889 li
81.1646 211.889 li
81.1646 210.487 li
82.2227 210.487 li
cp
f
85.6011 217.7 mo
84.543 217.7 li
84.543 211.889 li
85.6011 211.889 li
85.6011 217.7 li
cp
85.6011 210.401 mo
84.543 210.401 li
84.543 209.321 li
85.6011 209.321 li
85.6011 210.401 li
cp
f
88.0396 214.859 mo
88.0396 215.475 88.1694 215.983 88.4292 216.384 cv
88.6885 216.785 89.0742 216.986 89.5864 216.986 cv
90.0913 216.986 90.4746 216.785 90.7358 216.384 cv
90.9971 215.983 91.1279 215.475 91.1279 214.859 cv
91.1279 214.741 li
91.1279 214.132 90.9966 213.626 90.7329 213.221 cv
90.4702 212.816 90.084 212.614 89.5757 212.614 cv
89.0708 212.614 88.6885 212.816 88.4292 213.221 cv
88.1694 213.626 88.0396 214.132 88.0396 214.741 cv
88.0396 214.859 li
cp
86.9814 214.741 mo
86.9814 213.881 87.2144 213.173 87.6797 212.616 cv
88.145 212.06 88.7773 211.781 89.5757 211.781 cv
90.3813 211.781 91.0181 212.059 91.4849 212.614 cv
91.9526 213.169 92.186 213.878 92.186 214.741 cv
92.186 214.859 li
92.186 215.726 91.9531 216.435 91.4878 216.986 cv
91.0225 217.537 90.3887 217.813 89.5864 217.813 cv
88.7842 217.813 88.1499 217.536 87.6821 216.983 cv
87.2153 216.43 86.9814 215.722 86.9814 214.859 cv
86.9814 214.741 li
cp
f
94.4258 211.889 mo
94.501 212.753 li
94.6943 212.445 94.937 212.206 95.229 212.036 cv
95.5205 211.866 95.8525 211.781 96.2251 211.781 cv
96.8516 211.781 97.3369 211.965 97.6807 212.332 cv
98.0244 212.699 98.1963 213.266 98.1963 214.032 cv
98.1963 217.7 li
97.1382 217.7 li
97.1382 214.053 li
97.1382 213.541 97.0371 213.178 96.8345 212.963 cv
96.6323 212.748 96.3237 212.641 95.9082 212.641 cv
95.5825 212.641 95.3057 212.706 95.0786 212.837 cv
94.8511 212.967 94.6709 213.151 94.5386 213.387 cv
94.5386 217.7 li
93.4805 217.7 li
93.4805 211.889 li
94.4258 211.889 li
cp
f
98.2832 183.672 mo
37.7832 183.672 li
37.7832 145.03 li
98.2832 145.03 li
98.2832 183.672 li
cp
34.7832 141.941 mo
34.7832 186.761 li
101.283 186.761 li
101.283 141.941 li
34.7832 141.941 li
cp
.0588235 .188235 .247059 rgb
f
98.2832 151.329 mo
37.7832 151.329 li
37.7832 145.03 li
98.2832 145.03 li
98.2832 151.329 li
cp
.172549 .345098 .443137 rgb
f
87.5508 149.568 mo
84.7729 149.568 li
84.7729 146.79 li
87.5508 146.79 li
87.5508 149.568 li
cp
.992157 .776471 .227451 rgb
f
91.667 149.568 mo
88.8892 149.568 li
88.8892 146.79 li
91.667 146.79 li
91.667 149.568 li
cp
.756863 .839216 .294118 rgb
f
95.7832 149.568 mo
93.0054 149.568 li
93.0054 146.79 li
95.7832 146.79 li
95.7832 149.568 li
cp
.992157 .411765 .168627 rgb
f
68.0332 183.672 mo
37.7832 183.672 li
37.7832 151.329 li
68.0332 151.329 li
68.0332 183.672 li
cp
.0862745 .756863 .819608 rgb
f
98.2832 183.672 mo
68.0332 183.672 li
68.0332 151.329 li
98.2832 151.329 li
98.2832 183.672 li
cp
.0784314 .690196 .74902 rgb
f
58.9287 172.993 mo
55.895 173.408 53.0996 171.285 52.6841 168.252 cv
52.2695 165.218 54.3916 162.423 57.4253 162.007 cv
60.4585 161.593 63.2539 163.715 63.6689 166.749 cv
64.0845 169.782 61.9619 172.578 58.9287 172.993 cv
cp
70.2915 168.64 mo
69.54 163.148 li
66.7603 163.274 li
66.5591 162.865 66.3296 162.473 66.0752 162.102 cv
67.5493 159.74 li
63.1343 156.388 li
61.2578 158.443 li
60.8325 158.298 60.3945 158.182 59.9468 158.098 cv
59.3164 155.385 li
53.8237 156.137 li
53.9473 158.918 li
53.5405 159.119 53.1514 159.347 52.7808 159.6 cv
50.4165 158.128 li
47.064 162.544 li
49.1182 164.422 li
48.9731 164.847 48.8584 165.284 48.7739 165.73 cv
46.0615 166.361 li
46.814 171.853 li
49.5947 171.73 li
49.7944 172.136 50.0234 172.526 50.2769 172.896 cv
48.8047 175.261 li
53.2197 178.613 li
55.0991 176.559 li
55.5244 176.704 55.9619 176.82 56.4092 176.904 cv
57.0371 179.615 li
62.5298 178.863 li
62.4033 176.084 li
62.8125 175.883 63.2031 175.653 63.5752 175.399 cv
65.9375 176.873 li
69.2896 172.457 li
67.2349 170.581 li
67.3799 170.155 67.4956 169.716 67.5801 169.268 cv
70.2915 168.64 li
cp
.172549 .345098 .443137 rgb
f
58.1772 160.78 mo
54.4717 160.78 51.4565 163.794 51.4565 167.501 cv
51.4565 171.206 54.4717 174.221 58.1772 174.221 cv
61.8823 174.221 64.8965 171.206 64.8965 167.501 cv
64.8965 163.794 61.8823 160.78 58.1772 160.78 cv
cp
58.1772 175.547 mo
53.7402 175.547 50.1299 171.938 50.1299 167.501 cv
50.1299 163.064 53.7402 159.454 58.1772 159.454 cv
62.6138 159.454 66.2231 163.064 66.2231 167.501 cv
66.2231 171.938 62.6138 175.547 58.1772 175.547 cv
cp
1 1 1 rgb
f
84.5991 178.98 mo
83.8555 179.235 83.0459 178.838 82.7915 178.095 cv
82.5366 177.352 82.9336 176.542 83.6772 176.288 cv
84.4204 176.034 85.2295 176.43 85.4844 177.173 cv
85.7388 177.917 85.3423 178.726 84.5991 178.98 cv
cp
81.3818 162.792 mo
81.3887 162.79 li
82.7813 158.646 li
78.5278 155.488 li
79.9106 159.527 li
78.9644 159.851 li
76.3838 160.735 li
75.001 156.695 li
73.6626 161.769 li
77.2598 164.204 li
77.2739 164.199 li
81.4717 176.459 li
81.1792 177.105 81.1206 177.858 81.3687 178.583 cv
81.8838 180.087 83.521 180.889 85.0249 180.374 cv
86.5288 179.858 87.3301 178.222 86.8149 176.717 cv
86.5952 176.075 86.1694 175.561 85.6382 175.223 cv
81.3818 162.792 li
cp
.0588235 .188235 .247059 rgb
f
84.7729 174.395 mo
82.5073 172.992 li
80.3169 161.858 li
84.7729 174.395 li
cp
.172549 .345098 .443137 rgb
f
153.525 197.512 mo
150.947 197.512 li
150.947 204.5 li
149.889 204.5 li
149.889 197.512 li
147.343 197.512 li
147.343 196.68 li
153.525 196.68 li
153.525 197.512 li
cp
.501961 .501961 .501961 rgb
f
155.701 203.727 mo
156.084 203.727 156.429 203.628 156.737 203.431 cv
157.045 203.234 157.246 203.009 157.339 202.754 cv
157.339 201.809 li
156.152 201.809 li
155.726 201.809 155.385 201.917 155.129 202.131 cv
154.873 202.346 154.745 202.599 154.745 202.889 cv
154.745 203.146 154.825 203.351 154.986 203.501 cv
155.147 203.651 155.386 203.727 155.701 203.727 cv
cp
157.457 204.5 mo
157.421 204.325 157.394 204.17 157.374 204.035 cv
157.354 203.901 157.342 203.766 157.339 203.63 cv
157.142 203.909 156.885 204.143 156.568 204.331 cv
156.251 204.519 155.91 204.613 155.545 204.613 cv
154.94 204.613 154.479 204.458 154.162 204.148 cv
153.845 203.838 153.686 203.412 153.686 202.867 cv
153.686 202.312 153.911 201.878 154.36 201.564 cv
154.81 201.251 155.419 201.095 156.189 201.095 cv
157.339 201.095 li
157.339 200.52 li
157.339 200.18 157.235 199.91 157.027 199.712 cv
156.82 199.513 156.526 199.414 156.146 199.414 cv
155.803 199.414 155.525 199.499 155.314 199.671 cv
155.102 199.843 154.997 200.049 154.997 200.289 cv
153.993 200.3 li
153.982 200.268 li
153.957 199.845 154.155 199.458 154.575 199.107 cv
154.996 198.756 155.54 198.581 156.206 198.581 cv
156.864 198.581 157.395 198.749 157.795 199.083 cv
158.196 199.418 158.397 199.9 158.397 200.531 cv
158.397 203.329 li
158.397 203.537 158.408 203.737 158.429 203.931 cv
158.451 204.124 158.49 204.314 158.547 204.5 cv
157.457 204.5 li
cp
f
162.683 199.623 mo
162.141 199.591 li
161.861 199.591 161.626 199.657 161.435 199.79 cv
161.243 199.922 161.095 200.108 160.991 200.348 cv
160.991 204.5 li
159.933 204.5 li
159.933 198.689 li
160.878 198.689 li
160.98 199.537 li
161.145 199.236 161.349 199.002 161.59 198.833 cv
161.832 198.665 162.11 198.581 162.425 198.581 cv
162.504 198.581 162.579 198.587 162.651 198.6 cv
162.723 198.612 162.782 198.626 162.828 198.64 cv
162.683 199.623 li
cp
f
164.552 201.814 mo
164.552 202.398 164.672 202.867 164.912 203.222 cv
165.152 203.576 165.522 203.753 166.024 203.753 cv
166.343 203.753 166.609 203.681 166.824 203.536 cv
167.039 203.391 167.216 203.186 167.356 202.921 cv
167.356 200.246 li
167.22 199.999 167.042 199.803 166.824 199.658 cv
166.606 199.513 166.343 199.44 166.035 199.44 cv
165.53 199.44 165.156 199.65 164.915 200.069 cv
164.673 200.488 164.552 201.032 164.552 201.702 cv
164.552 201.814 li
cp
163.494 201.702 mo
163.494 200.767 163.694 200.013 164.093 199.44 cv
164.492 198.868 165.05 198.581 165.766 198.581 cv
166.135 198.581 166.459 198.655 166.738 198.804 cv
167.018 198.953 167.252 199.167 167.442 199.446 cv
167.571 198.689 li
168.414 198.689 li
168.414 204.532 li
168.414 205.277 168.197 205.849 167.764 206.248 cv
167.331 206.648 166.706 206.847 165.89 206.847 cv
165.61 206.847 165.309 206.809 164.984 206.731 cv
164.661 206.655 164.375 206.55 164.128 206.417 cv
164.289 205.596 li
164.493 205.703 164.739 205.79 165.027 205.856 cv
165.316 205.922 165.6 205.956 165.879 205.956 cv
166.395 205.956 166.77 205.838 167.004 205.604 cv
167.239 205.369 167.356 205.012 167.356 204.532 cv
167.356 203.872 li
167.166 204.115 166.939 204.299 166.674 204.425 cv
166.409 204.55 166.102 204.613 165.755 204.613 cv
165.046 204.613 164.492 204.356 164.093 203.842 cv
163.694 203.328 163.494 202.652 163.494 201.814 cv
163.494 201.702 li
cp
f
172.174 199.414 mo
171.805 199.414 171.5 199.556 171.258 199.841 cv
171.017 200.125 170.869 200.49 170.815 200.934 cv
170.826 200.96 li
173.447 200.96 li
173.447 200.874 li
173.447 200.452 173.343 200.103 173.135 199.827 cv
172.928 199.551 172.607 199.414 172.174 199.414 cv
cp
172.34 204.613 mo
171.506 204.613 170.855 204.346 170.388 203.813 cv
169.921 203.279 169.687 202.577 169.687 201.707 cv
169.687 201.471 li
169.687 200.636 169.928 199.946 170.409 199.4 cv
170.891 198.854 171.479 198.581 172.174 198.581 cv
172.951 198.581 173.534 198.823 173.922 199.306 cv
174.311 199.79 174.505 200.432 174.505 201.234 cv
174.505 201.793 li
170.788 201.793 li
170.772 201.82 li
170.772 202.403 170.901 202.877 171.159 203.24 cv
171.416 203.604 171.811 203.786 172.34 203.786 cv
172.698 203.786 173.013 203.734 173.283 203.633 cv
173.553 203.53 173.785 203.39 173.979 203.211 cv
174.392 203.898 li
174.185 204.099 173.911 204.268 173.57 204.406 cv
173.23 204.544 172.82 204.613 172.34 204.613 cv
cp
f
177.164 197.287 mo
177.164 198.689 li
178.265 198.689 li
178.265 199.473 li
177.164 199.473 li
177.164 203.001 li
177.164 203.273 177.22 203.465 177.333 203.576 cv
177.445 203.687 177.595 203.743 177.781 203.743 cv
177.842 203.743 177.91 203.734 177.985 203.719 cv
178.061 203.702 178.123 203.686 178.173 203.667 cv
178.318 204.393 li
178.24 204.457 178.123 204.51 177.969 204.551 cv
177.815 204.592 177.663 204.613 177.513 204.613 cv
177.083 204.613 176.741 204.483 176.487 204.224 cv
176.232 203.964 176.105 203.557 176.105 203.001 cv
176.105 199.473 li
175.182 199.473 li
175.182 198.689 li
176.105 198.689 li
176.105 197.287 li
177.164 197.287 li
cp
f
180.542 204.5 mo
179.484 204.5 li
179.484 198.689 li
180.542 198.689 li
180.542 204.5 li
cp
180.542 197.201 mo
179.484 197.201 li
179.484 196.121 li
180.542 196.121 li
180.542 197.201 li
cp
f
183.115 198.689 mo
183.19 199.553 li
183.383 199.245 183.626 199.006 183.918 198.836 cv
184.209 198.666 184.541 198.581 184.914 198.581 cv
185.54 198.581 186.026 198.765 186.37 199.132 cv
186.713 199.499 186.885 200.065 186.885 200.831 cv
186.885 204.5 li
185.827 204.5 li
185.827 200.853 li
185.827 200.341 185.726 199.977 185.523 199.763 cv
185.321 199.548 185.013 199.44 184.597 199.44 cv
184.271 199.44 183.995 199.506 183.768 199.637 cv
183.54 199.767 183.36 199.951 183.227 200.187 cv
183.227 204.5 li
182.169 204.5 li
182.169 198.689 li
183.115 198.689 li
cp
f
189.291 201.814 mo
189.291 202.398 189.412 202.867 189.651 203.222 cv
189.891 203.576 190.262 203.753 190.763 203.753 cv
191.082 203.753 191.349 203.681 191.563 203.536 cv
191.778 203.391 191.956 203.186 192.095 202.921 cv
192.095 200.246 li
191.959 199.999 191.782 199.803 191.563 199.658 cv
191.345 199.513 191.082 199.44 190.774 199.44 cv
190.269 199.44 189.895 199.65 189.654 200.069 cv
189.412 200.488 189.291 201.032 189.291 201.702 cv
189.291 201.814 li
cp
188.233 201.702 mo
188.233 200.767 188.433 200.013 188.832 199.44 cv
189.231 198.868 189.789 198.581 190.505 198.581 cv
190.874 198.581 191.198 198.655 191.477 198.804 cv
191.757 198.953 191.991 199.167 192.181 199.446 cv
192.31 198.689 li
193.153 198.689 li
193.153 204.532 li
193.153 205.277 192.936 205.849 192.503 206.248 cv
192.07 206.648 191.445 206.847 190.629 206.847 cv
190.35 206.847 190.048 206.809 189.724 206.731 cv
189.4 206.655 189.114 206.55 188.867 206.417 cv
189.028 205.596 li
189.232 205.703 189.479 205.79 189.767 205.856 cv
190.055 205.922 190.339 205.956 190.618 205.956 cv
191.134 205.956 191.509 205.838 191.743 205.604 cv
191.978 205.369 192.095 205.012 192.095 204.532 cv
192.095 203.872 li
191.905 204.115 191.678 204.299 191.413 204.425 cv
191.148 204.55 190.842 204.613 190.495 204.613 cv
189.786 204.613 189.231 204.356 188.832 203.842 cv
188.433 203.328 188.233 202.652 188.233 201.814 cv
188.233 201.702 li
cp
f
171.261 136.747 mo
171.261 136.747 li
171.261 137.238 li
171.261 137.238 li
185.003 137.238 196.184 148.418 196.184 162.161 cv
196.184 175.904 185.003 187.085 171.261 187.085 cv
171.261 187.085 li
171.261 187.575 li
171.261 187.575 li
185.274 187.575 196.674 176.174 196.674 162.161 cv
196.674 148.148 185.274 136.747 171.261 136.747 cv
cp
.0588235 .188235 .247059 rgb
f
146.338 162.161 mo
146.338 148.418 157.518 137.238 171.261 137.238 cv
171.261 136.747 li
157.248 136.747 145.847 148.148 145.847 162.161 cv
145.847 176.174 157.248 187.574 171.261 187.575 cv
171.261 187.085 li
157.518 187.085 146.338 175.904 146.338 162.161 cv
cp
.172549 .345098 .443137 rgb
f
190.873 162.161 mo
190.873 151.33 182.091 142.55 171.261 142.55 cv
171.261 142.55 li
171.261 148.188 li
171.261 148.188 li
178.966 148.188 185.235 154.456 185.235 162.161 cv
185.235 169.866 178.966 176.134 171.261 176.134 cv
171.261 176.134 li
171.261 181.773 li
171.261 181.773 li
182.091 181.773 190.873 172.993 190.873 162.161 cv
cp
.992157 .627451 .0784314 rgb
f
157.287 162.161 mo
157.287 154.456 163.556 148.188 171.261 148.188 cv
171.261 142.55 li
160.429 142.55 151.648 151.33 151.648 162.161 cv
151.648 172.993 160.429 181.773 171.261 181.773 cv
171.261 176.134 li
163.556 176.134 157.287 169.866 157.287 162.161 cv
cp
.992157 .776471 .227451 rgb
f
171.261 155.624 mo
174.87 155.624 177.798 158.551 177.798 162.161 cv
177.798 165.771 174.87 168.698 171.261 168.698 cv
171.261 168.698 li
171.261 175.644 li
171.261 175.644 li
178.695 175.644 184.744 169.596 184.744 162.161 cv
184.744 154.727 178.695 148.678 171.261 148.678 cv
171.261 148.678 li
171.261 155.624 li
171.261 155.624 li
cp
.94902 .94902 .94902 rgb
f
157.778 162.161 mo
157.778 169.596 163.826 175.644 171.261 175.644 cv
171.261 168.698 li
167.65 168.698 164.724 165.771 164.724 162.161 cv
164.724 158.551 167.65 155.624 171.261 155.624 cv
171.261 148.678 li
163.826 148.679 157.778 154.727 157.778 162.161 cv
cp
f
157.287 162.161 mo
157.287 169.866 163.556 176.134 171.261 176.134 cv
171.261 175.889 li
171.261 175.644 li
163.826 175.644 157.778 169.596 157.778 162.161 cv
157.778 154.727 163.826 148.679 171.261 148.678 cv
171.261 148.433 li
171.261 148.188 li
163.556 148.188 157.287 154.456 157.287 162.161 cv
cp
.172549 .345098 .443137 rgb
f
171.261 148.188 mo
171.261 148.188 li
171.261 148.433 li
171.261 148.678 li
171.261 148.678 li
178.695 148.678 184.744 154.727 184.744 162.161 cv
184.744 169.596 178.695 175.644 171.261 175.644 cv
171.261 175.644 li
171.261 175.889 li
171.261 176.134 li
171.261 176.134 li
178.966 176.134 185.235 169.866 185.235 162.161 cv
185.235 154.456 178.966 148.188 171.261 148.188 cv
cp
.0588235 .188235 .247059 rgb
f
164.724 162.161 mo
164.724 165.771 167.65 168.698 171.261 168.698 cv
171.261 155.624 li
167.65 155.624 164.724 158.551 164.724 162.161 cv
cp
.992157 .776471 .227451 rgb
f
177.798 162.161 mo
177.798 158.551 174.87 155.624 171.261 155.624 cv
171.261 155.624 li
171.261 168.698 li
171.261 168.698 li
174.87 168.698 177.798 165.771 177.798 162.161 cv
cp
.992157 .627451 .0784314 rgb
f
200.67 148.204 mo
196.331 147.119 li
197.415 142.78 li
192.514 145.72 li
190.315 149.871 li
170.882 161.53 li
170.534 161.739 170.421 162.191 170.63 162.54 cv
170.769 162.769 171.012 162.897 171.261 162.897 cv
171.39 162.897 171.52 162.862 171.639 162.792 cv
191.071 151.133 li
195.768 151.144 li
200.67 148.204 li
cp
.0588235 .188235 .247059 rgb
f
303.957 173.955 mo
242.592 173.955 li
242.592 134.527 li
303.957 134.527 li
303.957 173.955 li
cp
0 0 0 rgb
f
285.865 186.526 mo
262.579 186.526 li
268.911 178.057 li
279.535 178.057 li
285.865 186.526 li
cp
.678431 .678431 .678431 rgb
f
299.457 182.161 mo
247.092 182.161 li
244.605 182.161 242.592 180.323 242.592 178.057 cv
242.592 173.955 li
303.957 173.955 li
303.957 173.955 303.957 175.792 303.957 178.057 cv
303.957 180.323 301.941 182.161 299.457 182.161 cv
cp
.858824 .858824 .858824 rgb
f
286.721 189.19 mo
261.725 189.19 li
261.725 186.526 li
286.721 186.526 li
286.721 189.19 li
cp
0 0 0 rgb
f
244.391 136.327 mo
244.391 172.155 li
274.223 172.155 li
274.223 136.327 li
244.391 136.327 li
cp
.992157 .776471 .227451 rgb
f
302.156 136.327 mo
274.223 136.327 li
274.223 172.155 li
302.156 172.155 li
302.156 136.327 li
cp
.992157 .627451 .0784314 rgb
f
242.826 202.536 mo
244.76 202.536 li
245.289 202.536 245.686 202.394 245.946 202.109 cv
246.207 201.824 246.338 201.465 246.338 201.032 cv
246.338 200.599 246.207 200.237 245.943 199.947 cv
245.681 199.657 245.285 199.512 244.76 199.512 cv
242.826 199.512 li
242.826 202.536 li
cp
242.826 203.363 mo
242.826 206.5 li
241.768 206.5 li
241.768 198.68 li
244.76 198.68 li
245.594 198.68 246.242 198.895 246.706 199.324 cv
247.17 199.754 247.402 200.32 247.402 201.021 cv
247.402 201.73 247.17 202.298 246.706 202.724 cv
246.242 203.15 245.594 203.363 244.76 203.363 cv
242.826 203.363 li
cp
.501961 .501961 .501961 rgb
f
250.372 205.727 mo
250.756 205.727 251.101 205.628 251.408 205.431 cv
251.717 205.234 251.917 205.009 252.01 204.754 cv
252.01 203.809 li
250.823 203.809 li
250.396 203.809 250.057 203.917 249.801 204.131 cv
249.544 204.346 249.416 204.599 249.416 204.889 cv
249.416 205.146 249.496 205.351 249.658 205.501 cv
249.818 205.651 250.057 205.727 250.372 205.727 cv
cp
252.129 206.5 mo
252.093 206.325 252.064 206.17 252.045 206.035 cv
252.025 205.901 252.014 205.766 252.01 205.63 cv
251.813 205.909 251.557 206.143 251.24 206.331 cv
250.922 206.519 250.582 206.613 250.217 206.613 cv
249.611 206.613 249.15 206.458 248.834 206.148 cv
248.516 205.838 248.357 205.412 248.357 204.867 cv
248.357 204.312 248.582 203.878 249.031 203.564 cv
249.481 203.251 250.091 203.095 250.861 203.095 cv
252.01 203.095 li
252.01 202.52 li
252.01 202.18 251.906 201.91 251.699 201.712 cv
251.491 201.513 251.197 201.414 250.818 201.414 cv
250.475 201.414 250.197 201.499 249.985 201.671 cv
249.773 201.843 249.668 202.049 249.668 202.289 cv
248.664 202.3 li
248.653 202.268 li
248.629 201.845 248.826 201.458 249.246 201.107 cv
249.668 200.756 250.211 200.581 250.877 200.581 cv
251.535 200.581 252.066 200.749 252.467 201.083 cv
252.867 201.418 253.068 201.9 253.068 202.531 cv
253.068 205.329 li
253.068 205.537 253.079 205.737 253.101 205.931 cv
253.122 206.124 253.162 206.314 253.219 206.5 cv
252.129 206.5 li
cp
f
256.302 204.346 mo
256.49 205.077 li
256.521 205.077 li
257.951 200.689 li
259.127 200.689 li
256.684 207.392 li
256.536 207.782 256.326 208.122 256.052 208.412 cv
255.778 208.702 255.408 208.847 254.943 208.847 cv
254.857 208.847 254.748 208.837 254.615 208.817 cv
254.482 208.798 254.381 208.779 254.309 208.761 cv
254.416 207.929 li
254.395 207.925 254.459 207.929 254.607 207.939 cv
254.756 207.95 254.85 207.956 254.889 207.956 cv
255.115 207.956 255.299 207.855 255.442 207.655 cv
255.586 207.454 255.705 207.232 255.803 206.989 cv
256.055 206.382 li
253.895 200.689 li
255.077 200.689 li
256.302 204.346 li
cp
f
263.993 202.536 mo
265.927 202.536 li
266.457 202.536 266.852 202.394 267.113 202.109 cv
267.375 201.824 267.506 201.465 267.506 201.032 cv
267.506 200.599 267.375 200.237 267.111 199.947 cv
266.848 199.657 266.453 199.512 265.927 199.512 cv
263.993 199.512 li
263.993 202.536 li
cp
263.993 203.363 mo
263.993 206.5 li
262.935 206.5 li
262.935 198.68 li
265.927 198.68 li
266.762 198.68 267.41 198.895 267.873 199.324 cv
268.338 199.754 268.569 200.32 268.569 201.021 cv
268.569 201.73 268.338 202.298 267.873 202.724 cv
267.41 203.15 266.762 203.363 265.927 203.363 cv
263.993 203.363 li
cp
f
271.953 201.414 mo
271.584 201.414 271.279 201.556 271.037 201.841 cv
270.796 202.125 270.648 202.49 270.594 202.934 cv
270.605 202.96 li
273.227 202.96 li
273.227 202.874 li
273.227 202.452 273.122 202.103 272.914 201.827 cv
272.707 201.551 272.387 201.414 271.953 201.414 cv
cp
272.119 206.613 mo
271.285 206.613 270.635 206.346 270.167 205.813 cv
269.7 205.279 269.467 204.577 269.467 203.707 cv
269.467 203.471 li
269.467 202.636 269.707 201.946 270.189 201.4 cv
270.67 200.854 271.258 200.581 271.953 200.581 cv
272.73 200.581 273.313 200.823 273.701 201.306 cv
274.09 201.79 274.284 202.432 274.284 203.234 cv
274.284 203.793 li
270.567 203.793 li
270.551 203.82 li
270.551 204.403 270.68 204.877 270.938 205.24 cv
271.195 205.604 271.59 205.786 272.119 205.786 cv
272.477 205.786 272.792 205.734 273.063 205.633 cv
273.332 205.53 273.564 205.39 273.758 205.211 cv
274.172 205.898 li
273.964 206.099 273.689 206.268 273.35 206.406 cv
273.01 206.544 272.6 206.613 272.119 206.613 cv
cp
f
278.221 201.623 mo
277.679 201.591 li
277.399 201.591 277.164 201.657 276.973 201.79 cv
276.781 201.922 276.633 202.108 276.529 202.348 cv
276.529 206.5 li
275.471 206.5 li
275.471 200.689 li
276.416 200.689 li
276.519 201.537 li
276.684 201.236 276.887 201.002 277.128 200.833 cv
277.37 200.665 277.648 200.581 277.963 200.581 cv
278.042 200.581 278.117 200.587 278.189 200.6 cv
278.261 200.612 278.32 200.626 278.366 200.64 cv
278.221 201.623 li
cp
f
287.781 203.997 mo
287.793 204.029 li
287.807 204.763 287.549 205.377 287.02 205.872 cv
286.489 206.366 285.789 206.613 284.919 206.613 cv
284.035 206.613 283.314 206.299 282.757 205.673 cv
282.2 205.046 281.922 204.251 281.922 203.288 cv
281.922 201.897 li
281.922 200.934 282.2 200.138 282.757 199.51 cv
283.314 198.881 284.035 198.567 284.919 198.567 cv
285.803 198.567 286.507 198.802 287.029 199.273 cv
287.553 199.744 287.807 200.368 287.793 201.145 cv
287.781 201.177 li
286.767 201.177 li
286.767 200.629 286.605 200.196 286.283 199.877 cv
285.961 199.559 285.506 199.399 284.919 199.399 cv
284.328 199.399 283.857 199.638 283.506 200.114 cv
283.155 200.59 282.98 201.181 282.98 201.886 cv
282.98 203.288 li
282.98 204.001 283.155 204.595 283.506 205.071 cv
283.857 205.547 284.328 205.786 284.919 205.786 cv
285.506 205.786 285.961 205.627 286.283 205.311 cv
286.605 204.993 286.767 204.556 286.767 203.997 cv
287.781 203.997 li
cp
f
290.166 206.5 mo
289.108 206.5 li
289.108 198.121 li
290.166 198.121 li
290.166 206.5 li
cp
f
292.938 206.5 mo
291.88 206.5 li
291.88 200.689 li
292.938 200.689 li
292.938 206.5 li
cp
292.938 199.201 mo
291.88 199.201 li
291.88 198.121 li
292.938 198.121 li
292.938 199.201 li
cp
f
296.875 205.786 mo
297.201 205.786 297.485 205.677 297.728 205.461 cv
297.973 205.244 298.094 204.978 298.094 204.663 cv
299.051 204.663 li
299.066 204.695 li
299.08 205.197 298.865 205.642 298.422 206.03 cv
297.978 206.419 297.463 206.613 296.875 206.613 cv
296.059 206.613 295.428 206.335 294.984 205.78 cv
294.541 205.225 294.318 204.534 294.318 203.707 cv
294.318 203.481 li
294.318 202.662 294.541 201.973 294.986 201.416 cv
295.434 200.859 296.063 200.581 296.875 200.581 cv
297.523 200.581 298.055 200.782 298.467 201.183 cv
298.881 201.583 299.08 202.076 299.066 202.66 cv
299.056 202.692 li
298.094 202.692 li
298.094 202.337 297.978 202.036 297.748 201.787 cv
297.518 201.538 297.227 201.414 296.875 201.414 cv
296.355 201.414 295.977 201.615 295.738 202.018 cv
295.501 202.421 295.382 202.909 295.382 203.481 cv
295.382 203.707 li
295.382 204.29 295.499 204.783 295.734 205.184 cv
295.969 205.585 296.349 205.786 296.875 205.786 cv
cp
f
301.93 203.82 mo
301.387 203.82 li
301.387 206.5 li
300.328 206.5 li
300.328 198.121 li
301.387 198.121 li
301.387 202.977 li
301.918 202.977 li
303.664 200.689 li
304.932 200.689 li
302.82 203.369 li
305.114 206.5 li
303.863 206.5 li
301.93 203.82 li
cp
f
291.691 158.893 mo
291.691 158.292 291.519 157.808 291.174 157.445 cv
290.828 157.081 290.215 156.731 289.334 156.393 cv
287.674 155.835 286.444 155.185 285.644 154.443 cv
284.844 153.702 284.443 152.659 284.443 151.315 cv
284.443 150.074 284.844 149.059 285.644 148.27 cv
286.444 147.48 287.53 147.016 288.904 146.876 cv
288.904 144.519 li
290.655 144.519 li
290.655 146.909 li
291.977 147.092 293.013 147.608 293.762 148.456 cv
294.511 149.305 294.874 150.408 294.852 151.767 cv
294.83 151.822 li
291.691 151.822 li
291.691 151.021 291.51 150.406 291.146 149.977 cv
290.782 149.547 290.273 149.332 289.62 149.332 cv
288.93 149.332 288.431 149.512 288.122 149.872 cv
287.814 150.232 287.66 150.716 287.66 151.326 cv
287.66 151.892 287.823 152.343 288.149 152.681 cv
288.477 153.019 289.102 153.382 290.027 153.771 cv
291.658 154.3 292.877 154.948 293.685 155.715 cv
294.492 156.483 294.896 157.535 294.896 158.872 cv
294.896 160.149 294.498 161.172 293.701 161.939 cv
292.904 162.706 291.816 163.16 290.435 163.3 cv
290.435 165.47 li
288.685 165.47 li
288.685 163.3 li
287.274 163.175 286.115 162.706 285.209 161.895 cv
284.302 161.083 283.863 159.892 283.893 158.32 cv
283.925 158.255 li
287.054 158.255 li
287.054 159.195 287.283 159.865 287.742 160.265 cv
288.201 160.665 288.797 160.865 289.532 160.865 cv
290.251 160.865 290.791 160.689 291.151 160.336 cv
291.511 159.984 291.691 159.503 291.691 158.893 cv
cp
.0588235 .188235 .247059 rgb
f
274.468 152.69 mo
267.654 152.69 li
267.654 150.69 li
274.468 150.69 li
274.468 152.69 li
cp
1 1 1 rgb
f
280.116 151.69 mo
272.157 154.942 li
274.046 151.69 li
272.157 148.439 li
280.116 151.69 li
cp
f
274.468 160.202 mo
267.654 160.202 li
267.654 158.202 li
274.468 158.202 li
274.468 160.202 li
cp
f
280.116 159.202 mo
272.157 162.454 li
274.046 159.202 li
272.157 155.95 li
280.116 159.202 li
cp
f
264.835 158.234 mo
251.699 146.18 li
251.699 163.753 li
256.222 159.233 li
259.506 165.565 li
261.891 164.329 li
258.728 158.234 li
264.835 158.234 li
cp
.0588235 .188235 .247059 rgb
f
370.656 204.529 mo
370.656 204.174 370.529 203.877 370.275 203.637 cv
370.021 203.398 369.574 203.193 368.933 203.025 cv
368.138 202.828 367.518 202.538 367.072 202.155 cv
366.625 201.771 366.402 201.29 366.402 200.71 cv
366.402 200.098 366.643 199.587 367.123 199.179 cv
367.602 198.771 368.226 198.567 368.992 198.567 cv
369.815 198.567 370.471 198.801 370.961 199.268 cv
371.449 199.735 371.685 200.28 371.672 200.903 cv
371.656 200.936 li
370.646 200.936 li
370.646 200.492 370.491 200.124 370.182 199.835 cv
369.871 199.544 369.475 199.399 368.992 199.399 cv
368.498 199.399 368.119 199.52 367.855 199.759 cv
367.592 199.999 367.461 200.311 367.461 200.694 cv
367.461 201.034 367.605 201.318 367.893 201.545 cv
368.182 201.773 368.65 201.972 369.298 202.144 cv
370.086 202.348 370.685 202.649 371.098 203.046 cv
371.509 203.444 371.715 203.935 371.715 204.518 cv
371.715 205.148 371.467 205.655 370.971 206.038 cv
370.475 206.421 369.828 206.613 369.029 206.613 cv
368.273 206.613 367.607 206.401 367.029 205.979 cv
366.45 205.557 366.17 204.991 366.188 204.282 cv
366.199 204.249 li
367.209 204.249 li
367.209 204.74 367.395 205.119 367.768 205.386 cv
368.14 205.652 368.56 205.786 369.029 205.786 cv
369.531 205.786 369.928 205.673 370.219 205.447 cv
370.511 205.222 370.656 204.915 370.656 204.529 cv
cp
.501961 .501961 .501961 rgb
f
374.213 206.5 mo
373.154 206.5 li
373.154 200.689 li
374.213 200.689 li
374.213 206.5 li
cp
374.213 199.201 mo
373.154 199.201 li
373.154 198.121 li
374.213 198.121 li
374.213 199.201 li
cp
f
377.311 199.287 mo
377.311 200.689 li
378.412 200.689 li
378.412 201.473 li
377.311 201.473 li
377.311 205.001 li
377.311 205.273 377.367 205.465 377.48 205.576 cv
377.594 205.687 377.743 205.743 377.93 205.743 cv
377.99 205.743 378.059 205.734 378.133 205.719 cv
378.209 205.702 378.271 205.686 378.321 205.667 cv
378.467 206.393 li
378.388 206.457 378.271 206.51 378.117 206.551 cv
377.963 206.592 377.81 206.613 377.66 206.613 cv
377.23 206.613 376.889 206.483 376.635 206.224 cv
376.381 205.964 376.254 205.557 376.254 205.001 cv
376.254 201.473 li
375.33 201.473 li
375.33 200.689 li
376.254 200.689 li
376.254 199.287 li
377.311 199.287 li
cp
f
381.785 201.414 mo
381.417 201.414 381.111 201.556 380.869 201.841 cv
380.629 202.125 380.48 202.49 380.427 202.934 cv
380.438 202.96 li
383.059 202.96 li
383.059 202.874 li
383.059 202.452 382.955 202.103 382.747 201.827 cv
382.539 201.551 382.219 201.414 381.785 201.414 cv
cp
381.952 206.613 mo
381.117 206.613 380.467 206.346 380 205.813 cv
379.533 205.279 379.299 204.577 379.299 203.707 cv
379.299 203.471 li
379.299 202.636 379.539 201.946 380.021 201.4 cv
380.503 200.854 381.091 200.581 381.785 200.581 cv
382.563 200.581 383.145 200.823 383.533 201.306 cv
383.922 201.79 384.117 202.432 384.117 203.234 cv
384.117 203.793 li
380.4 203.793 li
380.384 203.82 li
380.384 204.403 380.513 204.877 380.77 205.24 cv
381.028 205.604 381.422 205.786 381.952 205.786 cv
382.31 205.786 382.625 205.734 382.895 205.633 cv
383.165 205.53 383.396 205.39 383.59 205.211 cv
384.004 205.898 li
383.797 206.099 383.522 206.268 383.182 206.406 cv
382.842 206.544 382.432 206.613 381.952 206.613 cv
cp
f
392.06 205.034 mo
392.093 205.034 li
394.59 198.68 li
395.906 198.68 li
395.906 206.5 li
394.848 206.5 li
394.848 200.64 li
394.816 200.635 li
392.447 206.5 li
391.711 206.5 li
389.273 200.441 li
389.24 200.447 li
389.24 206.5 li
388.183 206.5 li
388.183 198.68 li
389.574 198.68 li
392.06 205.034 li
cp
f
399.408 205.727 mo
399.791 205.727 400.137 205.628 400.445 205.431 cv
400.753 205.234 400.953 205.009 401.047 204.754 cv
401.047 203.809 li
399.859 203.809 li
399.434 203.809 399.092 203.917 398.836 204.131 cv
398.58 204.346 398.452 204.599 398.452 204.889 cv
398.452 205.146 398.533 205.351 398.693 205.501 cv
398.855 205.651 399.094 205.727 399.408 205.727 cv
cp
401.164 206.5 mo
401.129 206.325 401.102 206.17 401.082 206.035 cv
401.061 205.901 401.05 205.766 401.047 205.63 cv
400.85 205.909 400.592 206.143 400.275 206.331 cv
399.959 206.519 399.617 206.613 399.252 206.613 cv
398.647 206.613 398.185 206.458 397.869 206.148 cv
397.553 205.838 397.395 205.412 397.395 204.867 cv
397.395 204.312 397.619 203.878 398.068 203.564 cv
398.518 203.251 399.127 203.095 399.896 203.095 cv
401.047 203.095 li
401.047 202.52 li
401.047 202.18 400.942 201.91 400.734 201.712 cv
400.527 201.513 400.233 201.414 399.853 201.414 cv
399.51 201.414 399.232 201.499 399.021 201.671 cv
398.81 201.843 398.705 202.049 398.705 202.289 cv
397.7 202.3 li
397.689 202.268 li
397.664 201.845 397.862 201.458 398.283 201.107 cv
398.703 200.756 399.247 200.581 399.913 200.581 cv
400.572 200.581 401.102 200.749 401.503 201.083 cv
401.904 201.418 402.104 201.9 402.104 202.531 cv
402.104 205.329 li
402.104 205.537 402.115 205.737 402.137 205.931 cv
402.158 206.124 402.197 206.314 402.255 206.5 cv
401.164 206.5 li
cp
f
407.535 203.702 mo
407.535 203.043 407.404 202.501 407.145 202.077 cv
406.886 201.652 406.504 201.44 405.998 201.44 cv
405.694 201.44 405.435 201.509 405.22 201.648 cv
405.005 201.785 404.831 201.974 404.699 202.214 cv
404.699 205.023 li
404.831 205.263 405.005 205.45 405.22 205.584 cv
405.435 205.719 405.697 205.786 406.01 205.786 cv
406.511 205.786 406.891 205.602 407.148 205.235 cv
407.406 204.868 407.535 204.395 407.535 203.814 cv
407.535 203.702 li
cp
408.593 203.814 mo
408.593 204.652 408.393 205.328 407.991 205.842 cv
407.59 206.356 407.037 206.613 406.332 206.613 cv
405.974 206.613 405.659 206.553 405.389 206.433 cv
405.119 206.313 404.889 206.133 404.699 205.893 cv
404.699 208.734 li
403.641 208.734 li
403.641 200.689 li
404.451 200.689 li
404.618 201.44 li
404.809 201.161 405.045 200.948 405.327 200.801 cv
405.609 200.654 405.939 200.581 406.315 200.581 cv
407.035 200.581 407.595 200.867 407.994 201.438 cv
408.393 202.009 408.593 202.764 408.593 203.702 cv
408.593 203.814 li
cp
f
417.601 183.218 mo
357.101 183.218 li
357.101 144.576 li
417.601 144.576 li
417.601 183.218 li
cp
354.101 141.487 mo
354.101 186.307 li
420.601 186.307 li
420.601 141.487 li
354.101 141.487 li
cp
.0588235 .188235 .247059 rgb
f
417.601 150.875 mo
357.101 150.875 li
357.101 144.576 li
417.601 144.576 li
417.601 150.875 li
cp
.172549 .345098 .443137 rgb
f
406.868 149.114 mo
404.09 149.114 li
404.09 146.336 li
406.868 146.336 li
406.868 149.114 li
cp
.992157 .776471 .227451 rgb
f
410.984 149.114 mo
408.207 149.114 li
408.207 146.336 li
410.984 146.336 li
410.984 149.114 li
cp
.756863 .839216 .294118 rgb
f
415.101 149.114 mo
412.322 149.114 li
412.322 146.336 li
415.101 146.336 li
415.101 149.114 li
cp
.992157 .411765 .168627 rgb
f
387.351 183.218 mo
357.101 183.218 li
357.101 150.875 li
387.351 150.875 li
387.351 183.218 li
cp
.756863 .839216 .294118 rgb
f
417.601 183.218 mo
387.351 183.218 li
387.351 150.875 li
417.601 150.875 li
417.601 183.218 li
cp
.623529 .713726 .0117647 rgb
f
387.35 174.14 mo
387.073 174.14 386.85 173.917 386.85 173.64 cv
386.85 168.903 li
386.85 168.627 387.073 168.403 387.35 168.403 cv
387.626 168.403 387.85 168.627 387.85 168.903 cv
387.85 173.64 li
387.85 173.917 387.626 174.14 387.35 174.14 cv
cp
1 1 1 rgb
f
374.131 165.941 mo
374.01 165.941 373.888 165.898 373.792 165.809 cv
373.589 165.622 373.576 165.306 373.763 165.102 cv
379.597 158.772 li
379.784 158.57 380.102 158.557 380.304 158.743 cv
380.507 158.93 380.52 159.247 380.333 159.45 cv
374.499 165.78 li
374.4 165.887 374.266 165.941 374.131 165.941 cv
cp
f
371.499 174.14 mo
371.223 174.14 370.999 173.917 370.999 173.64 cv
370.999 169.949 li
370.999 169.673 371.223 169.449 371.499 169.449 cv
371.775 169.449 371.999 169.673 371.999 169.949 cv
371.999 173.64 li
371.999 173.917 371.775 174.14 371.499 174.14 cv
cp
f
400.57 165.941 mo
400.435 165.941 400.301 165.887 400.202 165.78 cv
394.368 159.45 li
394.182 159.247 394.194 158.93 394.397 158.743 cv
394.601 158.557 394.917 158.57 395.104 158.772 cv
400.938 165.102 li
401.125 165.306 401.112 165.622 400.909 165.809 cv
400.813 165.898 400.691 165.941 400.57 165.941 cv
cp
f
403.202 174.14 mo
402.926 174.14 402.702 173.917 402.702 173.64 cv
402.702 169.949 li
402.702 169.673 402.926 169.449 403.202 169.449 cv
403.478 169.449 403.702 169.673 403.702 169.949 cv
403.702 173.64 li
403.702 173.917 403.478 174.14 403.202 174.14 cv
cp
f
382.088 168.033 mo
376.763 168.033 li
376.486 168.033 376.263 167.809 376.263 167.533 cv
376.263 167.256 376.486 167.033 376.763 167.033 cv
382.088 167.033 li
382.364 167.033 382.588 167.256 382.588 167.533 cv
382.588 167.809 382.364 168.033 382.088 168.033 cv
cp
f
387.35 165.615 mo
387.073 165.615 386.85 165.392 386.85 165.115 cv
386.85 160.378 li
386.85 160.102 387.073 159.878 387.35 159.878 cv
387.626 159.878 387.85 160.102 387.85 160.378 cv
387.85 165.115 li
387.85 165.392 387.626 165.615 387.35 165.615 cv
cp
f
396.619 157.186 mo
396.619 155.423 392.47 153.994 387.351 153.994 cv
387.351 160.378 li
392.47 160.378 396.619 158.949 396.619 157.186 cv
cp
.901961 .901961 .901961 rgb
f
387.35 153.994 mo
382.232 153.994 378.082 155.423 378.082 157.186 cv
378.082 158.949 382.232 160.378 387.35 160.378 cv
387.351 160.378 li
387.351 153.994 li
387.35 153.994 li
cp
1 1 1 rgb
f
376.763 167.533 mo
376.763 166.197 374.406 165.115 371.499 165.115 cv
371.499 169.949 li
374.406 169.949 376.763 168.867 376.763 167.533 cv
cp
.901961 .901961 .901961 rgb
f
371.499 165.115 mo
368.593 165.115 366.236 166.197 366.236 167.533 cv
366.236 168.867 368.593 169.949 371.499 169.949 cv
371.499 169.949 li
371.499 165.115 li
371.499 165.115 li
cp
1 1 1 rgb
f
382.088 176.558 mo
376.763 176.558 li
376.486 176.558 376.263 176.334 376.263 176.058 cv
376.263 175.781 376.486 175.558 376.763 175.558 cv
382.088 175.558 li
382.364 175.558 382.588 175.781 382.588 176.058 cv
382.588 176.334 382.364 176.558 382.088 176.558 cv
cp
f
397.938 168.033 mo
392.613 168.033 li
392.337 168.033 392.113 167.809 392.113 167.533 cv
392.113 167.256 392.337 167.033 392.613 167.033 cv
397.938 167.033 li
398.215 167.033 398.438 167.256 398.438 167.533 cv
398.438 167.809 398.215 168.033 397.938 168.033 cv
cp
f
397.938 176.558 mo
392.613 176.558 li
392.337 176.558 392.113 176.334 392.113 176.058 cv
392.113 175.781 392.337 175.558 392.613 175.558 cv
397.938 175.558 li
398.215 175.558 398.438 175.781 398.438 176.058 cv
398.438 176.334 398.215 176.558 397.938 176.558 cv
cp
f
392.614 167.533 mo
392.614 166.197 390.258 165.115 387.351 165.115 cv
387.351 169.949 li
390.258 169.949 392.614 168.867 392.614 167.533 cv
cp
.901961 .901961 .901961 rgb
f
387.351 165.115 mo
384.444 165.115 382.088 166.197 382.088 167.533 cv
382.088 168.867 384.444 169.949 387.351 169.949 cv
387.351 169.949 li
387.351 165.115 li
387.351 165.115 li
cp
1 1 1 rgb
f
408.466 167.533 mo
408.466 166.197 406.109 165.115 403.202 165.115 cv
403.202 169.949 li
406.109 169.949 408.466 168.867 408.466 167.533 cv
cp
.901961 .901961 .901961 rgb
f
403.202 165.115 mo
400.296 165.115 397.939 166.197 397.939 167.533 cv
397.939 168.867 400.296 169.949 403.202 169.949 cv
403.202 169.949 li
403.202 165.115 li
403.202 165.115 li
cp
1 1 1 rgb
f
376.763 176.058 mo
376.763 174.722 374.406 173.64 371.499 173.64 cv
371.499 178.474 li
374.406 178.474 376.763 177.392 376.763 176.058 cv
cp
.901961 .901961 .901961 rgb
f
371.499 173.64 mo
368.593 173.64 366.236 174.722 366.236 176.058 cv
366.236 177.392 368.593 178.474 371.499 178.474 cv
371.499 178.474 li
371.499 173.64 li
371.499 173.64 li
cp
1 1 1 rgb
f
392.614 176.058 mo
392.614 174.722 390.258 173.64 387.351 173.64 cv
387.351 178.474 li
390.258 178.474 392.614 177.392 392.614 176.058 cv
cp
.901961 .901961 .901961 rgb
f
387.351 173.64 mo
384.444 173.64 382.088 174.722 382.088 176.058 cv
382.088 177.392 384.444 178.474 387.351 178.474 cv
387.351 178.474 li
387.351 173.64 li
387.351 173.64 li
cp
1 1 1 rgb
f
408.466 176.058 mo
408.466 174.722 406.109 173.64 403.202 173.64 cv
403.202 178.474 li
406.109 178.474 408.466 177.392 408.466 176.058 cv
cp
.901961 .901961 .901961 rgb
f
403.202 173.64 mo
400.296 173.64 397.939 174.722 397.939 176.058 cv
397.939 177.392 400.296 178.474 403.202 178.474 cv
403.202 178.474 li
403.202 173.64 li
403.202 173.64 li
cp
1 1 1 rgb
f
44.5361 306.664 mo
44.5469 306.695 li
44.561 307.43 44.3032 308.044 43.7734 308.538 cv
43.2437 309.032 42.5435 309.279 41.6733 309.279 cv
40.7891 309.279 40.0684 308.966 39.5112 308.34 cv
38.9546 307.713 38.6763 306.918 38.6763 305.955 cv
38.6763 304.564 li
38.6763 303.6 38.9546 302.805 39.5112 302.176 cv
40.0684 301.547 40.7891 301.233 41.6733 301.233 cv
42.5576 301.233 43.2612 301.469 43.7842 301.94 cv
44.3071 302.41 44.561 303.035 44.5469 303.811 cv
44.5361 303.844 li
43.521 303.844 li
43.521 303.296 43.3599 302.863 43.0376 302.544 cv
42.7153 302.225 42.2607 302.066 41.6733 302.066 cv
41.0825 302.066 40.6118 302.305 40.2607 302.78 cv
39.9097 303.256 39.7344 303.848 39.7344 304.553 cv
39.7344 305.955 li
39.7344 306.667 39.9097 307.262 40.2607 307.738 cv
40.6118 308.214 41.0825 308.452 41.6733 308.452 cv
42.2607 308.452 42.7153 308.293 43.0376 307.977 cv
43.3599 307.66 43.521 307.223 43.521 306.664 cv
44.5361 306.664 li
cp
.501961 .501961 .501961 rgb
f
46.5879 306.325 mo
46.5879 306.941 46.7178 307.449 46.9775 307.851 cv
47.2368 308.252 47.6226 308.452 48.1348 308.452 cv
48.6396 308.452 49.0229 308.252 49.2842 307.851 cv
49.5454 307.449 49.6763 306.941 49.6763 306.325 cv
49.6763 306.207 li
49.6763 305.598 49.5449 305.092 49.2813 304.688 cv
49.0186 304.282 48.6323 304.08 48.124 304.08 cv
47.6191 304.08 47.2368 304.282 46.9775 304.688 cv
46.7178 305.092 46.5879 305.598 46.5879 306.207 cv
46.5879 306.325 li
cp
45.5298 306.207 mo
45.5298 305.348 45.7627 304.64 46.228 304.082 cv
46.6934 303.525 47.3257 303.248 48.124 303.248 cv
48.9297 303.248 49.5664 303.525 50.0332 304.08 cv
50.501 304.635 50.7344 305.344 50.7344 306.207 cv
50.7344 306.325 li
50.7344 307.191 50.5015 307.9 50.0361 308.452 cv
49.5708 309.004 48.937 309.279 48.1348 309.279 cv
47.3325 309.279 46.6982 309.002 46.2305 308.449 cv
45.7637 307.897 45.5298 307.188 45.5298 306.325 cv
45.5298 306.207 li
cp
f
52.9741 303.355 mo
53.0493 304.117 li
53.2393 303.842 53.48 303.628 53.7715 303.477 cv
54.0635 303.324 54.4028 303.248 54.7896 303.248 cv
55.1763 303.248 55.5083 303.337 55.7861 303.516 cv
56.0635 303.695 56.272 303.964 56.4116 304.322 cv
56.5977 303.988 56.8403 303.727 57.1396 303.535 cv
57.4385 303.344 57.7886 303.248 58.1895 303.248 cv
58.7803 303.248 59.2476 303.451 59.5913 303.857 cv
59.9351 304.264 60.1069 304.875 60.1069 305.691 cv
60.1069 309.166 li
59.0488 309.166 li
59.0488 305.681 li
59.0488 305.107 58.9502 304.702 58.7534 304.465 cv
58.5566 304.227 58.2627 304.107 57.8726 304.107 cv
57.5107 304.107 57.2183 304.232 56.9941 304.482 cv
56.7705 304.733 56.6392 305.051 56.5996 305.434 cv
56.5996 305.477 li
56.5996 309.166 li
55.5361 309.166 li
55.5361 305.681 li
55.5361 305.137 55.4351 304.738 55.2324 304.486 cv
55.0303 304.232 54.7393 304.107 54.3599 304.107 cv
54.0376 304.107 53.7725 304.174 53.5649 304.306 cv
53.3574 304.438 53.1978 304.625 53.0869 304.864 cv
53.0869 309.166 li
52.0288 309.166 li
52.0288 303.355 li
52.9741 303.355 li
cp
f
62.5884 303.355 mo
62.6636 304.117 li
62.8535 303.842 63.0942 303.628 63.3857 303.477 cv
63.6777 303.324 64.0171 303.248 64.4038 303.248 cv
64.7905 303.248 65.1226 303.337 65.4004 303.516 cv
65.6777 303.695 65.8862 303.964 66.0259 304.322 cv
66.2119 303.988 66.4546 303.727 66.7539 303.535 cv
67.0527 303.344 67.4028 303.248 67.8037 303.248 cv
68.3945 303.248 68.8618 303.451 69.2056 303.857 cv
69.5493 304.264 69.7212 304.875 69.7212 305.691 cv
69.7212 309.166 li
68.6631 309.166 li
68.6631 305.681 li
68.6631 305.107 68.5645 304.702 68.3677 304.465 cv
68.1709 304.227 67.877 304.107 67.4868 304.107 cv
67.125 304.107 66.8325 304.232 66.6084 304.482 cv
66.3848 304.733 66.2534 305.051 66.2139 305.434 cv
66.2139 305.477 li
66.2139 309.166 li
65.1504 309.166 li
65.1504 305.681 li
65.1504 305.137 65.0493 304.738 64.8467 304.486 cv
64.6445 304.232 64.3535 304.107 63.9741 304.107 cv
63.6519 304.107 63.3867 304.174 63.1792 304.306 cv
62.9717 304.438 62.812 304.625 62.7012 304.864 cv
62.7012 309.166 li
61.6431 309.166 li
61.6431 303.355 li
62.5884 303.355 li
cp
f
73.4971 304.08 mo
73.1284 304.08 72.8232 304.223 72.5811 304.508 cv
72.3398 304.791 72.1919 305.156 72.1382 305.6 cv
72.1489 305.627 li
74.77 305.627 li
74.77 305.541 li
74.77 305.119 74.666 304.77 74.4585 304.494 cv
74.251 304.218 73.9302 304.08 73.4971 304.08 cv
cp
73.6636 309.279 mo
72.8291 309.279 72.1787 309.013 71.7109 308.478 cv
71.2441 307.945 71.0103 307.244 71.0103 306.373 cv
71.0103 306.137 li
71.0103 305.303 71.251 304.613 71.7324 304.066 cv
72.2144 303.521 72.8022 303.248 73.4971 303.248 cv
74.2739 303.248 74.8569 303.489 75.2451 303.973 cv
75.6338 304.456 75.8281 305.099 75.8281 305.9 cv
75.8281 306.459 li
72.1113 306.459 li
72.0952 306.486 li
72.0952 307.07 72.2241 307.543 72.4819 307.906 cv
72.7397 308.271 73.1338 308.452 73.6636 308.452 cv
74.0215 308.452 74.3359 308.4 74.6064 308.299 cv
74.8765 308.197 75.1084 308.057 75.3018 307.877 cv
75.7153 308.565 li
75.5078 308.766 75.2339 308.935 74.8936 309.072 cv
74.5532 309.211 74.1436 309.279 73.6636 309.279 cv
cp
f
77.9604 303.355 mo
78.0356 304.22 li
78.229 303.912 78.4717 303.673 78.7637 303.502 cv
79.0552 303.332 79.3872 303.248 79.7598 303.248 cv
80.3862 303.248 80.8716 303.432 81.2153 303.799 cv
81.5591 304.165 81.731 304.732 81.731 305.498 cv
81.731 309.166 li
80.6729 309.166 li
80.6729 305.52 li
80.6729 305.008 80.5718 304.645 80.3691 304.43 cv
80.167 304.215 79.8584 304.107 79.4429 304.107 cv
79.1172 304.107 78.8403 304.172 78.6133 304.303 cv
78.3857 304.434 78.2056 304.617 78.0732 304.853 cv
78.0732 309.166 li
77.0151 309.166 li
77.0151 303.355 li
77.9604 303.355 li
cp
f
84.7388 301.953 mo
84.7388 303.355 li
85.8398 303.355 li
85.8398 304.139 li
84.7388 304.139 li
84.7388 307.668 li
84.7388 307.94 84.7949 308.132 84.9082 308.242 cv
85.0205 308.353 85.1704 308.409 85.3564 308.409 cv
85.4175 308.409 85.4854 308.4 85.5605 308.385 cv
85.6357 308.369 85.6982 308.352 85.7485 308.334 cv
85.8936 309.059 li
85.8149 309.123 85.6982 309.176 85.5444 309.217 cv
85.3906 309.259 85.2383 309.279 85.0879 309.279 cv
84.6582 309.279 84.3164 309.149 84.062 308.891 cv
83.8076 308.631 83.6807 308.223 83.6807 307.668 cv
83.6807 304.139 li
82.7568 304.139 li
82.7568 303.355 li
83.6807 303.355 li
83.6807 301.953 li
84.7388 301.953 li
cp
f
90.3516 307.603 mo
90.3516 307.371 90.2627 307.182 90.0859 307.034 cv
89.9082 306.887 89.5728 306.758 89.0786 306.647 cv
88.3945 306.5 87.8691 306.295 87.502 306.029 cv
87.1353 305.765 86.9517 305.41 86.9517 304.967 cv
86.9517 304.494 87.1533 304.089 87.5557 303.752 cv
87.959 303.416 88.4805 303.248 89.1216 303.248 cv
89.7803 303.248 90.314 303.427 90.7222 303.785 cv
91.1304 304.143 91.3257 304.56 91.3076 305.036 cv
91.2969 305.068 li
90.2871 305.068 li
90.2871 304.818 90.1768 304.59 89.957 304.387 cv
89.7363 304.182 89.458 304.08 89.1216 304.08 cv
88.749 304.08 88.4707 304.164 88.2861 304.332 cv
88.1021 304.501 88.0098 304.701 88.0098 304.934 cv
88.0098 305.163 88.0894 305.34 88.249 305.466 cv
88.4082 305.592 88.7368 305.705 89.2344 305.81 cv
89.9468 305.96 90.4878 306.173 90.8564 306.449 cv
91.2251 306.725 91.4097 307.084 91.4097 307.528 cv
91.4097 308.044 91.2012 308.465 90.7842 308.791 cv
90.3667 309.116 89.8218 309.279 89.1484 309.279 cv
88.4072 309.279 87.8237 309.092 87.3975 308.715 cv
86.9712 308.34 86.769 307.9 86.7905 307.399 cv
86.8013 307.367 li
87.811 307.367 li
87.8291 307.743 87.9688 308.018 88.23 308.191 cv
88.4912 308.365 88.7974 308.452 89.1484 308.452 cv
89.5244 308.452 89.8188 308.373 90.0322 308.213 cv
90.2451 308.054 90.3516 307.851 90.3516 307.603 cv
cp
f
77.5703 244.481 mo
67.4683 244.481 59.2495 252.701 59.2495 262.804 cv
59.2495 272.905 67.4683 281.124 77.5703 281.124 cv
81.5713 281.124 85.3706 279.858 88.5571 277.465 cv
90.1567 276.264 li
93.0107 278.695 li
91.605 274.648 li
92.3765 273.591 li
94.6763 270.44 95.8916 266.71 95.8916 262.804 cv
95.8916 252.701 87.6729 244.481 77.5703 244.481 cv
cp
90.0361 280.102 mo
86.3926 282.734 82.0913 284.124 77.5703 284.124 cv
65.814 284.124 56.2495 274.56 56.2495 262.804 cv
56.2495 251.047 65.814 241.481 77.5703 241.481 cv
89.3271 241.481 98.8916 251.047 98.8916 262.804 cv
98.8916 267.262 97.5308 271.523 94.9536 275.146 cv
99.4678 288.136 li
90.0361 280.102 li
cp
.0588235 .188235 .247059 rgb
f
43.3101 250.158 mo
36.8848 250.158 31.6748 255.364 31.6748 261.794 cv
31.6748 264.486 li
31.6748 270.56 36.3306 275.54 42.2656 276.071 cv
35.0098 289.711 li
54.6914 276.122 li
58.6738 276.122 li
58.6738 250.158 li
43.3101 250.158 li
cp
.992157 .776471 .227451 rgb
f
75.667 250.158 mo
58.6738 250.158 li
58.6738 276.122 li
75.667 276.122 li
82.0918 276.122 87.3013 270.912 87.3013 264.486 cv
87.3013 261.794 li
87.3013 255.364 82.0918 250.158 75.667 250.158 cv
cp
.992157 .627451 .0784314 rgb
f
49.5063 263.173 mo
49.5063 264.308 48.5869 265.228 47.4507 265.228 cv
46.3164 265.228 45.3965 264.308 45.3965 263.173 cv
45.3965 262.038 46.3164 261.119 47.4507 261.119 cv
48.5869 261.119 49.5063 262.038 49.5063 263.173 cv
cp
1 1 1 rgb
f
61.5425 263.173 mo
61.5425 264.308 60.624 265.228 59.4878 265.228 cv
58.3535 265.228 57.4336 264.308 57.4336 263.173 cv
57.4336 262.038 58.3535 261.119 59.4878 261.119 cv
60.624 261.119 61.5425 262.038 61.5425 263.173 cv
cp
f
73.5796 263.173 mo
73.5796 264.308 72.6597 265.228 71.5244 265.228 cv
70.3896 265.228 69.4707 264.308 69.4707 263.173 cv
69.4707 262.038 70.3896 261.119 71.5244 261.119 cv
72.6597 261.119 73.5796 262.038 73.5796 263.173 cv
cp
f
198.943 277.324 mo
137.578 277.324 li
137.578 237.896 li
198.943 237.896 li
198.943 277.324 li
cp
0 0 0 rgb
f
180.852 289.897 mo
157.565 289.897 li
163.897 281.428 li
174.521 281.428 li
180.852 289.897 li
cp
.678431 .678431 .678431 rgb
f
194.443 285.531 mo
142.078 285.531 li
139.592 285.531 137.578 283.693 137.578 281.428 cv
137.578 277.324 li
198.943 277.324 li
198.943 277.324 198.943 279.162 198.943 281.428 cv
198.943 283.693 196.928 285.531 194.443 285.531 cv
cp
.858824 .858824 .858824 rgb
f
181.707 292.56 mo
156.711 292.56 li
156.711 289.897 li
181.707 289.897 li
181.707 292.56 li
cp
0 0 0 rgb
f
139.377 239.697 mo
139.377 275.525 li
169.209 275.525 li
169.209 239.697 li
139.377 239.697 li
cp
.756863 .839216 .294118 rgb
f
197.143 239.697 mo
169.209 239.697 li
169.209 275.525 li
197.143 275.525 li
197.143 239.697 li
cp
.623529 .713726 .0117647 rgb
f
142.2 307.454 mo
142.335 308.48 li
142.367 308.485 li
142.549 307.454 li
143.935 302.346 li
144.972 302.346 li
146.368 307.454 li
146.551 308.502 li
146.583 308.502 li
146.728 307.454 li
147.845 302.346 li
148.995 302.346 li
147.104 310.166 li
146.159 310.166 li
144.596 304.742 li
144.477 304.038 li
144.445 304.038 li
144.332 304.742 li
142.748 310.166 li
141.803 310.166 li
139.917 302.346 li
141.061 302.346 li
142.2 307.454 li
cp
.501961 .501961 .501961 rgb
f
152.029 305.08 mo
151.661 305.08 151.355 305.223 151.113 305.508 cv
150.872 305.791 150.724 306.156 150.67 306.6 cv
150.681 306.627 li
153.302 306.627 li
153.302 306.541 li
153.302 306.119 153.198 305.77 152.991 305.494 cv
152.783 305.218 152.462 305.08 152.029 305.08 cv
cp
152.196 310.279 mo
151.361 310.279 150.711 310.013 150.243 309.478 cv
149.776 308.945 149.542 308.244 149.542 307.373 cv
149.542 307.137 li
149.542 306.303 149.783 305.613 150.265 305.066 cv
150.747 304.521 151.335 304.248 152.029 304.248 cv
152.806 304.248 153.389 304.489 153.777 304.973 cv
154.166 305.456 154.36 306.099 154.36 306.9 cv
154.36 307.459 li
150.644 307.459 li
150.627 307.486 li
150.627 308.07 150.756 308.543 151.014 308.906 cv
151.272 309.271 151.666 309.452 152.196 309.452 cv
152.554 309.452 152.868 309.4 153.139 309.299 cv
153.409 309.197 153.641 309.057 153.834 308.877 cv
154.248 309.565 li
154.04 309.766 153.766 309.935 153.426 310.072 cv
153.085 310.211 152.676 310.279 152.196 310.279 cv
cp
f
159.452 307.368 mo
159.452 306.702 159.33 306.158 159.084 305.738 cv
158.839 305.317 158.466 305.107 157.964 305.107 cv
157.639 305.107 157.364 305.186 157.14 305.346 cv
156.916 305.506 156.738 305.719 156.605 305.988 cv
156.605 308.507 li
156.742 308.793 156.92 309.018 157.14 309.178 cv
157.36 309.34 157.639 309.42 157.975 309.42 cv
158.473 309.42 158.843 309.242 159.087 308.889 cv
159.331 308.533 159.452 308.065 159.452 307.48 cv
159.452 307.368 li
cp
160.51 307.48 mo
160.51 308.318 160.309 308.994 159.906 309.508 cv
159.503 310.022 158.949 310.279 158.244 310.279 cv
157.857 310.279 157.521 310.203 157.236 310.051 cv
156.952 309.898 156.716 309.674 156.53 309.377 cv
156.358 310.166 li
155.547 310.166 li
155.547 301.787 li
156.605 301.787 li
156.605 305.043 li
156.788 304.785 157.015 304.588 157.285 304.451 cv
157.555 304.315 157.871 304.248 158.233 304.248 cv
158.949 304.248 159.508 304.534 159.909 305.107 cv
160.31 305.68 160.51 306.434 160.51 307.368 cv
160.51 307.48 li
cp
f
165.35 307.48 mo
165.35 308.068 165.47 308.538 165.71 308.891 cv
165.949 309.244 166.322 309.42 166.827 309.42 cv
167.142 309.42 167.407 309.348 167.622 309.205 cv
167.836 309.063 168.012 308.861 168.148 308.603 cv
168.148 305.891 li
168.012 305.651 167.835 305.461 167.619 305.318 cv
167.402 305.178 167.142 305.107 166.837 305.107 cv
166.329 305.107 165.954 305.316 165.712 305.735 cv
165.47 306.154 165.35 306.699 165.35 307.368 cv
165.35 307.48 li
cp
164.291 307.368 mo
164.291 306.434 164.491 305.68 164.89 305.107 cv
165.29 304.534 165.849 304.248 166.569 304.248 cv
166.909 304.248 167.21 304.31 167.474 304.435 cv
167.737 304.56 167.962 304.744 168.148 304.983 cv
168.148 301.787 li
169.206 301.787 li
169.206 310.166 li
168.395 310.166 li
168.234 309.431 li
168.044 309.71 167.81 309.922 167.53 310.065 cv
167.251 310.207 166.927 310.279 166.558 310.279 cv
165.849 310.279 165.294 310.022 164.893 309.508 cv
164.492 308.994 164.291 308.318 164.291 307.48 cv
164.291 307.368 li
cp
f
173.025 305.08 mo
172.656 305.08 172.351 305.223 172.109 305.508 cv
171.868 305.791 171.72 306.156 171.666 306.6 cv
171.677 306.627 li
174.298 306.627 li
174.298 306.541 li
174.298 306.119 174.194 305.77 173.986 305.494 cv
173.779 305.218 173.458 305.08 173.025 305.08 cv
cp
173.191 310.279 mo
172.357 310.279 171.706 310.013 171.239 309.478 cv
170.772 308.945 170.538 308.244 170.538 307.373 cv
170.538 307.137 li
170.538 306.303 170.779 305.613 171.26 305.066 cv
171.742 304.521 172.33 304.248 173.025 304.248 cv
173.802 304.248 174.385 304.489 174.773 304.973 cv
175.162 305.456 175.356 306.099 175.356 306.9 cv
175.356 307.459 li
171.639 307.459 li
171.623 307.486 li
171.623 308.07 171.752 308.543 172.01 308.906 cv
172.268 309.271 172.662 309.452 173.191 309.452 cv
173.549 309.452 173.864 309.4 174.134 309.299 cv
174.404 309.197 174.636 309.057 174.83 308.877 cv
175.243 309.565 li
175.036 309.766 174.762 309.935 174.421 310.072 cv
174.081 310.211 173.671 310.279 173.191 310.279 cv
cp
f
179.921 308.603 mo
179.921 308.371 179.832 308.182 179.656 308.034 cv
179.478 307.887 179.143 307.758 178.648 307.647 cv
177.964 307.5 177.439 307.295 177.072 307.029 cv
176.705 306.765 176.521 306.41 176.521 305.967 cv
176.521 305.494 176.723 305.089 177.125 304.752 cv
177.529 304.416 178.05 304.248 178.691 304.248 cv
179.35 304.248 179.884 304.427 180.292 304.785 cv
180.7 305.143 180.895 305.56 180.877 306.036 cv
180.867 306.068 li
179.857 306.068 li
179.857 305.818 179.747 305.59 179.527 305.387 cv
179.306 305.182 179.028 305.08 178.691 305.08 cv
178.319 305.08 178.04 305.164 177.856 305.332 cv
177.672 305.501 177.58 305.701 177.58 305.934 cv
177.58 306.163 177.659 306.34 177.819 306.466 cv
177.978 306.592 178.307 306.705 178.804 306.81 cv
179.517 306.96 180.058 307.173 180.426 307.449 cv
180.795 307.725 180.979 308.084 180.979 308.528 cv
180.979 309.044 180.771 309.465 180.354 309.791 cv
179.936 310.116 179.392 310.279 178.718 310.279 cv
177.977 310.279 177.394 310.092 176.967 309.715 cv
176.541 309.34 176.339 308.9 176.36 308.399 cv
176.371 308.367 li
177.381 308.367 li
177.399 308.743 177.539 309.018 177.8 309.191 cv
178.061 309.365 178.367 309.452 178.718 309.452 cv
179.094 309.452 179.389 309.373 179.602 309.213 cv
179.815 309.054 179.921 308.851 179.921 308.603 cv
cp
f
183.439 310.166 mo
182.381 310.166 li
182.381 304.355 li
183.439 304.355 li
183.439 310.166 li
cp
183.439 302.867 mo
182.381 302.867 li
182.381 301.787 li
183.439 301.787 li
183.439 302.867 li
cp
f
185.937 307.48 mo
185.937 308.065 186.057 308.533 186.297 308.889 cv
186.537 309.242 186.907 309.42 187.409 309.42 cv
187.727 309.42 187.994 309.348 188.209 309.203 cv
188.424 309.057 188.601 308.853 188.741 308.588 cv
188.741 305.912 li
188.604 305.666 188.427 305.469 188.209 305.324 cv
187.991 305.18 187.727 305.107 187.419 305.107 cv
186.915 305.107 186.541 305.316 186.3 305.735 cv
186.058 306.154 185.937 306.699 185.937 307.368 cv
185.937 307.48 li
cp
184.879 307.368 mo
184.879 306.434 185.079 305.68 185.477 305.107 cv
185.877 304.534 186.435 304.248 187.151 304.248 cv
187.52 304.248 187.844 304.322 188.123 304.471 cv
188.402 304.619 188.637 304.833 188.827 305.112 cv
188.956 304.355 li
189.799 304.355 li
189.799 310.199 li
189.799 310.943 189.582 311.516 189.149 311.914 cv
188.716 312.315 188.091 312.514 187.274 312.514 cv
186.995 312.514 186.693 312.475 186.369 312.398 cv
186.045 312.321 185.76 312.217 185.513 312.084 cv
185.674 311.262 li
185.878 311.369 186.124 311.457 186.412 311.523 cv
186.701 311.589 186.984 311.622 187.264 311.622 cv
187.779 311.622 188.154 311.505 188.389 311.27 cv
188.623 311.035 188.741 310.679 188.741 310.199 cv
188.741 309.538 li
188.551 309.781 188.324 309.966 188.059 310.092 cv
187.794 310.217 187.487 310.279 187.14 310.279 cv
186.431 310.279 185.877 310.022 185.477 309.508 cv
185.079 308.994 184.879 308.318 184.879 307.48 cv
184.879 307.368 li
cp
f
192.264 304.355 mo
192.339 305.22 li
192.533 304.912 192.775 304.673 193.067 304.502 cv
193.359 304.332 193.691 304.248 194.063 304.248 cv
194.69 304.248 195.175 304.432 195.519 304.799 cv
195.863 305.165 196.035 305.732 196.035 306.498 cv
196.035 310.166 li
194.977 310.166 li
194.977 306.52 li
194.977 306.008 194.875 305.645 194.673 305.43 cv
194.471 305.215 194.162 305.107 193.747 305.107 cv
193.421 305.107 193.144 305.172 192.917 305.303 cv
192.689 305.434 192.509 305.617 192.377 305.853 cv
192.377 310.166 li
191.319 310.166 li
191.319 304.355 li
192.264 304.355 li
cp
f
183.669 248.23 mo
183.669 248.23 177.815 247.498 176.205 250.863 cv
174.596 254.23 173.864 260.377 172.254 260.67 cv
170.644 260.963 183.669 263.305 187.913 253.938 cv
192.158 244.571 183.669 248.23 183.669 248.23 cv
cp
.235294 .141176 .0823529 rgb
f
189.962 243.303 mo
189.962 243.303 192.987 240.912 197.621 238.034 cv
202.199 235.191 207.964 232.766 207.964 232.766 cv
207.964 232.766 205.064 237.574 201.134 241.448 cv
197.67 244.863 194.207 248.23 194.207 248.23 cv
189.962 243.303 li
cp
f
202.744 235.985 mo
202.744 235.985 194.987 239.741 189.865 244.425 cv
184.743 249.108 191.231 245.01 191.231 245.01 cv
191.231 245.01 197.719 238.961 202.744 235.985 cv
cp
.537255 .411765 .337255 rgb
f
188.149 253.616 mo
183.589 248.134 li
189.975 242.821 li
194.535 248.304 li
188.149 253.616 li
cp
.847059 .847059 .847059 rgb
f
188.149 253.616 mo
183.589 248.134 li
185.718 246.363 li
190.278 251.845 li
188.149 253.616 li
cp
.0862745 .756863 .819608 rgb
f
189.865 243.596 mo
186.352 246.474 li
187.182 247.449 li
190.597 244.523 li
189.865 243.596 li
cp
1 1 1 rgb
f
182.84 249.059 mo
182.84 249.059 178.938 248.425 177.669 250.718 cv
176.401 253.011 179.815 251.742 182.84 249.059 cv
cp
.627451 .533333 .486275 rgb
f
252.314 303.203 mo
254.248 303.203 li
254.777 303.203 255.174 303.06 255.436 302.775 cv
255.696 302.49 255.827 302.132 255.827 301.699 cv
255.827 301.266 255.695 300.904 255.432 300.613 cv
255.17 300.324 254.774 300.179 254.248 300.179 cv
252.314 300.179 li
252.314 303.203 li
cp
252.314 304.029 mo
252.314 307.166 li
251.256 307.166 li
251.256 299.346 li
254.248 299.346 li
255.082 299.346 255.731 299.56 256.195 299.99 cv
256.658 300.42 256.891 300.986 256.891 301.688 cv
256.891 302.397 256.658 302.965 256.195 303.391 cv
255.731 303.816 255.082 304.029 254.248 304.029 cv
252.314 304.029 li
cp
.501961 .501961 .501961 rgb
f
258.846 304.325 mo
258.846 304.941 258.976 305.449 259.235 305.851 cv
259.494 306.252 259.881 306.452 260.393 306.452 cv
260.897 306.452 261.281 306.252 261.542 305.851 cv
261.803 305.449 261.934 304.941 261.934 304.325 cv
261.934 304.207 li
261.934 303.598 261.803 303.092 261.539 302.688 cv
261.276 302.282 260.891 302.08 260.382 302.08 cv
259.877 302.08 259.494 302.282 259.235 302.688 cv
258.976 303.092 258.846 303.598 258.846 304.207 cv
258.846 304.325 li
cp
257.787 304.207 mo
257.787 303.348 258.021 302.64 258.486 302.082 cv
258.951 301.525 259.584 301.248 260.382 301.248 cv
261.188 301.248 261.824 301.525 262.291 302.08 cv
262.759 302.635 262.992 303.344 262.992 304.207 cv
262.992 304.325 li
262.992 305.191 262.76 305.9 262.294 306.452 cv
261.828 307.004 261.195 307.279 260.393 307.279 cv
259.59 307.279 258.956 307.002 258.488 306.449 cv
258.021 305.897 257.787 305.188 257.787 304.325 cv
257.787 304.207 li
cp
f
267.037 302.289 mo
266.494 302.258 li
266.215 302.258 265.979 302.324 265.788 302.456 cv
265.596 302.588 265.449 302.775 265.345 303.015 cv
265.345 307.166 li
264.287 307.166 li
264.287 301.355 li
265.232 301.355 li
265.334 302.203 li
265.498 301.902 265.702 301.668 265.943 301.5 cv
266.185 301.332 266.464 301.248 266.779 301.248 cv
266.857 301.248 266.933 301.254 267.004 301.266 cv
267.076 301.279 267.135 301.293 267.182 301.307 cv
267.037 302.289 li
cp
f
269.701 299.953 mo
269.701 301.355 li
270.802 301.355 li
270.802 302.139 li
269.701 302.139 li
269.701 305.668 li
269.701 305.94 269.757 306.132 269.87 306.242 cv
269.982 306.353 270.133 306.409 270.318 306.409 cv
270.379 306.409 270.447 306.4 270.522 306.385 cv
270.598 306.369 270.66 306.352 270.711 306.334 cv
270.855 307.059 li
270.777 307.123 270.66 307.176 270.506 307.217 cv
270.352 307.259 270.2 307.279 270.05 307.279 cv
269.62 307.279 269.278 307.149 269.023 306.891 cv
268.77 306.631 268.643 306.223 268.643 305.668 cv
268.643 302.139 li
267.719 302.139 li
267.719 301.355 li
268.643 301.355 li
268.643 299.953 li
269.701 299.953 li
cp
f
272.375 307.166 mo
272.375 302.139 li
271.468 302.139 li
271.468 301.355 li
272.375 301.355 li
272.375 300.619 li
272.375 300 272.537 299.522 272.861 299.182 cv
273.185 298.844 273.638 298.675 274.218 298.675 cv
274.34 298.675 274.462 298.685 274.586 298.705 cv
274.709 298.725 274.846 298.752 274.996 298.787 cv
274.867 299.594 li
274.803 299.579 274.726 299.566 274.634 299.556 cv
274.543 299.545 274.447 299.539 274.347 299.539 cv
274.039 299.539 273.81 299.632 273.659 299.816 cv
273.509 300 273.434 300.268 273.434 300.619 cv
273.434 301.355 li
274.486 301.355 li
274.486 302.139 li
273.434 302.139 li
273.434 307.166 li
272.375 307.166 li
cp
f
276.366 304.325 mo
276.366 304.941 276.496 305.449 276.756 305.851 cv
277.016 306.252 277.4 306.452 277.913 306.452 cv
278.418 306.452 278.801 306.252 279.063 305.851 cv
279.324 305.449 279.455 304.941 279.455 304.325 cv
279.455 304.207 li
279.455 303.598 279.323 303.092 279.06 302.688 cv
278.797 302.282 278.41 302.08 277.902 302.08 cv
277.397 302.08 277.016 302.282 276.756 302.688 cv
276.496 303.092 276.366 303.598 276.366 304.207 cv
276.366 304.325 li
cp
275.309 304.207 mo
275.309 303.348 275.541 302.64 276.006 302.082 cv
276.472 301.525 277.103 301.248 277.902 301.248 cv
278.708 301.248 279.345 301.525 279.811 302.08 cv
280.279 302.635 280.513 303.344 280.513 304.207 cv
280.513 304.325 li
280.513 305.191 280.279 305.9 279.814 306.452 cv
279.35 307.004 278.715 307.279 277.913 307.279 cv
277.111 307.279 276.477 307.002 276.009 306.449 cv
275.542 305.897 275.309 305.188 275.309 304.325 cv
275.309 304.207 li
cp
f
282.951 307.166 mo
281.893 307.166 li
281.893 298.787 li
282.951 298.787 li
282.951 307.166 li
cp
f
285.723 307.166 mo
284.664 307.166 li
284.664 301.355 li
285.723 301.355 li
285.723 307.166 li
cp
285.723 299.867 mo
284.664 299.867 li
284.664 298.787 li
285.723 298.787 li
285.723 299.867 li
cp
f
288.161 304.325 mo
288.161 304.941 288.291 305.449 288.551 305.851 cv
288.81 306.252 289.195 306.452 289.708 306.452 cv
290.213 306.452 290.596 306.252 290.857 305.851 cv
291.119 305.449 291.25 304.941 291.25 304.325 cv
291.25 304.207 li
291.25 303.598 291.118 303.092 290.854 302.688 cv
290.592 302.282 290.205 302.08 289.697 302.08 cv
289.192 302.08 288.81 302.282 288.551 302.688 cv
288.291 303.092 288.161 303.598 288.161 304.207 cv
288.161 304.325 li
cp
287.103 304.207 mo
287.103 303.348 287.336 302.64 287.801 302.082 cv
288.267 301.525 288.898 301.248 289.697 301.248 cv
290.503 301.248 291.14 301.525 291.606 302.08 cv
292.074 302.635 292.308 303.344 292.308 304.207 cv
292.308 304.325 li
292.308 305.191 292.074 305.9 291.609 306.452 cv
291.145 307.004 290.51 307.279 289.708 307.279 cv
288.906 307.279 288.271 307.002 287.804 306.449 cv
287.337 305.897 287.103 305.188 287.103 304.325 cv
287.103 304.207 li
cp
f
264.606 246.681 mo
278.572 246.681 li
278.572 235.886 li
277.461 234.941 li
265.601 234.941 li
264.606 235.954 li
264.606 246.681 li
cp
280.15 249.834 mo
263.029 249.834 li
262.157 249.834 261.452 249.128 261.452 248.257 cv
261.452 235.31 li
261.452 234.895 261.614 234.498 261.904 234.204 cv
263.815 232.259 li
264.111 231.956 264.517 231.787 264.939 231.787 cv
278.042 231.787 li
278.416 231.787 278.779 231.92 279.064 232.162 cv
281.172 233.957 li
281.523 234.256 281.727 234.695 281.727 235.158 cv
281.727 248.257 li
281.727 249.128 281.021 249.834 280.15 249.834 cv
cp
.0588235 .188235 .247059 rgb
f
243.051 239.909 mo
240.563 239.909 238.545 241.926 238.545 244.414 cv
238.545 279.12 li
238.545 281.609 240.563 283.626 243.051 283.626 cv
271.589 283.626 li
271.589 239.909 li
243.051 239.909 li
cp
.0862745 .756863 .819608 rgb
f
300.128 239.909 mo
271.589 239.909 li
271.589 283.626 li
300.128 283.626 li
302.615 283.626 304.634 281.609 304.634 279.12 cv
304.634 244.414 li
304.634 241.926 302.615 239.909 300.128 239.909 cv
cp
.0784314 .690196 .74902 rgb
f
296.476 252.615 mo
246.703 252.615 li
246.703 250.813 li
296.476 250.813 li
296.476 252.615 li
cp
.992157 .776471 .227451 rgb
f
296.476 259.478 mo
246.703 259.478 li
246.703 257.676 li
296.476 257.676 li
296.476 259.478 li
cp
f
296.476 266.341 mo
246.703 266.341 li
246.703 264.539 li
296.476 264.539 li
296.476 266.341 li
cp
f
296.476 283.626 mo
289.799 283.626 li
289.799 239.909 li
296.476 239.909 li
296.476 283.626 li
cp
.0588235 .188235 .247059 rgb
f
246.703 283.626 mo
253.38 283.626 li
253.38 239.909 li
246.703 239.909 li
246.703 283.626 li
cp
f
267.125 285.58 mo
258.761 285.58 li
258.761 283.626 li
267.125 283.626 li
267.125 285.58 li
cp
f
276.314 285.58 mo
284.679 285.58 li
284.679 283.626 li
276.314 283.626 li
276.314 285.58 li
cp
f
369.188 303.166 mo
368.131 303.166 li
364.365 297.193 li
364.333 297.205 li
364.333 303.166 li
363.275 303.166 li
363.275 295.346 li
364.333 295.346 li
368.098 301.314 li
368.131 301.303 li
368.131 295.346 li
369.188 295.346 li
369.188 303.166 li
cp
.501961 .501961 .501961 rgb
f
373.115 298.08 mo
372.746 298.08 372.441 298.223 372.199 298.508 cv
371.957 298.791 371.81 299.156 371.756 299.6 cv
371.767 299.627 li
374.388 299.627 li
374.388 299.541 li
374.388 299.119 374.283 298.77 374.076 298.494 cv
373.869 298.218 373.548 298.08 373.115 298.08 cv
cp
373.281 303.279 mo
372.447 303.279 371.797 303.013 371.328 302.478 cv
370.861 301.945 370.628 301.244 370.628 300.373 cv
370.628 300.137 li
370.628 299.303 370.869 298.613 371.35 298.066 cv
371.832 297.521 372.42 297.248 373.115 297.248 cv
373.892 297.248 374.475 297.489 374.863 297.973 cv
375.252 298.456 375.445 299.099 375.445 299.9 cv
375.445 300.459 li
371.728 300.459 li
371.713 300.486 li
371.713 301.07 371.842 301.543 372.1 301.906 cv
372.357 302.271 372.752 302.452 373.281 302.452 cv
373.639 302.452 373.953 302.4 374.225 302.299 cv
374.494 302.197 374.727 302.057 374.92 301.877 cv
375.333 302.565 li
375.125 302.766 374.852 302.935 374.512 303.072 cv
374.171 303.211 373.762 303.279 373.281 303.279 cv
cp
f
378.104 295.953 mo
378.104 297.355 li
379.205 297.355 li
379.205 298.139 li
378.104 298.139 li
378.104 301.668 li
378.104 301.94 378.16 302.132 378.273 302.242 cv
378.387 302.353 378.536 302.409 378.723 302.409 cv
378.783 302.409 378.852 302.4 378.926 302.385 cv
379.002 302.369 379.064 302.352 379.114 302.334 cv
379.26 303.059 li
379.181 303.123 379.064 303.176 378.91 303.217 cv
378.756 303.259 378.603 303.279 378.453 303.279 cv
378.023 303.279 377.682 303.149 377.428 302.891 cv
377.174 302.631 377.047 302.223 377.047 301.668 cv
377.047 298.139 li
376.123 298.139 li
376.123 297.355 li
377.047 297.355 li
377.047 295.953 li
378.104 295.953 li
cp
f
381.826 301.051 mo
381.961 301.797 li
381.993 301.797 li
382.133 301.051 li
383.293 297.355 li
384.142 297.355 li
385.307 301.051 li
385.457 301.883 li
385.49 301.883 li
385.662 301.051 li
386.521 297.355 li
387.627 297.355 li
385.941 303.166 li
385.087 303.166 li
383.938 299.627 li
383.717 298.703 li
383.685 298.703 li
383.48 299.627 li
382.353 303.166 li
381.499 303.166 li
379.813 297.355 li
380.914 297.355 li
381.826 301.051 li
cp
f
389.475 300.325 mo
389.475 300.941 389.605 301.449 389.865 301.851 cv
390.124 302.252 390.51 302.452 391.021 302.452 cv
391.527 302.452 391.91 302.252 392.172 301.851 cv
392.433 301.449 392.563 300.941 392.563 300.325 cv
392.563 300.207 li
392.563 299.598 392.432 299.092 392.168 298.688 cv
391.906 298.282 391.52 298.08 391.012 298.08 cv
390.506 298.08 390.124 298.282 389.865 298.688 cv
389.605 299.092 389.475 299.598 389.475 300.207 cv
389.475 300.325 li
cp
388.417 300.207 mo
388.417 299.348 388.65 298.64 389.115 298.082 cv
389.58 297.525 390.213 297.248 391.012 297.248 cv
391.816 297.248 392.453 297.525 392.92 298.08 cv
393.389 298.635 393.621 299.344 393.621 300.207 cv
393.621 300.325 li
393.621 301.191 393.389 301.9 392.924 302.452 cv
392.458 303.004 391.824 303.279 391.021 303.279 cv
390.22 303.279 389.586 303.002 389.117 302.449 cv
388.65 301.897 388.417 301.188 388.417 300.325 cv
388.417 300.207 li
cp
f
397.666 298.289 mo
397.123 298.258 li
396.844 298.258 396.609 298.324 396.418 298.456 cv
396.226 298.588 396.078 298.775 395.975 299.015 cv
395.975 303.166 li
394.916 303.166 li
394.916 297.355 li
395.861 297.355 li
395.963 298.203 li
396.128 297.902 396.332 297.668 396.572 297.5 cv
396.814 297.332 397.094 297.248 397.408 297.248 cv
397.486 297.248 397.563 297.254 397.634 297.266 cv
397.705 297.279 397.765 297.293 397.81 297.307 cv
397.666 298.289 li
cp
f
400.373 300.486 mo
399.83 300.486 li
399.83 303.166 li
398.772 303.166 li
398.772 294.787 li
399.83 294.787 li
399.83 299.643 li
400.362 299.643 li
402.107 297.355 li
403.375 297.355 li
401.265 300.035 li
403.559 303.166 li
402.307 303.166 li
400.373 300.486 li
cp
f
362.438 313.568 mo
362.438 312.91 362.308 312.367 362.048 311.943 cv
361.789 311.52 361.406 311.307 360.901 311.307 cv
360.598 311.307 360.338 311.376 360.123 311.514 cv
359.908 311.652 359.734 311.841 359.602 312.08 cv
359.602 314.89 li
359.734 315.129 359.908 315.316 360.123 315.451 cv
360.338 315.586 360.601 315.652 360.912 315.652 cv
361.414 315.652 361.793 315.469 362.051 315.102 cv
362.309 314.734 362.438 314.262 362.438 313.682 cv
362.438 313.568 li
cp
363.496 313.682 mo
363.496 314.52 363.295 315.195 362.895 315.709 cv
362.493 316.223 361.939 316.479 361.234 316.479 cv
360.877 316.479 360.563 316.42 360.292 316.299 cv
360.021 316.18 359.791 316 359.602 315.76 cv
359.602 318.602 li
358.543 318.602 li
358.543 310.555 li
359.354 310.555 li
359.521 311.307 li
359.711 311.027 359.947 310.815 360.23 310.668 cv
360.513 310.522 360.842 310.447 361.219 310.447 cv
361.938 310.447 362.498 310.733 362.896 311.305 cv
363.296 311.875 363.496 312.631 363.496 313.568 cv
363.496 313.682 li
cp
f
367.545 311.49 mo
367.003 311.457 li
366.724 311.457 366.488 311.523 366.297 311.656 cv
366.105 311.789 365.957 311.975 365.853 312.215 cv
365.853 316.367 li
364.795 316.367 li
364.795 310.555 li
365.74 310.555 li
365.843 311.404 li
366.008 311.103 366.211 310.869 366.452 310.7 cv
366.694 310.531 366.973 310.447 367.287 310.447 cv
367.366 310.447 367.441 310.454 367.514 310.467 cv
367.585 310.478 367.645 310.492 367.69 310.507 cv
367.545 311.49 li
cp
f
369.35 313.525 mo
369.35 314.141 369.48 314.65 369.74 315.051 cv
369.999 315.451 370.385 315.652 370.896 315.652 cv
371.402 315.652 371.785 315.451 372.047 315.051 cv
372.308 314.65 372.438 314.141 372.438 313.525 cv
372.438 313.407 li
372.438 312.799 372.307 312.292 372.043 311.887 cv
371.781 311.482 371.395 311.28 370.887 311.28 cv
370.381 311.28 369.999 311.482 369.74 311.887 cv
369.48 312.292 369.35 312.799 369.35 313.407 cv
369.35 313.525 li
cp
368.292 313.407 mo
368.292 312.548 368.525 311.84 368.99 311.283 cv
369.455 310.727 370.088 310.447 370.887 310.447 cv
371.691 310.447 372.328 310.725 372.795 311.28 cv
373.264 311.836 373.496 312.545 373.496 313.407 cv
373.496 313.525 li
373.496 314.393 373.264 315.102 372.799 315.652 cv
372.333 316.203 371.699 316.479 370.896 316.479 cv
370.095 316.479 369.461 316.203 368.992 315.65 cv
368.525 315.096 368.292 314.389 368.292 313.525 cv
368.292 313.407 li
cp
f
376.263 309.153 mo
376.263 310.555 li
377.363 310.555 li
377.363 311.34 li
376.263 311.34 li
376.263 314.868 li
376.263 315.141 376.318 315.332 376.432 315.443 cv
376.545 315.554 376.694 315.609 376.881 315.609 cv
376.941 315.609 377.01 315.602 377.084 315.586 cv
377.16 315.568 377.223 315.553 377.272 315.534 cv
377.418 316.26 li
377.339 316.324 377.223 316.377 377.068 316.418 cv
376.914 316.459 376.762 316.479 376.611 316.479 cv
376.182 316.479 375.84 316.35 375.586 316.09 cv
375.332 315.83 375.205 315.424 375.205 314.868 cv
375.205 311.34 li
374.281 311.34 li
374.281 310.555 li
375.205 310.555 li
375.205 309.153 li
376.263 309.153 li
cp
f
380.736 311.28 mo
380.368 311.28 380.063 311.422 379.82 311.707 cv
379.58 311.992 379.432 312.356 379.378 312.801 cv
379.389 312.827 li
382.01 312.827 li
382.01 312.741 li
382.01 312.318 381.906 311.97 381.698 311.693 cv
381.49 311.418 381.17 311.28 380.736 311.28 cv
cp
380.903 316.479 mo
380.068 316.479 379.418 316.213 378.951 315.68 cv
378.484 315.146 378.25 314.443 378.25 313.574 cv
378.25 313.338 li
378.25 312.503 378.49 311.813 378.973 311.268 cv
379.454 310.721 380.042 310.447 380.736 310.447 cv
381.514 310.447 382.097 310.69 382.484 311.173 cv
382.873 311.656 383.068 312.299 383.068 313.102 cv
383.068 313.66 li
379.352 313.66 li
379.335 313.686 li
379.335 314.27 379.464 314.744 379.722 315.107 cv
379.979 315.471 380.373 315.652 380.903 315.652 cv
381.262 315.652 381.576 315.602 381.846 315.5 cv
382.116 315.397 382.348 315.257 382.541 315.078 cv
382.955 315.766 li
382.748 315.966 382.474 316.135 382.133 316.273 cv
381.793 316.41 381.383 316.479 380.903 316.479 cv
cp
f
386.564 315.652 mo
386.891 315.652 387.175 315.544 387.418 315.328 cv
387.662 315.111 387.783 314.845 387.783 314.529 cv
388.74 314.529 li
388.756 314.563 li
388.77 315.064 388.555 315.508 388.111 315.897 cv
387.668 316.285 387.152 316.479 386.564 316.479 cv
385.748 316.479 385.117 316.202 384.674 315.647 cv
384.23 315.092 384.008 314.4 384.008 313.574 cv
384.008 313.348 li
384.008 312.528 384.23 311.84 384.676 311.283 cv
385.123 310.727 385.752 310.447 386.564 310.447 cv
387.213 310.447 387.744 310.648 388.156 311.049 cv
388.57 311.45 388.77 311.943 388.756 312.526 cv
388.745 312.559 li
387.783 312.559 li
387.783 312.204 387.668 311.902 387.438 311.654 cv
387.207 311.404 386.916 311.28 386.564 311.28 cv
386.045 311.28 385.666 311.482 385.428 311.885 cv
385.19 312.287 385.071 312.775 385.071 313.348 cv
385.071 313.574 li
385.071 314.157 385.188 314.65 385.424 315.051 cv
385.658 315.451 386.038 315.652 386.564 315.652 cv
cp
f
391.484 309.153 mo
391.484 310.555 li
392.586 310.555 li
392.586 311.34 li
391.484 311.34 li
391.484 314.868 li
391.484 315.141 391.541 315.332 391.654 315.443 cv
391.766 315.554 391.916 315.609 392.102 315.609 cv
392.163 315.609 392.23 315.602 392.307 315.586 cv
392.381 315.568 392.443 315.553 392.494 315.534 cv
392.639 316.26 li
392.56 316.324 392.443 316.377 392.29 316.418 cv
392.137 316.459 391.984 316.479 391.834 316.479 cv
391.404 316.479 391.063 316.35 390.808 316.09 cv
390.553 315.83 390.426 315.424 390.426 314.868 cv
390.426 311.34 li
389.502 311.34 li
389.502 310.555 li
390.426 310.555 li
390.426 309.153 li
391.484 309.153 li
cp
f
394.863 316.367 mo
393.805 316.367 li
393.805 310.555 li
394.863 310.555 li
394.863 316.367 li
cp
394.863 309.067 mo
393.805 309.067 li
393.805 307.988 li
394.863 307.988 li
394.863 309.067 li
cp
f
397.301 313.525 mo
397.301 314.141 397.432 314.65 397.691 315.051 cv
397.95 315.451 398.336 315.652 398.848 315.652 cv
399.353 315.652 399.736 315.451 399.998 315.051 cv
400.259 314.65 400.39 314.141 400.39 313.525 cv
400.39 313.407 li
400.39 312.799 400.258 312.292 399.994 311.887 cv
399.732 311.482 399.346 311.28 398.838 311.28 cv
398.332 311.28 397.95 311.482 397.691 311.887 cv
397.432 312.292 397.301 312.799 397.301 313.407 cv
397.301 313.525 li
cp
396.243 313.407 mo
396.243 312.548 396.477 311.84 396.941 311.283 cv
397.406 310.727 398.039 310.447 398.838 310.447 cv
399.643 310.447 400.279 310.725 400.746 311.28 cv
401.215 311.836 401.447 312.545 401.447 313.407 cv
401.447 313.525 li
401.447 314.393 401.215 315.102 400.75 315.652 cv
400.284 316.203 399.65 316.479 398.848 316.479 cv
398.046 316.479 397.412 316.203 396.943 315.65 cv
396.477 315.096 396.243 314.389 396.243 313.525 cv
396.243 313.407 li
cp
f
403.688 310.555 mo
403.763 311.42 li
403.956 311.111 404.199 310.873 404.49 310.703 cv
404.782 310.533 405.114 310.447 405.486 310.447 cv
406.113 310.447 406.599 310.631 406.942 310.998 cv
407.286 311.365 407.458 311.932 407.458 312.698 cv
407.458 316.367 li
406.4 316.367 li
406.4 312.72 li
406.4 312.207 406.299 311.844 406.096 311.629 cv
405.895 311.414 405.586 311.307 405.17 311.307 cv
404.844 311.307 404.567 311.373 404.34 311.504 cv
404.113 311.634 403.933 311.817 403.801 312.054 cv
403.801 316.367 li
402.742 316.367 li
402.742 310.555 li
403.688 310.555 li
cp
f
359.906 263.814 mo
365.074 263.814 li
365.796 267.119 366.805 269.74 368.021 271.498 cv
364.774 270.315 361.878 267.582 359.906 263.814 cv
cp
355.549 263.814 mo
357.914 263.814 li
358.962 266.021 360.299 267.955 361.853 269.527 cv
359.372 268.105 357.228 266.167 355.549 263.814 cv
cp
351.877 253.179 mo
355.426 253.179 li
355.521 256.256 356.115 259.295 357.149 262.022 cv
354.412 262.022 li
352.89 259.326 352.018 256.28 351.877 253.179 cv
cp
354.045 243.216 mo
356.906 243.216 li
356.011 245.787 355.514 248.531 355.426 251.385 cv
351.877 251.385 li
352.005 248.51 352.732 245.765 354.045 243.216 cv
cp
361.838 235.049 mo
360.135 236.775 358.699 238.936 357.609 241.422 cv
355.085 241.422 li
356.801 238.805 359.134 236.61 361.838 235.049 cv
cp
357.218 251.385 mo
357.31 248.513 357.845 245.768 358.806 243.216 cv
364.611 243.216 li
364.206 245.767 363.981 248.512 363.941 251.385 cv
357.218 251.385 li
cp
363.941 253.179 mo
363.985 256.317 364.247 259.289 364.724 262.022 cv
359.073 262.022 li
357.958 259.323 357.319 256.278 357.218 253.179 cv
363.941 253.179 li
cp
368.027 233.061 mo
366.732 234.94 365.654 237.845 364.935 241.422 cv
359.566 241.422 li
361.546 237.29 364.569 234.314 368.027 233.061 cv
cp
366.897 263.814 mo
371.732 263.814 li
371.732 262.022 li
366.531 262.022 li
366.045 259.316 365.776 256.344 365.733 253.179 cv
371.732 253.179 li
371.732 251.385 li
365.733 251.385 li
365.773 248.489 366.003 245.744 366.416 243.216 cv
371.732 243.216 li
371.732 241.422 li
366.749 241.422 li
368.049 235.195 370.173 232.399 371.732 232.398 cv
371.732 230.607 li
359.781 230.607 350.059 240.331 350.059 252.282 cv
350.059 264.233 359.781 273.956 371.732 273.956 cv
371.732 272.165 li
370.256 272.164 368.21 269.578 366.897 263.814 cv
cp
.623529 .713726 .0117647 rgb
f
389.055 262.022 mo
386.315 262.022 li
387.351 259.295 387.943 256.256 388.038 253.179 cv
391.588 253.179 li
391.448 256.279 390.575 259.325 389.055 262.022 cv
cp
381.611 269.527 mo
383.166 267.955 384.503 266.02 385.551 263.814 cv
387.916 263.814 li
386.236 266.166 384.093 268.104 381.611 269.527 cv
cp
375.443 271.498 mo
376.662 269.74 377.67 267.119 378.392 263.814 cv
383.558 263.814 li
381.586 267.582 378.691 270.315 375.443 271.498 cv
cp
375.438 233.061 mo
378.895 234.314 381.919 237.29 383.899 241.422 cv
378.531 241.422 li
377.811 237.845 376.731 234.939 375.438 233.061 cv
cp
386.247 253.179 mo
386.145 256.28 385.507 259.325 384.392 262.022 cv
378.741 262.022 li
379.217 259.29 379.479 256.319 379.523 253.179 cv
386.247 253.179 li
cp
379.523 251.385 mo
379.483 248.512 379.26 245.768 378.853 243.216 cv
384.659 243.216 li
385.62 245.768 386.153 248.513 386.247 251.385 cv
379.523 251.385 li
cp
388.38 241.422 mo
385.855 241.422 li
384.768 238.936 383.33 236.775 381.627 235.049 cv
384.331 236.61 386.664 238.805 388.38 241.422 cv
cp
391.588 251.385 mo
388.038 251.385 li
387.952 248.534 387.454 245.79 386.559 243.216 cv
389.419 243.216 li
390.732 245.765 391.46 248.51 391.588 251.385 cv
cp
371.732 230.607 mo
371.732 230.607 li
371.732 232.398 li
371.732 232.398 li
373.291 232.398 375.416 235.194 376.715 241.422 cv
371.732 241.422 li
371.732 243.216 li
377.049 243.216 li
377.462 245.737 377.691 248.481 377.731 251.385 cv
371.732 251.385 li
371.732 253.179 li
377.731 253.179 li
377.688 256.343 377.421 259.315 376.935 262.022 cv
371.732 262.022 li
371.732 263.814 li
376.568 263.814 li
375.255 269.578 373.209 272.165 371.732 272.165 cv
371.732 272.165 li
371.732 273.956 li
371.732 273.956 li
383.684 273.956 393.406 264.233 393.406 252.282 cv
393.406 240.331 383.684 230.607 371.732 230.607 cv
cp
f
373.343 239.098 mo
376.175 262.349 385.168 277.367 398.181 287.015 cv
398.181 230.063 li
391.233 235.281 382.79 238.02 373.343 239.098 cv
cp
.992157 .776471 .227451 rgb
f
398.181 230.063 mo
398.181 287.015 li
411.191 277.367 420.184 262.349 423.017 239.098 cv
413.569 238.02 405.126 235.281 398.181 230.063 cv
cp
.992157 .627451 .0784314 rgb
f
398.181 235.811 mo
398.181 237.454 li
398.181 250.659 li
398.181 281.265 li
408.564 273.565 415.74 261.579 418.002 243.023 cv
410.462 242.163 403.723 239.977 398.181 235.811 cv
cp
.0588235 .188235 .247059 rgb
f
378.358 243.023 mo
380.619 261.579 387.795 273.565 398.181 281.265 cv
398.181 250.659 li
398.181 237.454 li
398.181 235.811 li
392.636 239.977 385.897 242.163 378.358 243.023 cv
cp
.172549 .345098 .443137 rgb
f
264.168 372.486 mo
263.459 360.935 li
272.734 356.586 li
281.98 360.887 li
280.984 372.486 li
264.168 372.486 li
cp
.0588235 .188235 .247059 rgb
f
277.99 385.321 mo
272.717 393.789 li
267.443 385.321 li
267.443 378.8 li
277.99 378.8 li
277.99 385.321 li
cp
.858824 .721569 .647059 rgb
f
280.984 372.486 mo
279.147 368.676 li
270.935 371.697 li
266.535 369.66 li
264.168 372.486 li
267.389 379.974 li
272.578 382.274 li
277.964 380.304 li
280.984 372.486 li
cp
.929412 .815686 .72549 rgb
f
278.666 384.712 mo
272.733 390.328 li
266.805 384.712 li
255.88 388.768 li
258.036 395.5 li
287.434 395.5 li
289.587 388.768 li
278.666 384.712 li
cp
.0588235 .188235 .247059 rgb
f
254.006 412.664 mo
254.017 412.695 li
254.031 413.43 253.773 414.044 253.243 414.538 cv
252.713 415.032 252.014 415.279 251.143 415.279 cv
250.259 415.279 249.538 414.966 248.98 414.34 cv
248.424 413.713 248.146 412.918 248.146 411.955 cv
248.146 410.564 li
248.146 409.6 248.424 408.805 248.98 408.176 cv
249.538 407.547 250.259 407.233 251.143 407.233 cv
252.027 407.233 252.73 407.469 253.254 407.94 cv
253.777 408.41 254.031 409.035 254.017 409.811 cv
254.006 409.844 li
252.99 409.844 li
252.99 409.296 252.83 408.863 252.508 408.544 cv
252.186 408.225 251.73 408.066 251.143 408.066 cv
250.553 408.066 250.082 408.305 249.73 408.78 cv
249.379 409.256 249.204 409.848 249.204 410.553 cv
249.204 411.955 li
249.204 412.667 249.379 413.262 249.73 413.738 cv
250.082 414.214 250.553 414.452 251.143 414.452 cv
251.73 414.452 252.186 414.293 252.508 413.977 cv
252.83 413.66 252.99 413.223 252.99 412.664 cv
254.006 412.664 li
cp
.501961 .501961 .501961 rgb
f
258.936 414.307 mo
258.754 414.619 258.52 414.858 258.232 415.027 cv
257.946 415.195 257.615 415.279 257.239 415.279 cv
256.605 415.279 256.111 415.077 255.757 414.672 cv
255.402 414.268 255.225 413.638 255.225 412.781 cv
255.225 409.355 li
256.283 409.355 li
256.283 412.793 li
256.283 413.412 256.375 413.838 256.557 414.07 cv
256.74 414.304 257.024 414.42 257.411 414.42 cv
257.787 414.42 258.098 414.344 258.343 414.191 cv
258.588 414.039 258.773 413.824 258.898 413.545 cv
258.898 409.355 li
259.957 409.355 li
259.957 415.166 li
259.006 415.166 li
258.936 414.307 li
cp
f
264.877 413.603 mo
264.877 413.371 264.788 413.182 264.611 413.034 cv
264.434 412.887 264.098 412.758 263.603 412.647 cv
262.92 412.5 262.395 412.295 262.027 412.029 cv
261.66 411.765 261.477 411.41 261.477 410.967 cv
261.477 410.494 261.679 410.089 262.081 409.752 cv
262.484 409.416 263.006 409.248 263.646 409.248 cv
264.306 409.248 264.84 409.427 265.248 409.785 cv
265.656 410.143 265.852 410.56 265.833 411.036 cv
265.822 411.068 li
264.813 411.068 li
264.813 410.818 264.702 410.59 264.482 410.387 cv
264.262 410.182 263.983 410.08 263.646 410.08 cv
263.274 410.08 262.996 410.164 262.811 410.332 cv
262.627 410.501 262.535 410.701 262.535 410.934 cv
262.535 411.163 262.615 411.34 262.774 411.466 cv
262.934 411.592 263.262 411.705 263.76 411.81 cv
264.473 411.96 265.014 412.173 265.382 412.449 cv
265.75 412.725 265.935 413.084 265.935 413.528 cv
265.935 414.044 265.727 414.465 265.31 414.791 cv
264.893 415.116 264.348 415.279 263.674 415.279 cv
262.933 415.279 262.35 415.092 261.923 414.715 cv
261.496 414.34 261.295 413.9 261.316 413.399 cv
261.326 413.367 li
262.336 413.367 li
262.354 413.743 262.494 414.018 262.756 414.191 cv
263.017 414.365 263.322 414.452 263.674 414.452 cv
264.05 414.452 264.344 414.373 264.558 414.213 cv
264.771 414.054 264.877 413.851 264.877 413.603 cv
cp
f
268.723 407.953 mo
268.723 409.355 li
269.824 409.355 li
269.824 410.139 li
268.723 410.139 li
268.723 413.668 li
268.723 413.94 268.779 414.132 268.893 414.242 cv
269.004 414.353 269.154 414.409 269.34 414.409 cv
269.401 414.409 269.469 414.4 269.545 414.385 cv
269.619 414.369 269.682 414.352 269.732 414.334 cv
269.877 415.059 li
269.799 415.123 269.682 415.176 269.528 415.217 cv
269.375 415.259 269.223 415.279 269.072 415.279 cv
268.643 415.279 268.301 415.149 268.046 414.891 cv
267.791 414.631 267.664 414.223 267.664 413.668 cv
267.664 410.139 li
266.74 410.139 li
266.74 409.355 li
267.664 409.355 li
267.664 407.953 li
268.723 407.953 li
cp
f
271.768 412.325 mo
271.768 412.941 271.898 413.449 272.158 413.851 cv
272.417 414.252 272.803 414.452 273.314 414.452 cv
273.82 414.452 274.203 414.252 274.465 413.851 cv
274.726 413.449 274.856 412.941 274.856 412.325 cv
274.856 412.207 li
274.856 411.598 274.725 411.092 274.461 410.688 cv
274.199 410.282 273.813 410.08 273.305 410.08 cv
272.799 410.08 272.417 410.282 272.158 410.688 cv
271.898 411.092 271.768 411.598 271.768 412.207 cv
271.768 412.325 li
cp
270.71 412.207 mo
270.71 411.348 270.943 410.64 271.408 410.082 cv
271.873 409.525 272.506 409.248 273.305 409.248 cv
274.109 409.248 274.746 409.525 275.213 410.08 cv
275.682 410.635 275.914 411.344 275.914 412.207 cv
275.914 412.325 li
275.914 413.191 275.682 413.9 275.217 414.452 cv
274.751 415.004 274.117 415.279 273.314 415.279 cv
272.513 415.279 271.879 415.002 271.41 414.449 cv
270.943 413.897 270.71 413.188 270.71 412.325 cv
270.71 412.207 li
cp
f
278.154 409.355 mo
278.229 410.117 li
278.42 409.842 278.66 409.628 278.951 409.477 cv
279.244 409.324 279.583 409.248 279.97 409.248 cv
280.356 409.248 280.689 409.337 280.967 409.516 cv
281.244 409.695 281.452 409.964 281.592 410.322 cv
281.777 409.988 282.021 409.727 282.32 409.535 cv
282.619 409.344 282.969 409.248 283.369 409.248 cv
283.961 409.248 284.428 409.451 284.771 409.857 cv
285.115 410.264 285.287 410.875 285.287 411.691 cv
285.287 415.166 li
284.228 415.166 li
284.228 411.681 li
284.228 411.107 284.131 410.702 283.934 410.465 cv
283.736 410.227 283.443 410.107 283.053 410.107 cv
282.691 410.107 282.398 410.232 282.174 410.482 cv
281.951 410.733 281.819 411.051 281.779 411.434 cv
281.779 411.477 li
281.779 415.166 li
280.717 415.166 li
280.717 411.681 li
280.717 411.137 280.615 410.738 280.412 410.486 cv
280.211 410.232 279.92 410.107 279.54 410.107 cv
279.218 410.107 278.953 410.174 278.745 410.306 cv
278.537 410.438 278.378 410.625 278.268 410.864 cv
278.268 415.166 li
277.209 415.166 li
277.209 409.355 li
278.154 409.355 li
cp
f
289.063 410.08 mo
288.694 410.08 288.389 410.223 288.146 410.508 cv
287.906 410.791 287.758 411.156 287.704 411.6 cv
287.715 411.627 li
290.336 411.627 li
290.336 411.541 li
290.336 411.119 290.232 410.77 290.024 410.494 cv
289.816 410.218 289.496 410.08 289.063 410.08 cv
cp
289.229 415.279 mo
288.395 415.279 287.744 415.013 287.277 414.478 cv
286.81 413.945 286.576 413.244 286.576 412.373 cv
286.576 412.137 li
286.576 411.303 286.816 410.613 287.299 410.066 cv
287.78 409.521 288.368 409.248 289.063 409.248 cv
289.84 409.248 290.423 409.489 290.81 409.973 cv
291.199 410.456 291.395 411.099 291.395 411.9 cv
291.395 412.459 li
287.678 412.459 li
287.661 412.486 li
287.661 413.07 287.79 413.543 288.048 413.906 cv
288.306 414.271 288.699 414.452 289.229 414.452 cv
289.588 414.452 289.902 414.4 290.172 414.299 cv
290.442 414.197 290.674 414.057 290.867 413.877 cv
291.281 414.565 li
291.074 414.766 290.8 414.935 290.459 415.072 cv
290.119 415.211 289.709 415.279 289.229 415.279 cv
cp
f
295.331 410.289 mo
294.789 410.258 li
294.51 410.258 294.273 410.324 294.082 410.456 cv
293.891 410.588 293.743 410.775 293.639 411.015 cv
293.639 415.166 li
292.581 415.166 li
292.581 409.355 li
293.526 409.355 li
293.629 410.203 li
293.793 409.902 293.996 409.668 294.238 409.5 cv
294.48 409.332 294.758 409.248 295.073 409.248 cv
295.152 409.248 295.227 409.254 295.299 409.266 cv
295.371 409.279 295.43 409.293 295.477 409.307 cv
295.331 410.289 li
cp
f
243.25 421.153 mo
243.25 422.555 li
244.352 422.555 li
244.352 423.34 li
243.25 423.34 li
243.25 426.868 li
243.25 427.141 243.307 427.332 243.42 427.443 cv
243.532 427.554 243.682 427.609 243.868 427.609 cv
243.93 427.609 243.997 427.602 244.072 427.586 cv
244.147 427.568 244.21 427.553 244.26 427.534 cv
244.405 428.26 li
244.326 428.324 244.21 428.377 244.057 428.418 cv
243.902 428.459 243.75 428.479 243.6 428.479 cv
243.17 428.479 242.828 428.35 242.574 428.09 cv
242.319 427.83 242.192 427.424 242.192 426.868 cv
242.192 423.34 li
241.269 423.34 li
241.269 422.555 li
242.192 422.555 li
242.192 421.153 li
243.25 421.153 li
cp
f
247.725 423.28 mo
247.355 423.28 247.051 423.422 246.809 423.707 cv
246.567 423.992 246.42 424.356 246.365 424.801 cv
246.377 424.827 li
248.998 424.827 li
248.998 424.741 li
248.998 424.318 248.894 423.97 248.686 423.693 cv
248.479 423.418 248.158 423.28 247.725 423.28 cv
cp
247.891 428.479 mo
247.057 428.479 246.406 428.213 245.938 427.68 cv
245.472 427.146 245.238 426.443 245.238 425.574 cv
245.238 425.338 li
245.238 424.503 245.479 423.813 245.96 423.268 cv
246.441 422.721 247.029 422.447 247.725 422.447 cv
248.502 422.447 249.084 422.69 249.473 423.173 cv
249.861 423.656 250.056 424.299 250.056 425.102 cv
250.056 425.66 li
246.339 425.66 li
246.322 425.686 li
246.322 426.27 246.451 426.744 246.709 427.107 cv
246.967 427.471 247.361 427.652 247.891 427.652 cv
248.249 427.652 248.563 427.602 248.834 427.5 cv
249.104 427.397 249.336 427.257 249.529 427.078 cv
249.943 427.766 li
249.735 427.966 249.461 428.135 249.121 428.273 cv
248.781 428.41 248.371 428.479 247.891 428.479 cv
cp
f
254.621 426.804 mo
254.621 426.57 254.532 426.381 254.355 426.234 cv
254.178 426.088 253.842 425.959 253.348 425.848 cv
252.664 425.701 252.139 425.495 251.771 425.23 cv
251.404 424.965 251.221 424.61 251.221 424.166 cv
251.221 423.693 251.423 423.289 251.825 422.953 cv
252.229 422.616 252.75 422.447 253.391 422.447 cv
254.05 422.447 254.584 422.627 254.992 422.984 cv
255.4 423.343 255.596 423.76 255.577 424.236 cv
255.566 424.269 li
254.557 424.269 li
254.557 424.018 254.446 423.791 254.227 423.586 cv
254.006 423.383 253.727 423.28 253.391 423.28 cv
253.019 423.28 252.74 423.364 252.556 423.533 cv
252.371 423.701 252.279 423.901 252.279 424.135 cv
252.279 424.363 252.359 424.541 252.519 424.666 cv
252.678 424.791 253.006 424.906 253.504 425.01 cv
254.217 425.16 254.758 425.373 255.126 425.648 cv
255.494 425.925 255.68 426.285 255.68 426.728 cv
255.68 427.244 255.471 427.665 255.054 427.99 cv
254.637 428.316 254.092 428.479 253.418 428.479 cv
252.677 428.479 252.094 428.291 251.667 427.916 cv
251.24 427.539 251.039 427.102 251.061 426.6 cv
251.07 426.567 li
252.08 426.567 li
252.099 426.943 252.238 427.219 252.5 427.393 cv
252.761 427.565 253.066 427.652 253.418 427.652 cv
253.794 427.652 254.088 427.572 254.302 427.414 cv
254.515 427.254 254.621 427.051 254.621 426.804 cv
cp
f
258.467 421.153 mo
258.467 422.555 li
259.568 422.555 li
259.568 423.34 li
258.467 423.34 li
258.467 426.868 li
258.467 427.141 258.523 427.332 258.637 427.443 cv
258.748 427.554 258.898 427.609 259.084 427.609 cv
259.146 427.609 259.213 427.602 259.289 427.586 cv
259.363 427.568 259.426 427.553 259.477 427.534 cv
259.621 428.26 li
259.543 428.324 259.426 428.377 259.272 428.418 cv
259.119 428.459 258.967 428.479 258.816 428.479 cv
258.387 428.479 258.045 428.35 257.79 428.09 cv
257.535 427.83 257.408 427.424 257.408 426.868 cv
257.408 423.34 li
256.484 423.34 li
256.484 422.555 li
257.408 422.555 li
257.408 421.153 li
258.467 421.153 li
cp
f
261.846 428.367 mo
260.787 428.367 li
260.787 422.555 li
261.846 422.555 li
261.846 428.367 li
cp
261.846 421.067 mo
260.787 421.067 li
260.787 419.988 li
261.846 419.988 li
261.846 421.067 li
cp
f
264.418 422.555 mo
264.493 423.318 li
264.684 423.042 264.924 422.828 265.215 422.676 cv
265.508 422.523 265.847 422.447 266.233 422.447 cv
266.62 422.447 266.952 422.537 267.23 422.717 cv
267.508 422.896 267.716 423.164 267.855 423.522 cv
268.041 423.19 268.284 422.927 268.584 422.734 cv
268.883 422.543 269.232 422.447 269.633 422.447 cv
270.225 422.447 270.691 422.65 271.035 423.057 cv
271.379 423.464 271.551 424.075 271.551 424.892 cv
271.551 428.367 li
270.492 428.367 li
270.492 424.881 li
270.492 424.309 270.395 423.902 270.197 423.664 cv
270 423.426 269.707 423.307 269.316 423.307 cv
268.955 423.307 268.662 423.433 268.438 423.684 cv
268.215 423.934 268.083 424.25 268.043 424.634 cv
268.043 424.677 li
268.043 428.367 li
266.98 428.367 li
266.98 424.881 li
266.98 424.336 266.879 423.938 266.676 423.685 cv
266.475 423.434 266.184 423.307 265.804 423.307 cv
265.481 423.307 265.217 423.373 265.009 423.506 cv
264.801 423.639 264.642 423.824 264.531 424.065 cv
264.531 428.367 li
263.473 428.367 li
263.473 422.555 li
264.418 422.555 li
cp
f
273.898 425.525 mo
273.898 426.141 274.027 426.65 274.287 427.051 cv
274.547 427.451 274.933 427.652 275.445 427.652 cv
275.949 427.652 276.333 427.451 276.594 427.051 cv
276.855 426.65 276.986 426.141 276.986 425.525 cv
276.986 425.407 li
276.986 424.799 276.855 424.292 276.592 423.887 cv
276.328 423.482 275.942 423.28 275.434 423.28 cv
274.93 423.28 274.547 423.482 274.287 423.887 cv
274.027 424.292 273.898 424.799 273.898 425.407 cv
273.898 425.525 li
cp
272.84 425.407 mo
272.84 424.548 273.072 423.84 273.538 423.283 cv
274.004 422.727 274.636 422.447 275.434 422.447 cv
276.24 422.447 276.877 422.725 277.344 423.28 cv
277.81 423.836 278.045 424.545 278.045 425.407 cv
278.045 425.525 li
278.045 426.393 277.811 427.102 277.346 427.652 cv
276.881 428.203 276.247 428.479 275.445 428.479 cv
274.643 428.479 274.008 428.203 273.541 427.65 cv
273.074 427.096 272.84 426.389 272.84 425.525 cv
272.84 425.407 li
cp
f
280.284 422.555 mo
280.359 423.42 li
280.553 423.111 280.795 422.873 281.088 422.703 cv
281.379 422.533 281.711 422.447 282.084 422.447 cv
282.71 422.447 283.195 422.631 283.539 422.998 cv
283.883 423.365 284.055 423.932 284.055 424.698 cv
284.055 428.367 li
282.996 428.367 li
282.996 424.72 li
282.996 424.207 282.896 423.844 282.693 423.629 cv
282.49 423.414 282.182 423.307 281.767 423.307 cv
281.441 423.307 281.164 423.373 280.938 423.504 cv
280.709 423.634 280.529 423.817 280.396 424.054 cv
280.396 428.367 li
279.339 428.367 li
279.339 422.555 li
280.284 422.555 li
cp
f
286.734 428.367 mo
285.677 428.367 li
285.677 422.555 li
286.734 422.555 li
286.734 428.367 li
cp
286.734 421.067 mo
285.677 421.067 li
285.677 419.988 li
286.734 419.988 li
286.734 421.067 li
cp
f
290.178 427.594 mo
290.56 427.594 290.906 427.494 291.215 427.298 cv
291.522 427.102 291.723 426.875 291.816 426.621 cv
291.816 425.676 li
290.629 425.676 li
290.203 425.676 289.861 425.783 289.605 425.998 cv
289.35 426.213 289.222 426.465 289.222 426.756 cv
289.222 427.014 289.303 427.217 289.463 427.367 cv
289.625 427.518 289.863 427.594 290.178 427.594 cv
cp
291.934 428.367 mo
291.898 428.191 291.871 428.037 291.852 427.902 cv
291.831 427.768 291.819 427.633 291.816 427.496 cv
291.619 427.775 291.361 428.01 291.045 428.197 cv
290.728 428.385 290.387 428.479 290.021 428.479 cv
289.417 428.479 288.955 428.324 288.639 428.016 cv
288.322 427.705 288.164 427.278 288.164 426.734 cv
288.164 426.179 288.389 425.744 288.838 425.432 cv
289.287 425.118 289.896 424.961 290.666 424.961 cv
291.816 424.961 li
291.816 424.387 li
291.816 424.047 291.712 423.777 291.504 423.578 cv
291.297 423.379 291.003 423.28 290.623 423.28 cv
290.279 423.28 290.002 423.366 289.791 423.538 cv
289.58 423.71 289.475 423.916 289.475 424.156 cv
288.47 424.166 li
288.459 424.135 li
288.434 423.712 288.632 423.325 289.053 422.975 cv
289.473 422.623 290.017 422.447 290.683 422.447 cv
291.342 422.447 291.871 422.615 292.272 422.949 cv
292.674 423.285 292.874 423.768 292.874 424.397 cv
292.874 427.195 li
292.874 427.403 292.885 427.603 292.906 427.797 cv
292.928 427.99 292.967 428.181 293.024 428.367 cv
291.934 428.367 li
cp
f
295.555 428.367 mo
294.496 428.367 li
294.496 419.988 li
295.555 419.988 li
295.555 428.367 li
cp
f
300.56 426.804 mo
300.56 426.57 300.471 426.381 300.295 426.234 cv
300.117 426.088 299.781 425.959 299.287 425.848 cv
298.603 425.701 298.078 425.495 297.711 425.23 cv
297.344 424.965 297.16 424.61 297.16 424.166 cv
297.16 423.693 297.361 423.289 297.764 422.953 cv
298.168 422.616 298.689 422.447 299.33 422.447 cv
299.988 422.447 300.522 422.627 300.931 422.984 cv
301.339 423.343 301.534 423.76 301.516 424.236 cv
301.506 424.269 li
300.496 424.269 li
300.496 424.018 300.385 423.791 300.166 423.586 cv
299.945 423.383 299.666 423.28 299.33 423.28 cv
298.957 423.28 298.68 423.364 298.494 423.533 cv
298.31 423.701 298.219 423.901 298.219 424.135 cv
298.219 424.363 298.298 424.541 298.457 424.666 cv
298.617 424.791 298.945 424.906 299.443 425.01 cv
300.155 425.16 300.696 425.373 301.064 425.648 cv
301.434 425.925 301.618 426.285 301.618 426.728 cv
301.618 427.244 301.41 427.665 300.992 427.99 cv
300.575 428.316 300.03 428.479 299.357 428.479 cv
298.615 428.479 298.032 428.291 297.605 427.916 cv
297.18 427.539 296.977 427.102 296.999 426.6 cv
297.01 426.567 li
298.02 426.567 li
298.037 426.943 298.178 427.219 298.439 427.393 cv
298.699 427.565 299.006 427.652 299.357 427.652 cv
299.732 427.652 300.027 427.572 300.24 427.414 cv
300.453 427.254 300.56 427.051 300.56 426.804 cv
cp
f
257.097 326.983 mo
250.671 326.983 245.461 332.19 245.461 338.619 cv
245.461 341.311 li
245.461 347.385 250.116 352.365 256.052 352.897 cv
248.796 366.536 li
268.477 352.947 li
272.46 352.947 li
272.46 326.983 li
257.097 326.983 li
cp
.756863 .839216 .294118 rgb
f
289.453 326.983 mo
272.46 326.983 li
272.46 352.947 li
289.453 352.947 li
295.878 352.947 301.087 347.737 301.087 341.311 cv
301.087 338.619 li
301.087 332.19 295.878 326.983 289.453 326.983 cv
cp
.623529 .713726 .0117647 rgb
f
262.594 339.998 mo
262.594 341.133 261.675 342.054 260.539 342.054 cv
259.404 342.054 258.484 341.133 258.484 339.998 cv
258.484 338.863 259.404 337.944 260.539 337.944 cv
261.675 337.944 262.594 338.863 262.594 339.998 cv
cp
1 1 1 rgb
f
274.631 339.998 mo
274.631 341.133 273.712 342.054 272.576 342.054 cv
271.441 342.054 270.521 341.133 270.521 339.998 cv
270.521 338.863 271.441 337.944 272.576 337.944 cv
273.712 337.944 274.631 338.863 274.631 339.998 cv
cp
f
286.668 339.998 mo
286.668 341.133 285.748 342.054 284.612 342.054 cv
283.477 342.054 282.559 341.133 282.559 339.998 cv
282.559 338.863 283.477 337.944 284.612 337.944 cv
285.748 337.944 286.668 338.863 286.668 339.998 cv
cp
f
376.545 411.454 mo
376.679 412.48 li
376.711 412.485 li
376.894 411.454 li
378.279 406.346 li
379.316 406.346 li
380.713 411.454 li
380.895 412.502 li
380.928 412.502 li
381.072 411.454 li
382.189 406.346 li
383.339 406.346 li
381.448 414.166 li
380.503 414.166 li
378.939 408.742 li
378.822 408.038 li
378.789 408.038 li
378.677 408.742 li
377.092 414.166 li
376.146 414.166 li
374.262 406.346 li
375.406 406.346 li
376.545 411.454 li
cp
.501961 .501961 .501961 rgb
f
386.373 409.08 mo
386.005 409.08 385.699 409.223 385.457 409.508 cv
385.217 409.791 385.068 410.156 385.015 410.6 cv
385.025 410.627 li
387.646 410.627 li
387.646 410.541 li
387.646 410.119 387.543 409.77 387.335 409.494 cv
387.127 409.218 386.807 409.08 386.373 409.08 cv
cp
386.54 414.279 mo
385.705 414.279 385.055 414.013 384.588 413.478 cv
384.121 412.945 383.887 412.244 383.887 411.373 cv
383.887 411.137 li
383.887 410.303 384.127 409.613 384.609 409.066 cv
385.091 408.521 385.679 408.248 386.373 408.248 cv
387.15 408.248 387.733 408.489 388.121 408.973 cv
388.51 409.456 388.705 410.099 388.705 410.9 cv
388.705 411.459 li
384.988 411.459 li
384.972 411.486 li
384.972 412.07 385.101 412.543 385.358 412.906 cv
385.616 413.271 386.01 413.452 386.54 413.452 cv
386.898 413.452 387.213 413.4 387.482 413.299 cv
387.753 413.197 387.984 413.057 388.178 412.877 cv
388.592 413.565 li
388.385 413.766 388.11 413.935 387.77 414.072 cv
387.43 414.211 387.02 414.279 386.54 414.279 cv
cp
f
393.797 411.368 mo
393.797 410.702 393.674 410.158 393.428 409.738 cv
393.184 409.317 392.81 409.107 392.309 409.107 cv
391.982 409.107 391.708 409.186 391.484 409.346 cv
391.26 409.506 391.082 409.719 390.949 409.988 cv
390.949 412.507 li
391.086 412.793 391.264 413.018 391.484 413.178 cv
391.705 413.34 391.982 413.42 392.319 413.42 cv
392.816 413.42 393.188 413.242 393.432 412.889 cv
393.675 412.533 393.797 412.065 393.797 411.48 cv
393.797 411.368 li
cp
394.854 411.48 mo
394.854 412.318 394.652 412.994 394.25 413.508 cv
393.848 414.022 393.293 414.279 392.588 414.279 cv
392.201 414.279 391.865 414.203 391.58 414.051 cv
391.297 413.898 391.06 413.674 390.875 413.377 cv
390.703 414.166 li
389.892 414.166 li
389.892 405.787 li
390.949 405.787 li
390.949 409.043 li
391.133 408.785 391.359 408.588 391.629 408.451 cv
391.899 408.315 392.215 408.248 392.577 408.248 cv
393.293 408.248 393.852 408.534 394.253 409.107 cv
394.654 409.68 394.854 410.434 394.854 411.368 cv
394.854 411.48 li
cp
f
354.421 424.682 mo
354.421 425.269 354.541 425.738 354.781 426.092 cv
355.02 426.443 355.393 426.62 355.898 426.62 cv
356.213 426.62 356.478 426.549 356.693 426.405 cv
356.908 426.262 357.083 426.061 357.219 425.804 cv
357.219 423.092 li
357.083 422.852 356.906 422.66 356.689 422.52 cv
356.474 422.378 356.213 422.307 355.908 422.307 cv
355.4 422.307 355.025 422.517 354.783 422.935 cv
354.541 423.354 354.421 423.898 354.421 424.568 cv
354.421 424.682 li
cp
353.363 424.568 mo
353.363 423.634 353.563 422.88 353.961 422.307 cv
354.361 421.734 354.92 421.447 355.641 421.447 cv
355.98 421.447 356.281 421.51 356.545 421.636 cv
356.809 421.762 357.033 421.943 357.219 422.184 cv
357.219 418.988 li
358.277 418.988 li
358.277 427.367 li
357.467 427.367 li
357.305 426.631 li
357.115 426.91 356.881 427.121 356.602 427.265 cv
356.322 427.408 355.998 427.479 355.629 427.479 cv
354.92 427.479 354.365 427.223 353.965 426.709 cv
353.563 426.195 353.363 425.52 353.363 424.682 cv
353.363 424.568 li
cp
f
362.096 422.28 mo
361.727 422.28 361.422 422.422 361.18 422.707 cv
360.939 422.992 360.791 423.356 360.737 423.801 cv
360.748 423.827 li
363.369 423.827 li
363.369 423.741 li
363.369 423.318 363.266 422.97 363.058 422.693 cv
362.85 422.418 362.529 422.28 362.096 422.28 cv
cp
362.263 427.479 mo
361.428 427.479 360.777 427.213 360.31 426.68 cv
359.844 426.146 359.609 425.443 359.609 424.574 cv
359.609 424.338 li
359.609 423.503 359.85 422.813 360.332 422.268 cv
360.813 421.721 361.401 421.447 362.096 421.447 cv
362.873 421.447 363.456 421.69 363.844 422.173 cv
364.232 422.656 364.428 423.299 364.428 424.102 cv
364.428 424.66 li
360.711 424.66 li
360.694 424.686 li
360.694 425.27 360.823 425.744 361.081 426.107 cv
361.339 426.471 361.732 426.652 362.263 426.652 cv
362.621 426.652 362.935 426.602 363.205 426.5 cv
363.476 426.397 363.707 426.257 363.9 426.078 cv
364.314 426.766 li
364.107 426.966 363.833 427.135 363.492 427.273 cv
363.152 427.41 362.742 427.479 362.263 427.479 cv
cp
f
367.483 425.653 mo
367.574 426.061 li
367.607 426.061 li
367.709 425.653 li
369.047 421.555 li
370.126 421.555 li
367.988 427.367 li
367.188 427.367 li
365.023 421.555 li
366.108 421.555 li
367.483 425.653 li
cp
f
373.246 422.28 mo
372.878 422.28 372.572 422.422 372.33 422.707 cv
372.09 422.992 371.941 423.356 371.888 423.801 cv
371.898 423.827 li
374.52 423.827 li
374.52 423.741 li
374.52 423.318 374.416 422.97 374.208 422.693 cv
374 422.418 373.68 422.28 373.246 422.28 cv
cp
373.413 427.479 mo
372.578 427.479 371.928 427.213 371.461 426.68 cv
370.994 426.146 370.76 425.443 370.76 424.574 cv
370.76 424.338 li
370.76 423.503 371 422.813 371.482 422.268 cv
371.964 421.721 372.552 421.447 373.246 421.447 cv
374.023 421.447 374.606 421.69 374.994 422.173 cv
375.383 422.656 375.578 423.299 375.578 424.102 cv
375.578 424.66 li
371.861 424.66 li
371.845 424.686 li
371.845 425.27 371.974 425.744 372.231 426.107 cv
372.489 426.471 372.883 426.652 373.413 426.652 cv
373.771 426.652 374.086 426.602 374.355 426.5 cv
374.626 426.397 374.857 426.257 375.051 426.078 cv
375.465 426.766 li
375.258 426.966 374.983 427.135 374.643 427.273 cv
374.303 427.41 373.893 427.479 373.413 427.479 cv
cp
f
377.908 427.367 mo
376.851 427.367 li
376.851 418.988 li
377.908 418.988 li
377.908 427.367 li
cp
f
380.348 424.525 mo
380.348 425.141 380.477 425.65 380.736 426.051 cv
380.996 426.451 381.382 426.652 381.895 426.652 cv
382.398 426.652 382.782 426.451 383.043 426.051 cv
383.305 425.65 383.435 425.141 383.435 424.525 cv
383.435 424.407 li
383.435 423.799 383.305 423.292 383.041 422.887 cv
382.777 422.482 382.392 422.28 381.883 422.28 cv
381.379 422.28 380.996 422.482 380.736 422.887 cv
380.477 423.292 380.348 423.799 380.348 424.407 cv
380.348 424.525 li
cp
379.289 424.407 mo
379.289 423.548 379.521 422.84 379.987 422.283 cv
380.453 421.727 381.085 421.447 381.883 421.447 cv
382.689 421.447 383.326 421.725 383.793 422.28 cv
384.26 422.836 384.494 423.545 384.494 424.407 cv
384.494 424.525 li
384.494 425.393 384.261 426.102 383.795 426.652 cv
383.33 427.203 382.696 427.479 381.895 427.479 cv
381.092 427.479 380.457 427.203 379.99 426.65 cv
379.523 426.096 379.289 425.389 379.289 424.525 cv
379.289 424.407 li
cp
f
389.682 424.568 mo
389.682 423.91 389.553 423.367 389.293 422.943 cv
389.033 422.52 388.65 422.307 388.146 422.307 cv
387.842 422.307 387.582 422.376 387.367 422.514 cv
387.152 422.652 386.978 422.841 386.846 423.08 cv
386.846 425.89 li
386.978 426.129 387.152 426.316 387.367 426.451 cv
387.582 426.586 387.846 426.652 388.156 426.652 cv
388.658 426.652 389.037 426.469 389.295 426.102 cv
389.553 425.734 389.682 425.262 389.682 424.682 cv
389.682 424.568 li
cp
390.74 424.682 mo
390.74 425.52 390.539 426.195 390.139 426.709 cv
389.738 427.223 389.185 427.479 388.478 427.479 cv
388.121 427.479 387.807 427.42 387.537 427.299 cv
387.266 427.18 387.036 427 386.846 426.76 cv
386.846 429.602 li
385.788 429.602 li
385.788 421.555 li
386.6 421.555 li
386.766 422.307 li
386.955 422.027 387.191 421.815 387.475 421.668 cv
387.758 421.522 388.087 421.447 388.463 421.447 cv
389.183 421.447 389.742 421.733 390.141 422.305 cv
390.541 422.875 390.74 423.631 390.74 424.568 cv
390.74 424.682 li
cp
f
392.985 421.555 mo
393.06 422.318 li
393.25 422.042 393.491 421.828 393.783 421.676 cv
394.074 421.523 394.414 421.447 394.801 421.447 cv
395.188 421.447 395.52 421.537 395.797 421.717 cv
396.074 421.896 396.283 422.164 396.423 422.522 cv
396.609 422.19 396.852 421.927 397.15 421.734 cv
397.449 421.543 397.8 421.447 398.201 421.447 cv
398.791 421.447 399.259 421.65 399.602 422.057 cv
399.946 422.464 400.118 423.075 400.118 423.892 cv
400.118 427.367 li
399.06 427.367 li
399.06 423.881 li
399.06 423.309 398.961 422.902 398.765 422.664 cv
398.568 422.426 398.273 422.307 397.884 422.307 cv
397.521 422.307 397.229 422.433 397.006 422.684 cv
396.781 422.934 396.65 423.25 396.611 423.634 cv
396.611 423.677 li
396.611 427.367 li
395.547 427.367 li
395.547 423.881 li
395.547 423.336 395.446 422.938 395.244 422.685 cv
395.041 422.434 394.75 422.307 394.371 422.307 cv
394.049 422.307 393.783 422.373 393.576 422.506 cv
393.369 422.639 393.209 422.824 393.098 423.065 cv
393.098 427.367 li
392.04 427.367 li
392.04 421.555 li
392.985 421.555 li
cp
f
403.895 422.28 mo
403.525 422.28 403.221 422.422 402.978 422.707 cv
402.736 422.992 402.589 423.356 402.535 423.801 cv
402.546 423.827 li
405.167 423.827 li
405.167 423.741 li
405.167 423.318 405.063 422.97 404.855 422.693 cv
404.648 422.418 404.327 422.28 403.895 422.28 cv
cp
404.06 427.479 mo
403.227 427.479 402.576 427.213 402.107 426.68 cv
401.641 426.146 401.407 425.443 401.407 424.574 cv
401.407 424.338 li
401.407 423.503 401.648 422.813 402.129 422.268 cv
402.611 421.721 403.199 421.447 403.895 421.447 cv
404.671 421.447 405.254 421.69 405.643 422.173 cv
406.031 422.656 406.225 423.299 406.225 424.102 cv
406.225 424.66 li
402.508 424.66 li
402.492 424.686 li
402.492 425.27 402.621 425.744 402.879 426.107 cv
403.137 426.471 403.531 426.652 404.06 426.652 cv
404.418 426.652 404.732 426.602 405.004 426.5 cv
405.273 426.397 405.506 426.257 405.699 426.078 cv
406.112 426.766 li
405.904 426.966 405.631 427.135 405.291 427.273 cv
404.95 427.41 404.541 427.479 404.06 427.479 cv
cp
f
408.357 421.555 mo
408.433 422.42 li
408.626 422.111 408.869 421.873 409.16 421.703 cv
409.452 421.533 409.784 421.447 410.156 421.447 cv
410.783 421.447 411.269 421.631 411.612 421.998 cv
411.956 422.365 412.128 422.932 412.128 423.698 cv
412.128 427.367 li
411.07 427.367 li
411.07 423.72 li
411.07 423.207 410.969 422.844 410.766 422.629 cv
410.564 422.414 410.256 422.307 409.84 422.307 cv
409.514 422.307 409.237 422.373 409.01 422.504 cv
408.783 422.634 408.602 422.817 408.471 423.054 cv
408.471 427.367 li
407.412 427.367 li
407.412 421.555 li
408.357 421.555 li
cp
f
415.136 420.153 mo
415.136 421.555 li
416.236 421.555 li
416.236 422.34 li
415.136 422.34 li
415.136 425.868 li
415.136 426.141 415.191 426.332 415.305 426.443 cv
415.418 426.554 415.567 426.609 415.754 426.609 cv
415.814 426.609 415.883 426.602 415.957 426.586 cv
416.033 426.568 416.096 426.553 416.145 426.534 cv
416.291 427.26 li
416.212 427.324 416.096 427.377 415.941 427.418 cv
415.787 427.459 415.635 427.479 415.484 427.479 cv
415.055 427.479 414.713 427.35 414.459 427.09 cv
414.205 426.83 414.078 426.424 414.078 425.868 cv
414.078 422.34 li
413.154 422.34 li
413.154 421.555 li
414.078 421.555 li
414.078 420.153 li
415.136 420.153 li
cp
f
376.425 374.372 mo
380.584 374.372 li
381.164 377.033 381.976 379.142 382.955 380.556 cv
380.342 379.604 378.011 377.405 376.425 374.372 cv
cp
372.918 374.372 mo
374.821 374.372 li
375.664 376.148 376.74 377.705 377.992 378.971 cv
375.994 377.826 374.27 376.267 372.918 374.372 cv
cp
369.963 365.815 mo
372.818 365.815 li
372.895 368.291 373.374 370.736 374.206 372.931 cv
372.003 372.931 li
370.777 370.761 370.076 368.31 369.963 365.815 cv
cp
371.707 357.797 mo
374.011 357.797 li
373.289 359.866 372.89 362.074 372.818 364.37 cv
369.963 364.37 li
370.066 362.057 370.651 359.848 371.707 357.797 cv
cp
377.978 351.225 mo
376.608 352.613 375.453 354.353 374.576 356.353 cv
372.545 356.353 li
373.925 354.246 375.803 352.481 377.978 351.225 cv
cp
374.262 364.37 mo
374.336 362.06 374.766 359.851 375.539 357.797 cv
380.211 357.797 li
379.885 359.85 379.704 362.059 379.672 364.37 cv
374.262 364.37 li
cp
379.672 365.815 mo
379.707 368.34 379.918 370.731 380.301 372.931 cv
375.754 372.931 li
374.856 370.759 374.343 368.309 374.262 365.815 cv
379.672 365.815 li
cp
382.96 349.625 mo
381.918 351.137 381.05 353.475 380.472 356.353 cv
376.151 356.353 li
377.744 353.027 380.178 350.633 382.96 349.625 cv
cp
382.051 374.372 mo
385.941 374.372 li
385.941 372.931 li
381.756 372.931 li
381.364 370.754 381.148 368.36 381.113 365.815 cv
385.941 365.815 li
385.941 364.37 li
381.113 364.37 li
381.145 362.04 381.331 359.831 381.663 357.797 cv
385.941 357.797 li
385.941 356.353 li
381.931 356.353 li
382.977 351.343 384.686 349.093 385.941 349.092 cv
385.941 347.65 li
376.324 347.65 368.5 355.476 368.5 365.093 cv
368.5 374.71 376.324 382.534 385.941 382.534 cv
385.941 381.093 li
384.753 381.092 383.106 379.011 382.051 374.372 cv
cp
.623529 .713726 .0117647 rgb
f
399.882 372.931 mo
397.677 372.931 li
398.51 370.736 398.987 368.291 399.063 365.815 cv
401.92 365.815 li
401.808 368.31 401.105 370.76 399.882 372.931 cv
cp
393.891 378.971 mo
395.143 377.705 396.219 376.147 397.061 374.372 cv
398.965 374.372 li
397.613 376.266 395.889 377.825 393.891 378.971 cv
cp
388.928 380.556 mo
389.909 379.142 390.72 377.033 391.3 374.372 cv
395.457 374.372 li
393.871 377.405 391.541 379.604 388.928 380.556 cv
cp
388.923 349.625 mo
391.705 350.633 394.139 353.027 395.732 356.353 cv
391.412 356.353 li
390.834 353.475 389.964 351.136 388.923 349.625 cv
cp
397.621 365.815 mo
397.539 368.31 397.026 370.76 396.129 372.931 cv
391.582 372.931 li
391.964 370.732 392.176 368.342 392.211 365.815 cv
397.621 365.815 li
cp
392.211 364.37 mo
392.179 362.059 391.999 359.851 391.672 357.797 cv
396.344 357.797 li
397.117 359.851 397.547 362.06 397.621 364.37 cv
392.211 364.37 li
cp
399.338 356.353 mo
397.307 356.353 li
396.431 354.353 395.274 352.613 393.904 351.225 cv
396.08 352.481 397.958 354.246 399.338 356.353 cv
cp
401.92 364.37 mo
399.063 364.37 li
398.994 362.076 398.594 359.868 397.872 357.797 cv
400.175 357.797 li
401.231 359.848 401.816 362.057 401.92 364.37 cv
cp
385.941 347.65 mo
385.941 347.65 li
385.941 349.092 li
385.941 349.092 li
387.195 349.092 388.905 351.342 389.951 356.353 cv
385.941 356.353 li
385.941 357.797 li
390.22 357.797 li
390.552 359.825 390.737 362.034 390.77 364.37 cv
385.941 364.37 li
385.941 365.815 li
390.77 365.815 li
390.734 368.36 390.519 370.753 390.128 372.931 cv
385.941 372.931 li
385.941 374.372 li
389.833 374.372 li
388.776 379.011 387.13 381.093 385.941 381.093 cv
385.941 381.093 li
385.941 382.534 li
385.941 382.534 li
395.559 382.534 403.383 374.71 403.383 365.093 cv
403.383 355.476 395.559 347.65 385.941 347.65 cv
cp
f
411.269 359.092 mo
407.642 359.092 li
407.299 358.056 li
406.952 357.001 406.52 355.963 406.017 354.972 cv
405.523 353.995 li
408.093 351.427 li
408.476 351.045 408.685 350.535 408.685 349.994 cv
408.685 349.454 408.476 348.945 408.093 348.564 cv
402.472 342.941 li
402.089 342.559 401.58 342.348 401.038 342.348 cv
400.498 342.348 399.988 342.559 399.606 342.94 cv
397.039 345.51 li
396.063 345.017 li
395.061 344.51 394.023 344.079 392.979 343.734 cv
391.942 343.394 li
391.942 339.765 li
391.942 338.648 391.034 337.741 389.918 337.741 cv
385.941 337.741 li
385.941 346.796 li
396.029 346.796 404.237 355.005 404.237 365.092 cv
404.237 375.18 396.029 383.388 385.941 383.388 cv
385.941 392.443 li
389.918 392.443 li
391.034 392.443 391.942 391.536 391.942 390.42 cv
391.942 386.792 li
392.977 386.45 li
394.035 386.102 395.072 385.67 396.06 385.168 cv
397.037 384.674 li
399.608 387.243 li
399.989 387.627 400.498 387.838 401.04 387.838 cv
401.58 387.838 402.089 387.627 402.472 387.243 cv
408.093 381.623 li
408.882 380.832 408.882 379.547 408.093 378.758 cv
405.523 376.189 li
406.017 375.212 li
406.52 374.221 406.952 373.183 407.299 372.128 cv
407.642 371.093 li
411.269 371.093 li
412.385 371.093 413.293 370.184 413.293 369.067 cv
413.293 361.116 li
413.293 360 412.385 359.092 411.269 359.092 cv
cp
.0588235 .188235 .247059 rgb
f
367.645 365.092 mo
367.645 355.005 375.853 346.796 385.941 346.796 cv
385.941 337.741 li
381.965 337.741 li
380.849 337.741 379.94 338.648 379.94 339.765 cv
379.94 343.394 li
378.903 343.734 li
377.859 344.079 376.821 344.51 375.82 345.017 cv
374.846 345.51 li
372.276 342.941 li
371.894 342.559 371.385 342.348 370.845 342.348 cv
370.303 342.348 369.794 342.559 369.413 342.941 cv
363.79 348.564 li
363.001 349.353 363.001 350.638 363.79 351.428 cv
366.357 353.996 li
365.864 354.971 li
365.36 355.969 364.93 357.006 364.584 358.055 cv
364.242 359.092 li
360.614 359.092 li
359.498 359.092 358.59 360 358.59 361.116 cv
358.59 369.067 li
358.59 370.184 359.498 371.093 360.614 371.093 cv
364.242 371.093 li
364.584 372.129 li
364.93 373.177 365.36 374.215 365.864 375.214 cv
366.357 376.19 li
363.79 378.756 li
363.001 379.547 363.001 380.832 363.79 381.622 cv
369.411 387.243 li
369.794 387.626 370.303 387.836 370.845 387.836 cv
371.385 387.836 371.895 387.626 372.276 387.243 cv
374.846 384.674 li
375.822 385.168 li
376.813 385.67 377.852 386.103 378.905 386.45 cv
379.94 386.792 li
379.94 390.42 li
379.94 391.536 380.849 392.443 381.965 392.443 cv
385.941 392.443 li
385.941 383.388 li
375.853 383.388 367.645 375.18 367.645 365.092 cv
cp
.172549 .345098 .443137 rgb
f
60.7261 411.454 mo
60.8604 412.48 li
60.8926 412.485 li
61.0752 411.454 li
62.4609 406.346 li
63.4976 406.346 li
64.894 411.454 li
65.0767 412.502 li
65.1089 412.502 li
65.2539 411.454 li
66.3711 406.346 li
67.5205 406.346 li
65.6299 414.166 li
64.6846 414.166 li
63.1216 408.742 li
63.0034 408.038 li
62.9712 408.038 li
62.8584 408.742 li
61.2739 414.166 li
60.3286 414.166 li
58.4434 406.346 li
59.5874 406.346 li
60.7261 411.454 li
cp
.501961 .501961 .501961 rgb
f
70.5552 409.08 mo
70.1865 409.08 69.8813 409.223 69.6392 409.508 cv
69.3979 409.791 69.25 410.156 69.1963 410.6 cv
69.207 410.627 li
71.8281 410.627 li
71.8281 410.541 li
71.8281 410.119 71.7241 409.77 71.5166 409.494 cv
71.3091 409.218 70.9883 409.08 70.5552 409.08 cv
cp
70.7217 414.279 mo
69.8872 414.279 69.2368 414.013 68.769 413.478 cv
68.3022 412.945 68.0684 412.244 68.0684 411.373 cv
68.0684 411.137 li
68.0684 410.303 68.3091 409.613 68.7905 409.066 cv
69.2725 408.521 69.8604 408.248 70.5552 408.248 cv
71.332 408.248 71.915 408.489 72.3032 408.973 cv
72.6919 409.456 72.8862 410.099 72.8862 410.9 cv
72.8862 411.459 li
69.1694 411.459 li
69.1533 411.486 li
69.1533 412.07 69.2822 412.543 69.54 412.906 cv
69.7979 413.271 70.1919 413.452 70.7217 413.452 cv
71.0796 413.452 71.394 413.4 71.6646 413.299 cv
71.9346 413.197 72.1665 413.057 72.3599 412.877 cv
72.7734 413.565 li
72.5659 413.766 72.292 413.935 71.9517 414.072 cv
71.6113 414.211 71.2017 414.279 70.7217 414.279 cv
cp
f
77.978 411.368 mo
77.978 410.702 77.8555 410.158 77.6099 409.738 cv
77.3647 409.317 76.9917 409.107 76.4902 409.107 cv
76.1646 409.107 75.8896 409.186 75.6655 409.346 cv
75.4419 409.506 75.2637 409.719 75.1313 409.988 cv
75.1313 412.507 li
75.2676 412.793 75.4458 413.018 75.6655 413.178 cv
75.8862 413.34 76.1646 413.42 76.501 413.42 cv
76.9985 413.42 77.3691 413.242 77.6128 412.889 cv
77.8564 412.533 77.978 412.065 77.978 411.48 cv
77.978 411.368 li
cp
79.0361 411.48 mo
79.0361 412.318 78.8345 412.994 78.4321 413.508 cv
78.0288 414.022 77.4751 414.279 76.7695 414.279 cv
76.3828 414.279 76.0474 414.203 75.7622 414.051 cv
75.478 413.898 75.2422 413.674 75.0562 413.377 cv
74.8843 414.166 li
74.0732 414.166 li
74.0732 405.787 li
75.1313 405.787 li
75.1313 409.043 li
75.314 408.785 75.5405 408.588 75.811 408.451 cv
76.0811 408.315 76.397 408.248 76.7588 408.248 cv
77.4751 408.248 78.0337 408.534 78.4346 409.107 cv
78.8354 409.68 79.0361 410.434 79.0361 411.368 cv
79.0361 411.48 li
cp
f
49.165 426.594 mo
49.5483 426.594 49.8936 426.494 50.2017 426.298 cv
50.5098 426.102 50.71 425.875 50.8032 425.621 cv
50.8032 424.676 li
49.6162 424.676 li
49.1899 424.676 48.8491 424.783 48.5933 424.998 cv
48.3369 425.213 48.209 425.465 48.209 425.756 cv
48.209 426.014 48.2896 426.217 48.4507 426.367 cv
48.6118 426.518 48.8501 426.594 49.165 426.594 cv
cp
50.9214 427.367 mo
50.8857 427.191 50.8579 427.037 50.8384 426.902 cv
50.8184 426.768 50.8066 426.633 50.8032 426.496 cv
50.6064 426.775 50.3491 427.01 50.0327 427.197 cv
49.7153 427.385 49.3745 427.479 49.0093 427.479 cv
48.4043 427.479 47.9429 427.324 47.6265 427.016 cv
47.3091 426.705 47.1509 426.278 47.1509 425.734 cv
47.1509 425.179 47.3755 424.744 47.8247 424.432 cv
48.2744 424.118 48.8838 423.961 49.6538 423.961 cv
50.8032 423.961 li
50.8032 423.387 li
50.8032 423.047 50.6992 422.777 50.4917 422.578 cv
50.2842 422.379 49.9902 422.28 49.6108 422.28 cv
49.2671 422.28 48.9897 422.366 48.7783 422.538 cv
48.5669 422.71 48.4614 422.916 48.4614 423.156 cv
47.457 423.166 li
47.4463 423.135 li
47.4214 422.712 47.6191 422.325 48.0396 421.975 cv
48.4604 421.623 49.0039 421.447 49.6699 421.447 cv
50.3286 421.447 50.8589 421.615 51.2598 421.949 cv
51.6606 422.285 51.8613 422.768 51.8613 423.397 cv
51.8613 426.195 li
51.8613 426.403 51.8721 426.603 51.8936 426.797 cv
51.915 426.99 51.9546 427.181 52.0117 427.367 cv
50.9214 427.367 li
cp
f
54.3428 421.555 mo
54.418 422.42 li
54.6113 422.111 54.854 421.873 55.146 421.703 cv
55.4375 421.533 55.7695 421.447 56.1421 421.447 cv
56.7686 421.447 57.2539 421.631 57.5977 421.998 cv
57.9414 422.365 58.1133 422.932 58.1133 423.698 cv
58.1133 427.367 li
57.0552 427.367 li
57.0552 423.72 li
57.0552 423.207 56.9541 422.844 56.7515 422.629 cv
56.5493 422.414 56.2407 422.307 55.8252 422.307 cv
55.4995 422.307 55.2227 422.373 54.9956 422.504 cv
54.7681 422.634 54.5879 422.817 54.4556 423.054 cv
54.4556 427.367 li
53.3975 427.367 li
53.3975 421.555 li
54.3428 421.555 li
cp
f
61.4648 426.594 mo
61.8481 426.594 62.1934 426.494 62.5015 426.298 cv
62.8096 426.102 63.0098 425.875 63.103 425.621 cv
63.103 424.676 li
61.916 424.676 li
61.4897 424.676 61.1489 424.783 60.8931 424.998 cv
60.6367 425.213 60.5088 425.465 60.5088 425.756 cv
60.5088 426.014 60.5894 426.217 60.7505 426.367 cv
60.9116 426.518 61.1499 426.594 61.4648 426.594 cv
cp
63.2212 427.367 mo
63.1855 427.191 63.1577 427.037 63.1382 426.902 cv
63.1182 426.768 63.1064 426.633 63.103 426.496 cv
62.9063 426.775 62.6489 427.01 62.3325 427.197 cv
62.0151 427.385 61.6743 427.479 61.3091 427.479 cv
60.7041 427.479 60.2427 427.324 59.9263 427.016 cv
59.6089 426.705 59.4507 426.278 59.4507 425.734 cv
59.4507 425.179 59.6753 424.744 60.1245 424.432 cv
60.5742 424.118 61.1836 423.961 61.9536 423.961 cv
63.103 423.961 li
63.103 423.387 li
63.103 423.047 62.999 422.777 62.7915 422.578 cv
62.584 422.379 62.29 422.28 61.9106 422.28 cv
61.5669 422.28 61.2896 422.366 61.0781 422.538 cv
60.8667 422.71 60.7612 422.916 60.7612 423.156 cv
59.7568 423.166 li
59.7461 423.135 li
59.7212 422.712 59.9189 422.325 60.3394 421.975 cv
60.7603 421.623 61.3037 421.447 61.9697 421.447 cv
62.6284 421.447 63.1587 421.615 63.5596 421.949 cv
63.9604 422.285 64.1611 422.768 64.1611 423.397 cv
64.1611 426.195 li
64.1611 426.403 64.1719 426.603 64.1934 426.797 cv
64.2148 426.99 64.2544 427.181 64.3115 427.367 cv
63.2212 427.367 li
cp
f
66.8413 427.367 mo
65.7832 427.367 li
65.7832 418.988 li
66.8413 418.988 li
66.8413 427.367 li
cp
f
70.2466 425.213 mo
70.4346 425.943 li
70.4668 425.943 li
71.8955 421.555 li
73.0718 421.555 li
70.6279 428.258 li
70.481 428.648 70.271 428.988 69.9966 429.279 cv
69.7231 429.568 69.353 429.714 68.8877 429.714 cv
68.8018 429.714 68.6924 429.704 68.5601 429.684 cv
68.4277 429.664 68.3257 429.647 68.2539 429.628 cv
68.3613 428.795 li
68.3398 428.792 68.4033 428.795 68.5522 428.807 cv
68.7007 428.816 68.7944 428.822 68.834 428.822 cv
69.0596 428.822 69.2441 428.723 69.3872 428.522 cv
69.5303 428.32 69.6504 428.1 69.7471 427.855 cv
69.9995 427.248 li
67.8403 421.555 li
69.022 421.555 li
70.2466 425.213 li
cp
f
75.4727 420.153 mo
75.4727 421.555 li
76.5737 421.555 li
76.5737 422.34 li
75.4727 422.34 li
75.4727 425.868 li
75.4727 426.141 75.5288 426.332 75.6421 426.443 cv
75.7544 426.554 75.9043 426.609 76.0903 426.609 cv
76.1514 426.609 76.2192 426.602 76.2944 426.586 cv
76.3696 426.568 76.4321 426.553 76.4824 426.534 cv
76.6274 427.26 li
76.5488 427.324 76.4321 427.377 76.2783 427.418 cv
76.1245 427.459 75.9722 427.479 75.8218 427.479 cv
75.3921 427.479 75.0503 427.35 74.7959 427.09 cv
74.5415 426.83 74.4146 426.424 74.4146 425.868 cv
74.4146 422.34 li
73.4907 422.34 li
73.4907 421.555 li
74.4146 421.555 li
74.4146 420.153 li
75.4727 420.153 li
cp
f
78.8511 427.367 mo
77.793 427.367 li
77.793 421.555 li
78.8511 421.555 li
78.8511 427.367 li
cp
78.8511 420.067 mo
77.793 420.067 li
77.793 418.988 li
78.8511 418.988 li
78.8511 420.067 li
cp
f
82.7881 426.652 mo
83.1138 426.652 83.3984 426.544 83.6421 426.328 cv
83.8857 426.111 84.0073 425.845 84.0073 425.529 cv
84.9634 425.529 li
84.9795 425.563 li
84.9937 426.064 84.7788 426.508 84.335 426.897 cv
83.8911 427.285 83.3755 427.479 82.7881 427.479 cv
81.9717 427.479 81.3413 427.202 80.8975 426.647 cv
80.4536 426.092 80.2314 425.4 80.2314 424.574 cv
80.2314 424.348 li
80.2314 423.528 80.4546 422.84 80.8999 422.283 cv
81.3462 421.727 81.9751 421.447 82.7881 421.447 cv
83.436 421.447 83.9673 421.648 84.3804 422.049 cv
84.7944 422.45 84.9937 422.943 84.9795 423.526 cv
84.9688 423.559 li
84.0073 423.559 li
84.0073 423.204 83.8921 422.902 83.6606 422.654 cv
83.4302 422.404 83.1392 422.28 82.7881 422.28 cv
82.269 422.28 81.8901 422.482 81.6519 422.885 cv
81.4141 423.287 81.2949 423.775 81.2949 424.348 cv
81.2949 424.574 li
81.2949 425.157 81.4121 425.65 81.647 426.051 cv
81.8813 426.451 82.2617 426.652 82.7881 426.652 cv
cp
f
89.6147 425.804 mo
89.6147 425.57 89.5259 425.381 89.3491 425.234 cv
89.1714 425.088 88.8359 424.959 88.3418 424.848 cv
87.6577 424.701 87.1323 424.495 86.7651 424.23 cv
86.3984 423.965 86.2148 423.61 86.2148 423.166 cv
86.2148 422.693 86.4165 422.289 86.8188 421.953 cv
87.2222 421.616 87.7437 421.447 88.3848 421.447 cv
89.0435 421.447 89.5771 421.627 89.9854 421.984 cv
90.3936 422.343 90.5889 422.76 90.5708 423.236 cv
90.5601 423.269 li
89.5503 423.269 li
89.5503 423.018 89.4399 422.791 89.2202 422.586 cv
88.9995 422.383 88.7212 422.28 88.3848 422.28 cv
88.0122 422.28 87.7339 422.364 87.5493 422.533 cv
87.3652 422.701 87.2729 422.901 87.2729 423.135 cv
87.2729 423.363 87.3525 423.541 87.5122 423.666 cv
87.6714 423.791 88 423.906 88.4976 424.01 cv
89.21 424.16 89.751 424.373 90.1196 424.648 cv
90.4883 424.925 90.6729 425.285 90.6729 425.728 cv
90.6729 426.244 90.4644 426.665 90.0474 426.99 cv
89.6299 427.316 89.085 427.479 88.4116 427.479 cv
87.6704 427.479 87.0869 427.291 86.6606 426.916 cv
86.2344 426.539 86.0322 426.102 86.0537 425.6 cv
86.0645 425.567 li
87.0742 425.567 li
87.0923 425.943 87.2319 426.219 87.4932 426.393 cv
87.7544 426.565 88.0605 426.652 88.4116 426.652 cv
88.7876 426.652 89.082 426.572 89.2954 426.414 cv
89.5083 426.254 89.6147 426.051 89.6147 425.804 cv
cp
f
98.7207 389.081 mo
38.2207 389.081 li
38.2207 350.44 li
98.7207 350.44 li
98.7207 389.081 li
cp
35.2207 347.35 mo
35.2207 392.17 li
101.721 392.17 li
101.721 347.35 li
35.2207 347.35 li
cp
.0588235 .188235 .247059 rgb
f
98.7207 356.738 mo
38.2207 356.738 li
38.2207 350.44 li
98.7207 350.44 li
98.7207 356.738 li
cp
.172549 .345098 .443137 rgb
f
87.9883 354.978 mo
85.2104 354.978 li
85.2104 352.199 li
87.9883 352.199 li
87.9883 354.978 li
cp
.992157 .776471 .227451 rgb
f
92.1045 354.978 mo
89.3267 354.978 li
89.3267 352.199 li
92.1045 352.199 li
92.1045 354.978 li
cp
.756863 .839216 .294118 rgb
f
96.2207 354.978 mo
93.4429 354.978 li
93.4429 352.199 li
96.2207 352.199 li
96.2207 354.978 li
cp
.992157 .411765 .168627 rgb
f
68.4707 389.081 mo
38.2207 389.081 li
38.2207 356.738 li
68.4707 356.738 li
68.4707 389.081 li
cp
.0862745 .756863 .819608 rgb
f
98.7207 389.081 mo
68.4707 389.081 li
68.4707 356.738 li
98.7207 356.738 li
98.7207 389.081 li
cp
.0784314 .690196 .74902 rgb
f
42.5205 386.233 mo
42.2505 386.233 41.9814 386.125 41.7842 385.911 cv
41.4102 385.505 41.4365 384.872 41.8428 384.498 cv
60.9263 366.924 li
66.8589 379.647 li
73.897 369.359 li
78.9321 377.773 li
94.5308 360.029 li
94.895 359.615 95.5269 359.574 95.9419 359.939 cv
96.3569 360.303 96.3975 360.935 96.0327 361.35 cv
78.6235 381.154 li
73.7847 373.066 li
66.5288 383.673 li
60.269 370.248 li
43.1973 385.969 li
43.0054 386.146 42.7622 386.233 42.5205 386.233 cv
cp
1 1 1 rgb
f
56.5776 360.69 mo
40.8506 360.69 li
40.8506 359.099 li
56.5776 359.099 li
56.5776 360.69 li
cp
f
50.7754 364.221 mo
40.8506 364.221 li
40.8506 362.63 li
50.7754 362.63 li
50.7754 364.221 li
cp
f
38.8999 359.895 mo
38.2207 359.895 li
38.2207 358.453 li
38.8999 358.453 li
38.8999 359.895 li
cp
f
38.8999 362.131 mo
38.2207 362.131 li
38.2207 360.69 li
38.8999 360.69 li
38.8999 362.131 li
cp
f
38.8999 364.367 mo
38.2207 364.367 li
38.2207 362.926 li
38.8999 362.926 li
38.8999 364.367 li
cp
f
38.8999 366.603 mo
38.2207 366.603 li
38.2207 365.162 li
38.8999 365.162 li
38.8999 366.603 li
cp
f
38.8999 368.84 mo
38.2207 368.84 li
38.2207 367.398 li
38.8999 367.398 li
38.8999 368.84 li
cp
f
38.8999 371.076 mo
38.2207 371.076 li
38.2207 369.635 li
38.8999 369.635 li
38.8999 371.076 li
cp
f
38.8999 373.313 mo
38.2207 373.313 li
38.2207 371.871 li
38.8999 371.871 li
38.8999 373.313 li
cp
f
38.8999 375.549 mo
38.2207 375.549 li
38.2207 374.107 li
38.8999 374.107 li
38.8999 375.549 li
cp
f
38.8999 377.785 mo
38.2207 377.785 li
38.2207 376.344 li
38.8999 376.344 li
38.8999 377.785 li
cp
f
38.8999 380.022 mo
38.2207 380.022 li
38.2207 378.58 li
38.8999 378.58 li
38.8999 380.022 li
cp
f
38.8999 382.258 mo
38.2207 382.258 li
38.2207 380.816 li
38.8999 380.816 li
38.8999 382.258 li
cp
f
38.8999 384.494 mo
38.2207 384.494 li
38.2207 383.053 li
38.8999 383.053 li
38.8999 384.494 li
cp
f
38.8999 386.73 mo
38.2207 386.73 li
38.2207 385.289 li
38.8999 385.289 li
38.8999 386.73 li
cp
f
40.354 389.081 mo
40.354 388.401 li
41.7954 388.401 li
41.7954 389.081 li
40.354 389.081 li
cp
f
42.7603 389.081 mo
42.7603 388.401 li
44.2017 388.401 li
44.2017 389.081 li
42.7603 389.081 li
cp
f
45.1665 389.081 mo
45.1665 388.401 li
46.6079 388.401 li
46.6079 389.081 li
45.1665 389.081 li
cp
f
47.5728 389.081 mo
47.5728 388.401 li
49.0142 388.401 li
49.0142 389.081 li
47.5728 389.081 li
cp
f
49.979 389.081 mo
49.979 388.401 li
51.4204 388.401 li
51.4204 389.081 li
49.979 389.081 li
cp
f
52.3853 389.081 mo
52.3853 388.401 li
53.8267 388.401 li
53.8267 389.081 li
52.3853 389.081 li
cp
f
54.7915 389.081 mo
54.7915 388.401 li
56.2329 388.401 li
56.2329 389.081 li
54.7915 389.081 li
cp
f
57.1978 389.081 mo
57.1978 388.401 li
58.6392 388.401 li
58.6392 389.081 li
57.1978 389.081 li
cp
f
59.604 389.081 mo
59.604 388.401 li
61.0454 388.401 li
61.0454 389.081 li
59.604 389.081 li
cp
f
62.0103 389.081 mo
62.0103 388.401 li
63.4517 388.401 li
63.4517 389.081 li
62.0103 389.081 li
cp
f
64.4165 389.081 mo
64.4165 388.401 li
65.8579 388.401 li
65.8579 389.081 li
64.4165 389.081 li
cp
f
66.8228 389.081 mo
66.8228 388.401 li
68.2642 388.401 li
68.2642 389.081 li
66.8228 389.081 li
cp
f
69.229 389.081 mo
69.229 388.401 li
70.6704 388.401 li
70.6704 389.081 li
69.229 389.081 li
cp
f
71.6353 389.081 mo
71.6353 388.401 li
73.0767 388.401 li
73.0767 389.081 li
71.6353 389.081 li
cp
f
74.0415 389.081 mo
74.0415 388.401 li
75.4829 388.401 li
75.4829 389.081 li
74.0415 389.081 li
cp
f
76.4478 389.081 mo
76.4478 388.401 li
77.8892 388.401 li
77.8892 389.081 li
76.4478 389.081 li
cp
f
78.854 389.081 mo
78.854 388.401 li
80.2954 388.401 li
80.2954 389.081 li
78.854 389.081 li
cp
f
81.2603 389.081 mo
81.2603 388.401 li
82.7017 388.401 li
82.7017 389.081 li
81.2603 389.081 li
cp
f
83.6665 389.081 mo
83.6665 388.401 li
85.1079 388.401 li
85.1079 389.081 li
83.6665 389.081 li
cp
f
86.0728 389.081 mo
86.0728 388.401 li
87.5142 388.401 li
87.5142 389.081 li
86.0728 389.081 li
cp
f
88.479 389.081 mo
88.479 388.401 li
89.9204 388.401 li
89.9204 389.081 li
88.479 389.081 li
cp
f
90.8853 389.081 mo
90.8853 388.401 li
92.3267 388.401 li
92.3267 389.081 li
90.8853 389.081 li
cp
f
93.2915 389.081 mo
93.2915 388.401 li
94.7329 388.401 li
94.7329 389.081 li
93.2915 389.081 li
cp
f
95.6978 389.081 mo
95.6978 388.401 li
97.1392 388.401 li
97.1392 389.081 li
95.6978 389.081 li
cp
f
92.7598 73.2544 mo
31.3945 73.2544 li
31.3945 33.8267 li
92.7598 33.8267 li
92.7598 73.2544 li
cp
0 0 0 rgb
f
74.668 85.8257 mo
51.3818 85.8257 li
57.7139 77.3569 li
68.3379 77.3569 li
74.668 85.8257 li
cp
.678431 .678431 .678431 rgb
f
88.2598 81.4604 mo
35.8945 81.4604 li
33.4082 81.4604 31.3945 79.6226 31.3945 77.3569 cv
31.3945 73.2544 li
92.7598 73.2544 li
92.7598 73.2544 92.7598 75.0913 92.7598 77.3569 cv
92.7598 79.6226 90.7441 81.4604 88.2598 81.4604 cv
cp
.858824 .858824 .858824 rgb
f
75.5234 88.4897 mo
50.5273 88.4897 li
50.5273 85.8257 li
75.5234 85.8257 li
75.5234 88.4897 li
cp
0 0 0 rgb
f
33.1934 35.6265 mo
33.1934 71.4546 li
63.0254 71.4546 li
63.0254 35.6265 li
33.1934 35.6265 li
cp
.992157 .776471 .227451 rgb
f
90.959 35.6265 mo
63.0254 35.6265 li
63.0254 71.4546 li
90.959 71.4546 li
90.959 35.6265 li
cp
.992157 .627451 .0784314 rgb
f
61.0522 48.7134 mo
35.1265 48.7134 li
35.1265 38.2729 li
61.0522 38.2729 li
61.0522 48.7134 li
cp
.992157 .952941 .843137 rgb
f
88.6509 48.7134 mo
65.0332 48.7134 li
65.0332 38.2729 li
88.6509 38.2729 li
88.6509 48.7134 li
cp
f
88.6509 54.9478 mo
35.1265 54.9478 li
35.1265 51.0122 li
88.6509 51.0122 li
88.6509 54.9478 li
cp
f
88.6509 60.8511 mo
35.1265 60.8511 li
35.1265 56.9155 li
88.6509 56.9155 li
88.6509 60.8511 li
cp
f
88.6509 66.7544 mo
35.1265 66.7544 li
35.1265 62.8188 li
88.6509 62.8188 li
88.6509 66.7544 li
cp
f
36.2451 103.278 mo
37.7544 103.278 li
38.3526 103.278 38.7827 103.165 39.0464 102.938 cv
39.3091 102.71 39.4409 102.363 39.4409 101.898 cv
39.4409 101.457 39.313 101.116 39.0571 100.875 cv
38.8008 100.633 38.4024 100.512 37.8618 100.512 cv
36.2451 100.512 li
36.2451 103.278 li
cp
36.2451 104.111 mo
36.2451 107.5 li
35.187 107.5 li
35.187 99.6851 li
37.8618 99.6851 li
38.7178 99.6851 39.3711 99.875 39.8223 100.254 cv
40.2734 100.634 40.499 101.186 40.499 101.909 cv
40.499 102.31 40.3941 102.659 40.1851 102.956 cv
39.9751 103.253 39.6699 103.49 39.2691 103.665 cv
39.6987 103.805 40.0073 104.031 40.1958 104.345 cv
40.3833 104.658 40.4776 105.045 40.4776 105.507 cv
40.4776 106.243 li
40.4776 106.487 40.5044 106.705 40.5581 106.898 cv
40.6118 107.092 40.7051 107.249 40.8374 107.371 cv
40.8374 107.5 li
39.7471 107.5 li
39.6074 107.378 39.5181 107.199 39.4785 106.963 cv
39.439 106.727 39.4194 106.483 39.4194 106.232 cv
39.4194 105.518 li
39.4194 105.096 39.2959 104.755 39.0488 104.498 cv
38.8018 104.24 38.4707 104.111 38.0552 104.111 cv
36.2451 104.111 li
cp
.501961 .501961 .501961 rgb
f
44.2803 102.414 mo
43.9116 102.414 43.6065 102.556 43.3643 102.841 cv
43.1231 103.125 42.9751 103.49 42.9214 103.934 cv
42.9321 103.96 li
45.5532 103.96 li
45.5532 103.874 li
45.5532 103.452 45.4492 103.103 45.2417 102.827 cv
45.0342 102.551 44.7134 102.414 44.2803 102.414 cv
cp
44.4468 107.613 mo
43.6123 107.613 42.9619 107.346 42.4942 106.813 cv
42.0274 106.279 41.7935 105.577 41.7935 104.707 cv
41.7935 104.471 li
41.7935 103.636 42.0342 102.946 42.5156 102.4 cv
42.9976 101.854 43.5855 101.581 44.2803 101.581 cv
45.0571 101.581 45.6401 101.823 46.0283 102.306 cv
46.417 102.79 46.6113 103.432 46.6113 104.234 cv
46.6113 104.793 li
42.8945 104.793 li
42.8784 104.82 li
42.8784 105.403 43.0073 105.877 43.2651 106.24 cv
43.523 106.604 43.917 106.786 44.4468 106.786 cv
44.8047 106.786 45.1192 106.734 45.3897 106.633 cv
45.6597 106.53 45.8916 106.39 46.085 106.211 cv
46.4985 106.898 li
46.291 107.099 46.0171 107.268 45.6768 107.406 cv
45.3364 107.544 44.9268 107.613 44.4468 107.613 cv
cp
f
51.1768 105.937 mo
51.1768 105.704 51.0879 105.515 50.9111 105.368 cv
50.7334 105.221 50.398 105.092 49.9038 104.981 cv
49.2197 104.834 48.6943 104.628 48.3272 104.363 cv
47.9605 104.098 47.7769 103.744 47.7769 103.3 cv
47.7769 102.827 47.9785 102.422 48.3809 102.086 cv
48.7842 101.749 49.3057 101.581 49.9468 101.581 cv
50.6055 101.581 51.1392 101.76 51.5474 102.118 cv
51.9556 102.476 52.1509 102.894 52.1328 103.37 cv
52.1221 103.402 li
51.1123 103.402 li
51.1123 103.151 51.002 102.924 50.7822 102.72 cv
50.5615 102.516 50.2832 102.414 49.9468 102.414 cv
49.5742 102.414 49.2959 102.498 49.1113 102.666 cv
48.9273 102.835 48.835 103.035 48.835 103.268 cv
48.835 103.497 48.9146 103.674 49.0742 103.799 cv
49.2334 103.925 49.562 104.039 50.0596 104.143 cv
50.772 104.294 51.313 104.506 51.6817 104.782 cv
52.0503 105.058 52.2349 105.418 52.2349 105.862 cv
52.2349 106.377 52.0264 106.798 51.6094 107.124 cv
51.1919 107.45 50.647 107.613 49.9736 107.613 cv
49.2324 107.613 48.6489 107.425 48.2227 107.049 cv
47.7964 106.673 47.5943 106.234 47.6157 105.733 cv
47.6265 105.701 li
48.6362 105.701 li
48.6543 106.077 48.794 106.352 49.0552 106.525 cv
49.3164 106.699 49.6226 106.786 49.9736 106.786 cv
50.3496 106.786 50.6441 106.706 50.8574 106.547 cv
51.0703 106.387 51.1768 106.184 51.1768 105.937 cv
cp
f
57.4448 104.702 mo
57.4448 104.043 57.315 103.501 57.0552 103.077 cv
56.7959 102.652 56.4136 102.44 55.9087 102.44 cv
55.6045 102.44 55.3447 102.509 55.1299 102.647 cv
54.9151 102.785 54.7412 102.974 54.6089 103.214 cv
54.6089 106.023 li
54.7412 106.263 54.9151 106.45 55.1299 106.584 cv
55.3447 106.719 55.6079 106.786 55.9194 106.786 cv
56.4209 106.786 56.8003 106.602 57.0581 106.235 cv
57.3159 105.868 57.4448 105.395 57.4448 104.814 cv
57.4448 104.702 li
cp
58.5029 104.814 mo
58.5029 105.652 58.3023 106.328 57.9014 106.842 cv
57.5005 107.356 56.9473 107.613 56.2417 107.613 cv
55.8838 107.613 55.5693 107.553 55.2993 107.433 cv
55.0288 107.313 54.7988 107.133 54.6089 106.893 cv
54.6089 109.734 li
53.5508 109.734 li
53.5508 101.688 li
54.3618 101.688 li
54.5283 102.44 li
54.7183 102.161 54.9546 101.948 55.2373 101.801 cv
55.52 101.654 55.8496 101.581 56.2256 101.581 cv
56.9453 101.581 57.5049 101.867 57.9038 102.438 cv
58.3032 103.009 58.5029 103.764 58.5029 104.702 cv
58.5029 104.814 li
cp
f
60.6138 104.659 mo
60.6138 105.274 60.7437 105.783 61.0034 106.184 cv
61.2627 106.585 61.6484 106.786 62.1607 106.786 cv
62.6655 106.786 63.0488 106.585 63.3101 106.184 cv
63.5713 105.783 63.7022 105.274 63.7022 104.659 cv
63.7022 104.54 li
63.7022 103.932 63.5708 103.425 63.3071 103.021 cv
63.0444 102.616 62.6582 102.414 62.1499 102.414 cv
61.645 102.414 61.2627 102.616 61.0034 103.021 cv
60.7437 103.425 60.6138 103.932 60.6138 104.54 cv
60.6138 104.659 li
cp
59.5557 104.54 mo
59.5557 103.681 59.7886 102.973 60.2539 102.416 cv
60.7193 101.859 61.3516 101.581 62.1499 101.581 cv
62.9556 101.581 63.5923 101.858 64.0591 102.414 cv
64.5269 102.969 64.7603 103.678 64.7603 104.54 cv
64.7603 104.659 li
64.7603 105.525 64.5274 106.234 64.062 106.786 cv
63.5967 107.337 62.9629 107.613 62.1607 107.613 cv
61.3584 107.613 60.7241 107.336 60.2564 106.783 cv
59.7896 106.229 59.5557 105.521 59.5557 104.659 cv
59.5557 104.54 li
cp
f
67 101.688 mo
67.0752 102.553 li
67.2686 102.245 67.5112 102.006 67.8032 101.836 cv
68.0947 101.666 68.4268 101.581 68.7993 101.581 cv
69.4258 101.581 69.9111 101.765 70.2549 102.132 cv
70.5986 102.498 70.7705 103.065 70.7705 103.831 cv
70.7705 107.5 li
69.7124 107.5 li
69.7124 103.853 li
69.7124 103.341 69.6113 102.978 69.4087 102.763 cv
69.2066 102.548 68.898 102.44 68.4824 102.44 cv
68.1568 102.44 67.8799 102.506 67.6528 102.637 cv
67.4253 102.767 67.2451 102.951 67.1128 103.187 cv
67.1128 107.5 li
66.0547 107.5 li
66.0547 101.688 li
67 101.688 li
cp
f
75.6851 105.937 mo
75.6851 105.704 75.5962 105.515 75.4194 105.368 cv
75.2417 105.221 74.9063 105.092 74.4121 104.981 cv
73.728 104.834 73.2026 104.628 72.8355 104.363 cv
72.4688 104.098 72.2852 103.744 72.2852 103.3 cv
72.2852 102.827 72.4868 102.422 72.8892 102.086 cv
73.2925 101.749 73.814 101.581 74.4551 101.581 cv
75.1138 101.581 75.6475 101.76 76.0557 102.118 cv
76.4639 102.476 76.6592 102.894 76.6411 103.37 cv
76.6304 103.402 li
75.6206 103.402 li
75.6206 103.151 75.5103 102.924 75.2905 102.72 cv
75.0698 102.516 74.7915 102.414 74.4551 102.414 cv
74.0825 102.414 73.8042 102.498 73.6196 102.666 cv
73.4356 102.835 73.3433 103.035 73.3433 103.268 cv
73.3433 103.497 73.4229 103.674 73.5825 103.799 cv
73.7417 103.925 74.0703 104.039 74.5679 104.143 cv
75.2803 104.294 75.8213 104.506 76.19 104.782 cv
76.5586 105.058 76.7432 105.418 76.7432 105.862 cv
76.7432 106.377 76.5347 106.798 76.1177 107.124 cv
75.7002 107.45 75.1553 107.613 74.4819 107.613 cv
73.7407 107.613 73.1572 107.425 72.731 107.049 cv
72.3047 106.673 72.1026 106.234 72.124 105.733 cv
72.1348 105.701 li
73.1445 105.701 li
73.1626 106.077 73.3023 106.352 73.5635 106.525 cv
73.8247 106.699 74.1309 106.786 74.4819 106.786 cv
74.8579 106.786 75.1524 106.706 75.3657 106.547 cv
75.5786 106.387 75.6851 106.184 75.6851 105.937 cv
cp
f
79.2031 107.5 mo
78.145 107.5 li
78.145 101.688 li
79.2031 101.688 li
79.2031 107.5 li
cp
79.2031 100.201 mo
78.145 100.201 li
78.145 99.1211 li
79.2031 99.1211 li
79.2031 100.201 li
cp
f
82.7695 105.787 mo
82.8609 106.195 li
82.8931 106.195 li
82.9951 105.787 li
84.3325 101.688 li
85.4121 101.688 li
83.2744 107.5 li
82.4741 107.5 li
80.3096 101.688 li
81.3945 101.688 li
82.7695 105.787 li
cp
f
88.5327 102.414 mo
88.1641 102.414 87.8589 102.556 87.6167 102.841 cv
87.3755 103.125 87.2276 103.49 87.1738 103.934 cv
87.1846 103.96 li
89.8057 103.96 li
89.8057 103.874 li
89.8057 103.452 89.7017 103.103 89.4942 102.827 cv
89.2866 102.551 88.9658 102.414 88.5327 102.414 cv
cp
88.6992 107.613 mo
87.8648 107.613 87.2144 107.346 86.7466 106.813 cv
86.2798 106.279 86.0459 105.577 86.0459 104.707 cv
86.0459 104.471 li
86.0459 103.636 86.2866 102.946 86.7681 102.4 cv
87.25 101.854 87.8379 101.581 88.5327 101.581 cv
89.3096 101.581 89.8926 101.823 90.2808 102.306 cv
90.6694 102.79 90.8638 103.432 90.8638 104.234 cv
90.8638 104.793 li
87.147 104.793 li
87.1309 104.82 li
87.1309 105.403 87.2598 105.877 87.5176 106.24 cv
87.7754 106.604 88.1694 106.786 88.6992 106.786 cv
89.0571 106.786 89.3716 106.734 89.6421 106.633 cv
89.9121 106.53 90.1441 106.39 90.3374 106.211 cv
90.751 106.898 li
90.5435 107.099 90.2695 107.268 89.9292 107.406 cv
89.5889 107.544 89.1792 107.613 88.6992 107.613 cv
cp
f
37.8711 118.584 mo
38.0054 119.331 li
38.0376 119.331 li
38.1772 118.584 li
39.3374 114.889 li
40.186 114.889 li
41.3515 118.584 li
41.5019 119.416 li
41.5342 119.416 li
41.706 118.584 li
42.5654 114.889 li
43.6719 114.889 li
41.9853 120.7 li
41.1313 120.7 li
39.9819 117.161 li
39.7617 116.237 li
39.7295 116.237 li
39.5254 117.161 li
38.3974 120.7 li
37.5434 120.7 li
35.8569 114.889 li
36.958 114.889 li
37.8711 118.584 li
cp
f
46.9482 115.614 mo
46.5796 115.614 46.2744 115.756 46.0322 116.041 cv
45.791 116.325 45.643 116.69 45.5893 117.134 cv
45.6001 117.161 li
48.2212 117.161 li
48.2212 117.075 li
48.2212 116.652 48.1172 116.303 47.9096 116.027 cv
47.7021 115.752 47.3813 115.614 46.9482 115.614 cv
cp
47.1147 120.813 mo
46.2803 120.813 45.6299 120.546 45.1621 120.013 cv
44.6953 119.479 44.4614 118.777 44.4614 117.907 cv
44.4614 117.671 li
44.4614 116.836 44.7021 116.146 45.1836 115.601 cv
45.6655 115.054 46.2534 114.781 46.9482 114.781 cv
47.7251 114.781 48.3081 115.023 48.6963 115.506 cv
49.0849 115.99 49.2793 116.632 49.2793 117.435 cv
49.2793 117.993 li
45.5625 117.993 li
45.5464 118.02 li
45.5464 118.604 45.6753 119.077 45.9331 119.44 cv
46.1909 119.804 46.5849 119.986 47.1147 119.986 cv
47.4726 119.986 47.7871 119.935 48.0576 119.833 cv
48.3276 119.73 48.5595 119.59 48.7529 119.411 cv
49.1665 120.099 li
48.959 120.299 48.685 120.468 48.3447 120.606 cv
48.0044 120.744 47.5947 120.813 47.1147 120.813 cv
cp
f
54.3711 117.902 mo
54.3711 117.236 54.2485 116.692 54.0029 116.271 cv
53.7578 115.851 53.3847 115.641 52.8833 115.641 cv
52.5576 115.641 52.2827 115.72 52.0586 115.88 cv
51.8349 116.039 51.6567 116.253 51.5244 116.521 cv
51.5244 119.04 li
51.6606 119.327 51.8388 119.551 52.0586 119.712 cv
52.2793 119.873 52.5576 119.954 52.894 119.954 cv
53.3916 119.954 53.7622 119.776 54.0058 119.422 cv
54.2495 119.067 54.3711 118.598 54.3711 118.015 cv
54.3711 117.902 li
cp
55.4292 118.015 mo
55.4292 118.853 55.2275 119.528 54.8252 120.042 cv
54.4219 120.556 53.8681 120.813 53.1626 120.813 cv
52.7759 120.813 52.4404 120.737 52.1553 120.585 cv
51.8711 120.433 51.6352 120.208 51.4492 119.911 cv
51.2773 120.7 li
50.4663 120.7 li
50.4663 112.321 li
51.5244 112.321 li
51.5244 115.576 li
51.707 115.318 51.9336 115.122 52.2041 114.985 cv
52.4741 114.849 52.79 114.781 53.1518 114.781 cv
53.8681 114.781 54.4267 115.068 54.8276 115.641 cv
55.2285 116.213 55.4292 116.967 55.4292 117.902 cv
55.4292 118.015 li
cp
f
59.3784 118.015 mo
59.3784 118.602 59.4985 119.072 59.7383 119.425 cv
59.978 119.777 60.3506 119.954 60.8555 119.954 cv
61.1704 119.954 61.4356 119.882 61.6504 119.739 cv
61.8652 119.596 62.0405 119.395 62.1768 119.137 cv
62.1768 116.425 li
62.0405 116.185 61.8643 115.994 61.6475 115.853 cv
61.4312 115.711 61.1704 115.641 60.8662 115.641 cv
60.3579 115.641 59.9824 115.85 59.7412 116.269 cv
59.499 116.688 59.3784 117.232 59.3784 117.902 cv
59.3784 118.015 li
cp
58.3203 117.902 mo
58.3203 116.967 58.52 116.213 58.919 115.641 cv
59.3184 115.068 59.8779 114.781 60.5977 114.781 cv
60.938 114.781 61.2393 114.844 61.5029 114.969 cv
61.7656 115.095 61.9907 115.277 62.1768 115.517 cv
62.1768 112.321 li
63.2349 112.321 li
63.2349 120.7 li
62.4238 120.7 li
62.2627 119.964 li
62.0728 120.244 61.8384 120.455 61.5591 120.598 cv
61.2798 120.741 60.9556 120.813 60.5869 120.813 cv
59.8779 120.813 59.3228 120.556 58.9219 120.042 cv
58.521 119.528 58.3203 118.853 58.3203 118.015 cv
58.3203 117.902 li
cp
f
67.0537 115.614 mo
66.6851 115.614 66.3799 115.756 66.1377 116.041 cv
65.8965 116.325 65.7485 116.69 65.6948 117.134 cv
65.7056 117.161 li
68.3267 117.161 li
68.3267 117.075 li
68.3267 116.652 68.2227 116.303 68.0151 116.027 cv
67.8076 115.752 67.4868 115.614 67.0537 115.614 cv
cp
67.2202 120.813 mo
66.3858 120.813 65.7354 120.546 65.2676 120.013 cv
64.8008 119.479 64.5669 118.777 64.5669 117.907 cv
64.5669 117.671 li
64.5669 116.836 64.8076 116.146 65.2891 115.601 cv
65.771 115.054 66.3589 114.781 67.0537 114.781 cv
67.8306 114.781 68.4136 115.023 68.8018 115.506 cv
69.1904 115.99 69.3848 116.632 69.3848 117.435 cv
69.3848 117.993 li
65.668 117.993 li
65.6519 118.02 li
65.6519 118.604 65.7808 119.077 66.0386 119.44 cv
66.2964 119.804 66.6904 119.986 67.2202 119.986 cv
67.5781 119.986 67.8926 119.935 68.1631 119.833 cv
68.4331 119.73 68.6651 119.59 68.8584 119.411 cv
69.272 120.099 li
69.0645 120.299 68.7905 120.468 68.4502 120.606 cv
68.1099 120.744 67.7002 120.813 67.2202 120.813 cv
cp
f
73.9502 119.137 mo
73.9502 118.904 73.8613 118.715 73.6846 118.568 cv
73.5068 118.421 73.1714 118.292 72.6773 118.181 cv
71.9932 118.034 71.4678 117.829 71.1006 117.563 cv
70.7339 117.298 70.5503 116.944 70.5503 116.5 cv
70.5503 116.027 70.752 115.623 71.1543 115.286 cv
71.5576 114.95 72.0791 114.781 72.7202 114.781 cv
73.3789 114.781 73.9126 114.96 74.3208 115.318 cv
74.729 115.676 74.9243 116.094 74.9063 116.57 cv
74.8955 116.602 li
73.8858 116.602 li
73.8858 116.352 73.7754 116.124 73.5557 115.92 cv
73.335 115.716 73.0567 115.614 72.7202 115.614 cv
72.3477 115.614 72.0693 115.698 71.8848 115.866 cv
71.7007 116.035 71.6084 116.235 71.6084 116.468 cv
71.6084 116.697 71.688 116.874 71.8477 116.999 cv
72.0068 117.125 72.3355 117.239 72.833 117.343 cv
73.5454 117.494 74.0864 117.706 74.4551 117.982 cv
74.8237 118.258 75.0083 118.618 75.0083 119.062 cv
75.0083 119.578 74.7998 119.998 74.3828 120.324 cv
73.9653 120.65 73.4204 120.813 72.7471 120.813 cv
72.0059 120.813 71.4224 120.625 70.9961 120.249 cv
70.5698 119.873 70.3677 119.435 70.3892 118.933 cv
70.3999 118.901 li
71.4097 118.901 li
71.4277 119.277 71.5674 119.552 71.8286 119.726 cv
72.0899 119.899 72.396 119.986 72.7471 119.986 cv
73.1231 119.986 73.4175 119.906 73.6309 119.747 cv
73.8438 119.587 73.9502 119.384 73.9502 119.137 cv
cp
f
77.4683 120.7 mo
76.4102 120.7 li
76.4102 114.889 li
77.4683 114.889 li
77.4683 120.7 li
cp
77.4683 113.401 mo
76.4102 113.401 li
76.4102 112.321 li
77.4683 112.321 li
77.4683 113.401 li
cp
f
79.9658 118.015 mo
79.9658 118.598 80.0859 119.067 80.3257 119.422 cv
80.5654 119.776 80.936 119.954 81.4375 119.954 cv
81.7564 119.954 82.023 119.881 82.2378 119.736 cv
82.4526 119.591 82.6299 119.386 82.7695 119.121 cv
82.7695 116.446 li
82.6333 116.199 82.4561 116.003 82.2378 115.858 cv
82.0195 115.713 81.7564 115.641 81.4483 115.641 cv
80.9434 115.641 80.5698 115.85 80.3286 116.269 cv
80.0864 116.688 79.9658 117.232 79.9658 117.902 cv
79.9658 118.015 li
cp
78.9077 117.902 mo
78.9077 116.967 79.1074 116.213 79.5064 115.641 cv
79.9058 115.068 80.4634 114.781 81.1797 114.781 cv
81.5484 114.781 81.8726 114.855 82.1519 115.004 cv
82.4312 115.153 82.6655 115.367 82.8555 115.646 cv
82.9844 114.889 li
83.8276 114.889 li
83.8276 120.732 li
83.8276 121.477 83.6109 122.049 83.1777 122.448 cv
82.7446 122.848 82.1196 123.047 81.3032 123.047 cv
81.0239 123.047 80.7222 123.009 80.398 122.932 cv
80.0742 122.855 79.7886 122.75 79.5415 122.618 cv
79.7026 121.796 li
79.9068 121.903 80.1528 121.99 80.4409 122.057 cv
80.7295 122.123 81.0132 122.156 81.2925 122.156 cv
81.8081 122.156 82.1831 122.039 82.4175 121.804 cv
82.6524 121.569 82.7695 121.212 82.7695 120.732 cv
82.7695 120.072 li
82.5796 120.315 82.3526 120.499 82.0874 120.625 cv
81.8223 120.751 81.5161 120.813 81.169 120.813 cv
80.46 120.813 79.9058 120.556 79.5064 120.042 cv
79.1074 119.528 78.9077 118.853 78.9077 118.015 cv
78.9077 117.902 li
cp
f
86.293 114.889 mo
86.3682 115.753 li
86.5615 115.445 86.8042 115.206 87.0962 115.036 cv
87.3877 114.866 87.7197 114.781 88.0923 114.781 cv
88.7188 114.781 89.2041 114.965 89.5479 115.332 cv
89.8916 115.699 90.0635 116.266 90.0635 117.032 cv
90.0635 120.7 li
89.0054 120.7 li
89.0054 117.053 li
89.0054 116.541 88.9043 116.178 88.7017 115.963 cv
88.4995 115.748 88.1909 115.641 87.7754 115.641 cv
87.4497 115.641 87.1729 115.706 86.9458 115.837 cv
86.7183 115.967 86.5381 116.151 86.4058 116.387 cv
86.4058 120.7 li
85.3477 120.7 li
85.3477 114.889 li
86.293 114.889 li
cp
f
101.06 43.875 mo
92.2666 43.875 li
92.2666 88.4897 li
101.06 88.4897 li
102.837 88.4897 104.277 87.0493 104.277 85.2725 cv
104.277 47.0923 li
104.277 45.3149 102.837 43.875 101.06 43.875 cv
cp
.0588235 .188235 .247059 rgb
f
83.4707 43.875 mo
81.6938 43.875 80.2534 45.3149 80.2534 47.0923 cv
80.2534 85.2725 li
80.2534 87.0493 81.6938 88.4897 83.4707 88.4897 cv
92.2666 88.4897 li
92.2666 43.875 li
83.4707 43.875 li
cp
.172549 .345098 .443137 rgb
f
97.1504 46.4624 mo
87.3809 46.4624 li
87.3809 45.6597 li
97.1504 45.6597 li
97.1504 46.4624 li
cp
1 1 1 rgb
f
92.2666 82.5146 mo
91.1211 82.5146 90.1899 83.4443 90.1899 84.5898 cv
90.1899 85.7344 91.1211 86.666 92.2666 86.666 cv
93.4106 86.666 94.3413 85.7344 94.3413 84.5898 cv
94.3413 83.4443 93.4106 82.5146 92.2666 82.5146 cv
cp
92.2666 87.2427 mo
90.8037 87.2427 89.6128 86.0527 89.6128 84.5898 cv
89.6128 83.1284 90.8037 81.9375 92.2666 81.9375 cv
93.728 81.9375 94.918 83.1284 94.918 84.5898 cv
94.918 86.0527 93.728 87.2427 92.2666 87.2427 cv
cp
f
81.4204 48.7134 mo
81.4204 80.3291 li
92.3838 80.3291 li
92.3838 48.7134 li
81.4204 48.7134 li
cp
.992157 .776471 .227451 rgb
f
103.111 48.7134 mo
92.3838 48.7134 li
92.3838 80.3291 li
103.111 80.3291 li
103.111 48.7134 li
cp
.992157 .627451 .0784314 rgb
f
101.125 56.25 mo
83.25 56.25 li
83.25 50.625 li
101.125 50.625 li
101.125 56.25 li
cp
.992157 .952941 .843137 rgb
f
101.125 62.8188 mo
83.25 62.8188 li
83.25 57.1938 li
101.125 57.1938 li
101.125 62.8188 li
cp
f
101.125 69.3877 mo
83.25 69.3877 li
83.25 63.7627 li
101.125 63.7627 li
101.125 69.3877 li
cp
f
101.125 75.9565 mo
83.25 75.9565 li
83.25 70.3315 li
101.125 70.3315 li
101.125 75.9565 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 18.0.0
%%For: (IvAN) ()
%%Title: (5_1412.i042.008.P.m004.c23.web development icons.eps)
%%CreationDate: 12/10/2014 12:16 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KBj2N<dcgWlcSPU;=\)'bVPS1<\q)+DN!Y=S#`sHX`brT.>J0$eb_Pr%hl;jhXYr'oB*8&+cCK5P=^/#..[AM)F6i3ZX&a/0
%XLE[dc8iF(:H1B4YOgZObfr;OmmXnt>85iB5r39KGJ!6WeE^tY)sqN]3OeOZd`T8)SA6eCgkViUB`FB&DcE`Ld&4*"%SQIa<,-WH
%Q%%$)3s9X9WUlT#oR[,5Dh?0Mm3[AWUOF:#!FsTkHX#h0PdiFFchs]SkbR)$G:WW<]Ck7d2D&bBC?YVp;c,cp@*:P7s-\WaF2d@Q
%12-=1S@PF1r7QR]_]^)_Fufon;(j"<@e:a4s%!$G"YmgjB9D0Q:R[jS$if?L2s7/cG'Aj(#?M@^Ubr"nFU*)-!eeeH,*@H^;7"`M
%oHRf[k9;R"MsC>ps"KF`#Lm]iLqM&TMn\N>--ll&S$KiSLV@YpE&mbtO+(<Y4c:etW2l=hkk=c:rr]-4ajAtZ5pP[/C"<)G2)S4/
%q!bRpM].+Wd_4//&8*R?l$mi6K1bk`l@ULn)ZsWgE\;=TDm'AiEogAU6HA^D4.W<md!eUq?"BPJLQ'Crj*AXLTL>B,3@7+D31bn!
%_l4pZ+-t-pijj%_*6Lr!O\`S3O?;:p8\MOE(]]JBcEsZjFmHG'<.UKhqB$V:+'AOPc%#DdJHl(%e1t\kI^npr&pbr*EZ_49Ct1Gt
%9k6^(s1&X!h?$DbZqp=taZnuJ(h1k>\.ITf<?"!K><),%s78k](*)a##4UYR[lrqk[uT5CrQfkbeint3Dkh'^h$*N'E]ZeKi?&SN
%o;%JYK5RLmA&,k>2YftYoAGc4!RGYJ;nkY+qPX/(=o*cZK&K6):sdJ<c`#7Z=9GUI=[q1`<*GQ)Ndcch/D#Bg0,:-Y1*ec:qX65"
%$,Y*kZHt#LAn_)M)H]48R]=e#"lgN/C;"k6p!711LlI!t)0,[Xo;LKDpR:Vs2Is;FmFSCuB`D/;+(ZZN8p7\Odo&j+%XP%`K6Fkh
%&48>%5:*Dup/N2d@um*<>MO#D9^q'fc*C2\2!QIE9'<Qf*Au6#hr>UAhl\g#I[/P?C;0=9nPgES"(s?O[99P_5ocZp(Ui#sXjXDE
%QKq&--n=f]\DDg334D,NpS3C3m:HSD[bUjrV%]!&R[3imOQ$gp$@=.&>eG0>@#k)'s6UT3DggF?Qf>c$bOD_00?^P,Dl:@.odXk0
%Q0thKITjk<s5%S!i5\9Z9XfI-kXT%%(8,*0gT:mnWLhZ[[;OKg(-K(5%0elm&c\d/$dj\NkF(AS4if5B_k=,qFJGIn`^%!oNTqmh
%rA!\CQ)8:#.khDKDDXDheSG-4%+scef7cm6<.8CDj4Est:tRr_1chP"6ZtI>oi_Q)YgIS:djEtt$M?$ll'N0W*;g5dV-;beW>gW'
%NQgk]+.',$VV/oeTR-f]=fWHH:'oJ:;I[Rs?OK3&p3sad>NY&2oV`d"]ijDReb\"\2=H@E&Nd#bU/ErH0`\XoZ'duHY7!?)`QOD0
%7_M)4bP#`j?5G[#Ea2e#k"`<kq3aeSmD^$'c+&J6M\^cPSW=751E+iU0.-_,E!G.obE-OaU2C/4nI1@JRbhl*WOKm(ABO/P<nE&H
%IXBGD7U%?Wb^r\=KW\Tf-jK!7<0fgUrh`\W^NK>RQAX(0DIjU+h*?'oU"hjRb'C<iDALAh818];XakoRGh&tkB#37j"EPFn7C-+a
%-H'pB[XhR42iHd0Z.pmrS&KDL'boe)="K[ESI(/7(AW&?F6h6"W3LhUWO75FMW;6`I$sDI-\G@Kldq$AcT5'EAdSq4k1@T,UW-]3
%D4a5R=nr)_:73.V@&l'Hp$.gnqKQ?&Cqhu_o$jt4p"D:Wodi(50nHaiY7HE^nSp5I?Q_h%W:JUmfVIa-%^B[k[Ch'n0NRdFku,H<
%VrQg'e?8VJOX2rbgKg/1AZ1:G%D'TFC:%?MA4%cqr4;C7>48#u3.[RPKBnH^1'elhDU>>(2qkB?^XC9ASF^$h%6l4%Jt'N!g9'R2
%#UWh(1uMJH%fF(u%u1ri-7lG-O4P*IB0tX.):809[JLfQm<Yg?cBdEmq"pA^Y>r!3rJ$/NHD^+$i//-=NB\;J4pNGk7["JV>j[d9
%VHJEXNnRVO/NLF4--<C!SW1NCK`eqN*%Kcjs0N[:Z^h%iPXW<<^>F0NS41fEA_L%6k$9&=NI%5"Al$g?P/W0d=kM_?\)[$40*1j3
%PeUpZlW"SKPJY\5;>2>&8ku1kPMQ".-U7U]<QqIjAlV#>d:(L'jcbN[2a"3FfKS)([i=Yh./I;*6`qA8iq)WK[]q598D\I?1"GRa
%7,*qpa=NtBrc>PHWt2LlWbH]pM2Wmf-Q-ljR,E3=CW]tl]:DlJX"V@[HNV0IR2NX,Ah;-EP+-@/VWh:;b]qqXj)m0nQNF%XW&G)3
%-:Yg-h;k%6"eX^&f\+7=agr==PelOon]'5'i]0ctmJ\XFRN*9;Aa@+qV9'TiiF`Z8gfRjMJ1?\VEO?"7A<Sh-d*$`8jEg9NA7<O&
%!ro%9:DjYh2GPd)<n,c_)YAT>/E^a1\m-&#HPqiXY)_E80%[bj'^NG-UJd*@K.8N)SVc-BRM?Yl_f=X'6omien-!+hIAYf15?[9t
%bE8VcZhSL:iD&IijQo`Hr1=9ejf"5X?">3u[XH>>%s&p:rl>Yih0;kb"c:@KqCJ,^?``oZ:"t[a(/u=+)i\Z67uchEBElq*ghf!V
%i'GVj$]dp?\&tmo:-`"3qNYqf<DtKQ$`->+'id"'PsaJ8`@j\m^aWuD>tDBWXUM4.WE'8K_$/p62H"_YlU!+SNUO?_KGNrj`$'d0
%e?ZaTUfq&.BTW=TUZ`uP/u@<.(Fn6s6LP?Z;QJ@<CRA83-#S$7=ClG?D:HejY6^!.nOp@+f#XT6W])`eY_Bi-"]OnE>BMDF;1^6q
%7*3<&abaQ*-[d_M7(Gnbfr;,BWD5r0aqT=^0FNX_`^jarqeu<sBU2`\B!j$G<`pcB(8X&$[3unTj9_eSahj(+$2u<7R+7qTC/Jli
%Q8;OK.+P;u7:H4J>*LS.S")WV<f;!.m+\nuU/\%a(*s>$PG@g&:l@(8V_jT>;j0eb-A7_LrHMYGR_'FbAre+ZhClP4$E!+e_SZ"T
%O^>OXr/7nBPIQ*:j]arPd[66hda+/l]R7\"AnH5R.X'(/fsRfdCDln.ZYMA/2LTacZO;k_]Cqlm#RN4s<c.!$c)fX6fW*2d[AgNJ
%1LG!2ec(h7bru_#r/8`L-IK>7+Mj[5=.Z>m^mQ*H?&do=NA?T'VFE@!9$*$2E[!m<RmMES;u)p5p:@mk0Fk_fhkS2/U[m_i)Xa!l
%j53@q7/PSqRdIBSj<s?bQ774RUt<Fq:G,.Op?9Wk5C11eCkXr2-K'BE*;k!areCHb!^GbCW)f?uGuA2H1<Mh<9"e5_NpEh;T,^U/
%^J7bm(GkU%C3s6b:$89)QT9j$_A?QsRVVO+KSJ)Wd@0IOgc+'&c\BHX<:<WE(CMViZ)+^YT%*A,/"aB-r6,*,AuFGecY$mPi=#An
%@h1=ukm9'I)hpotBa$8&_p5ROak8PO8VVo[ff2)m33__dU!g(;:Rb3GMrgBmX.4J,^[X3BMm/1&^e>'(G;JrXBmStrM_Q/P4."rd
%HS]n&gEce1iG[EkHUW(H'V<TfqCTq:Ija^_G8d'\S=T[l+O]WSpL^&tc9?P/3Tn/a0Am-jG?-Ke&[O:NfpV<qb]h".1ct<"Sb^RV
%HtR*+Iftaf8]As"HuG_gaIMVQchRE]WqEb[E#IH?qXO*K(N$N`&G3?8.+#LGf7fc%a:t#O%+!2k#2NeYNj=OL](q?Kd)9&T^]&oc
%>1!$Z2&bl>/k;^75<8*uK>f=SaI<40i=6b"V44n6bVE_8%,!k*e<FRdPc\(KkseNc"mfm/;K(+N-gd1kol_SFYB6Pn9"S;ANBOA3
%aOJo06aF&Jfdq:>-]NKXk@9fB]67hD"W7e5.fZP.#Q8WaKM8Yi[(J$%o/!$Q2;hgZZ[l03CJN=mlP-Xk;6d:32Pm>R_m7k_aV=Vd
%NS8`MW!Y^uG?.pt"!`$ZQN*AWrL-KO1[(&=cRYeBcZcq6\0*kbS%j.i,.nP?8XET>AX7T:>C?!Eial"#007@P&hc9R6i!'OianF#
%R3c0OM3hB)A[2t&N=4b@8NQjB-'2^FUan'.?O&\,SO&^mLF/n]9(R.:_QJRBUf8I3p1"b=m`s_^a!S+I0qUTeED;7#YEccr<d>T)
%RV:4J]9W6Fh!QG*.p:MFe)-O[d]\j.p?">]M.sCYhB[l$[R'nF)s$?#VOOt\Ap7MZFdqD:T!r&mbpJ.:Ze(NZr]=u#0,:o+pJ3<I
%p2@9ueGNMl.E_,ueJ-o`T,=24G+JRYL<LN!'NrWKV,D&M?':HVLN/V9Ku<B2B^(S=HVkm(W#O8B.`oW-rcGhS^-f!u2oYiI6qA\Z
%X&fZ5DAm/b1`\`;d&&H_A$.V3\V-PDfd_d:L=`iB0eWnq^X[+f.aiFNlU#3GM%%I9nHZ8F*DB?2ZZh<,5RQER$XOSrrqD8oA,*Am
%`Zt[CZTQ6%FF\umaCAbs@@"s$jY:@mN*.33QH,A!VTeTJPE<i#0XG-.<9#kE18j*$q7'Y.p+),(m<Y)hGh)7\_Sj?!dsD;rrHc4>
%/i/cM4L*^.]ohPsJ#`0a+]k4hoT,3^n.*Z>V&,E.d>pTCWb)QXL>(Nq##.d-;#Q:[j)44a9!(C##OLBp9SU?#4J?A:WZE)$A58/s
%m:I,-W7c<%14(c*MgI1*1?i^UU^S=IlF4*EJF2[?@S34WR_9Xs@IFD3EEN6pcNa>RM4]DdpLqnR>#/a.E;'-"QDia\Y7YB(ZmR,!
%HaQLQZUAMnTQ7UN^+uB<+U)4U:q?D`?HN1i3:9i6,j"t'*@5&q6uTXE^A=2,A[CEMKq!.Ri8gHn9uWkU:/Nc16RC:?S]78?EjJkc
%&nAIgQ=(KQc(_aO1cL?TroRlHK>TR)k%<#rNA-<tnut]Dk;'[h0am/^69(<_;6t4Z(=(1A\Nag8B&VO[2OkH0(!^AWB0sJG75c.e
%h7IjBG1*L'fdg[^gl7-PZ:Wnpa)`,gc7+4&iPmD-<5'h:FVeC4r`tBS7@3'_8RH'?IEinT\04=e;N047o0C=g,bl=:F/uM8/fur#
%e[(O2!jt+TC;'X_3E,XXfDjCBP,6asY"S%8IXLq1S*5fUr"3^`SSD+j_4*tIR_%kJ++*eF`[<cno\AKHPaI$$p(4O`l3VGBVZ(pf
%8m_4lPt[3'WqCLk=9bl!7nu"s/c&(bQB5Oba)tgWrVNZTh9KR[mcb1la-CD(<W(:iD`ie%`b>DF@GS>an_7cT)r_;h_L_uM([Y3\
%:;\)-mR]?S2]srSiQWY1AhYg%s4*Tk9W*D\bNm$ccgWD[e:<$[4GU/p?F0N.XOD&jc??e3n96L<Cj&rsnjIeFe%2/Xl(bks4`tN6
%e=.@M)#:g21i^7Q[GdH\D_\<Kr4UQs79;f0kq^@UdEEu,q*b6HT4hTtn3f?,;jY@n[K>RTo^8l8eL]DPO50K?S.TC:[,pWmPpM&A
%H8_p#$3ta&3)mK^rb412oPjdt=m#(=q3u;fZRF#,!g8e@H.Rg=UYan1eAm:oPIR`*@EZ.sYYo:WYM4Vr\k:SrhAik</2quubb?)`
%c#GKYin4MrgE?MK4*K(3aR!a=fBnQ]QpI<lD"+;_4k$<BPP1Q`RjJ`R2gct<%A.?`P4d7i@4'AdqqF<+IU`o7B+GY]$Yu1G(bW_d
%$km'e=jGFp)>.&>\K"iM1Q*BEL=_.L(A.$#:o-(,[dP[MI8V%[\o[Q8,$hh6An"pcq3]Ub@t1!FE1K$HnS_qhAoPV*r7_jBe*slc
%c88lKS^%r'"@"XrFgZ@A7"$E?X:!GFLt'7_]aB.@(h$=$_1WU:AGNb17(UjU#%b:f3AE"*29R[&=u>aZ26u?BERZSj]@2uE\OM4"
%dl?-d*+^;26t@Zj/jgPI&:U*+rKq>Jc.8[IBN=dRdYpk`OQC'!a\BC7D9^#c]#BV&^G/s-f&@5JEUZTi6+>;-*G>22_@;b*WCqYE
%\LN(QZ5s@R.<D8f(*-(@co0RV%k;iT1`Ck)Qq_%CF&hn&'KM_k'$J%("]tU-dTg4M3JX*+>5U*#JdDQ#^1t-#@2+%UAPp@sUQ^#I
%roLopH.D`.I7!U2U"eJFVlG(d-neckhcfY*Pa;,3X51p<8"fVN$J)D6#up#!'K92>)`;<ZP0Z/5Dk'knXdj-(dR:o\S0d!'@<B!W
%I\h@6okmoE>Hd\ae^RRSp/uKW-Vj\Tlu[C1Kcrea1hl^YU2%;EMe_mbC8a^6Pp=!Bp##d/\``J6GC]XX@nuH'maDt"=8OZK\;*;c
%s/k8T-lG%,[<ZPh=DVAcPagIVDPc)0M:[%uC=Or1`Pjg`#\aut()3jH-UWi"q8I#`Zs0q(]g!!\FQ^D0,`pW-L2tX_^"mSek25g*
%c(@jKVl!h0_1<8OmQesC+IVQl3@?IH?O3<Eh@2RPUA6nZ4;lKfOp`q]?Td;#!W:o%/otUlI0JfFJnVDtd>A`^h1CmuJNkA]e"\J@
%BCkkr3l&_5+3g/E`n5*OB!_N^2Z%DoXacndG!MrNRVL+OF7>5U$9&YY@m1;]'54hNoKD#&H=5F(aBJW2DSYnCad'!92m_*8AnsR$
%YlAHRmCAfV#Ff]V!ffYQ"3r0\BV2ngULt$23&oUd$Y.U$dq#LlT(UuRX2W>gec-D[471TKjFL.qUVf490epIhW;ggA&&Wle"9J6F
%71atQ6Pn48NX2Q)Cs?5/^YWdT!dJ;'k^Tk^epb<cBd@:`M.+\7U;['[WBtmPqk<XBm@4g-P5]D&+]/@g"@*%_;VF_HD7E:7U"XcT
%&C/.XKTd;4Uc0]"GYuJ,ZW4@&eX%YtG:SZOhiAIl]17[:'Fnc/9]u^6rS_^UWYRY>p[h)@5OCc:?GB-%[U1'e?/GSll'_P0^]2uh
%NhYA-4*h$9s8;%n=<Z@Nm3!HF0L#h1AM>*b7L?UETZ?)J/>1tCboq_uTmq\A":^-e`nP_hJG>2%PPai/E,mViYJ4t[)inuT*#_=Z
%NZ!.e4^hO<R]@H-P_&NWWBMsQWlZ>F'k*.!EW9,3W857_rh"U:1B\^WK3iZ)>obbs<khc$"'OarQOEkZ%f_qXGFU_t;mR9?)IruF
%=ueY3^Q";@TXf2U3MQ-?"$gN>*s)@>_u)s0N'"#.41t'YFma5J?E8;FZdS6C>^FU$NU_csbEh/<o[<c0GZ#R4>;\\Co"4J>(.c"Y
%oj8;*16B[sr`9Hs+%I*ZprcIiTj=F!4c:rkJcW!l2#SqYim/:t_Sb`N_ecugA"?pQc,dcXCM,gLL$G>_D`@\cZZ%.n]UJ(hrg=d"
%CjRI"s'%p6\Q;'u(3`k71ta2JT?s)+bO;\7e*EDS<ULn-G4W3;S"M+A7_LiGB&"')UHB=PdjWDK@V?@Nl&@CR=`F8??G$,f7'm0S
%nj[#qQj'lj?c8T@r44%"?&m7-O(5-AD[8PNj=J@2F4BW1o7W7j::G[mH$q.ok'X'Gj$/W6<$f*@Qo)Mp%Ku-62e!fPW*cNTBD!&l
%-N)>N\Ppu!P>!`E[8t68oE#BSN90%]%(J]X:9Ii9SI?tq;/Wl!)0Bs2_*&jXS\eX.gHTFS]!WN+I5/c`-f$1?0@'9$b>+lIF`Y6B
%F3mJGk[tb%.)D3RmJ;&VW)Ms?e!i%*]`pk(0,e<jq#PU??O0_lT9\*9?J<t"q9m:=3$u?Ro;!i,h8##>)Er";>!FONr=mt?hS@Fm
%DUaTU5GR""oQrg3=f_9I8+f?bs"!&gPul_XmG:U>$1mahUO?*Ulp[I2UR1I%h><l$Z26S]Kc$N,eU)/kI0@KJ.(<[0g9=.m*Ch>Y
%ldYO;Q0XnW4-`udGbSfHG;]l12!Vb_b4I`3,Q(%)J_]'L71.e[_P#f3m8\K2W12.W$qb07G4hq"k^sGR@jO]GEKjdpJ-PtN"j0(M
%lK>6::eXk'LmM!-1gUFO9PuKb&e=a_fROuc#5o#_-#4=VgcB:>6d.>EJKO:^^!tMZm92?,?UO_=IaiUCkl]Kj9[qlNp?:\eHW](3
%goaZr8;U;]]>Xe?CH/^6clg>=2sTC8,Oj3.$V\A[$1m<JrP[,icks7M<*PjB:@:)R(U1GIDah3#kgP?b^=BU=lIU)"Iha2Yo.7sE
%H2GVF=^ep!BJbZe]S0>d:#X]_X6@s)EGnC8;%0g^i@M/;("E"`3VjUN/fD1QW-?&N@,g*gYWXA<Rbi=PY^:I`ck_*40u77KOf6Wj
%Q02tGh5=ba;Yt+VmGJ"2&m6j?a+cs%G4&HE/:q2.)4".H`cJceLUX_8VDF^a;W=#pF\\B<q'4Cap@3-Od#29U;CdB!Cp_L\C0%oY
%4m]!b_-uFF5>/#)l6Oi7QJE@Y>9b?)/2K'hQ!V4fYGnd_/Q)842&gG9gK?_["`6?/-CBla/,LeW[7a"iC!3<K1Q"\nY&8I"]\#d$
%CFhq'nh)$+%VTXuOFbICiRjHq5aog-j,IhWDh:OB)dn\"l`l)BVYt])QH:8q7a"uj\neDmi*kIQ/oI;I1Cu@H3jmbjY?\=?VR&?R
%hQVKF`.jS@a^GO:Dj@'R"bX5Uj*6n"2r*hk+Aak7/h^o1]mU%3d]9"ICfcp`Bh<&[U][S(a/#$gj*G3[0-8fNdQ=K'S!ESOa)L?$
%5L-%ZkiSAVp-,WN[G:nmpX+W)#S1_ig\)jQTYI.>\!CrVlX6,2Bb+ccb@B1u:>=V),p)?mAop+ZKYMSWifj;Z&uZb;gcff!2P\l]
%imBAqq"#+lHdtldqWe30V&E?<]aJBh)YLr.O$2n#=9?AYPthO(k_9ls5hd#AT!2^1BU>u,0<XOW-c"5*fl'M</nbV*hllbf(!:SP
%G#JR.O3Z7:/NUYr*_LpS%S8<ke3s>6GHiP<\,,pWi$`3naSi'(5H:J/@\TLBD&S^IQbh4V[t"n3PPo(B&eU+,itB7\CLfu%b!go^
%L?`lAgT:j#$SAPtPo<rZQ9si29)$1gHhg]a;SdV9i`<:'THDni"rj_(eoPYS>,asHkX%YibSt3)h*6nTXc_>/1p&Zc)1stb^O_^7
%PL\]$B)YMR5G*9=*T]35&:<#LTBGt+mHf:NOSd/?\VrM;]aKg&P/[:F"*JD8?J>(`TO"DEC0MTrSuU;_";8D+.'$M]>1LgMUlEn%
%VjC8_5%n+Co/NrMpWd?>.^Wl5C4j]5oI_/Zg:k'#L7/fj->%]@^RukWGaGea><IV*(\+5p3,o6HOqFgXR>EXm:V+H3MBi]he?jS*
%W>t".5g+7GRN]8Jh!YZR'+:5%EB!:-Nj2\lHcXTO3oHU]>K92e10F*(<YpFoQh[,oiB0X/PrRl]"f_aT-YI"+/rQmQH`nbL$9n:-
%AU\V8p;:c$_Jq4=?ce-/1>7A@;MrEGDDWu6)^F`Bs0BIeBCuaZ`N?J*P8`e7,>%jHIC'H8?k_6hmt`7ZZ!75kC@"FGj/?]q=Y$>Z
%\\"Kg^_G.M:''aY;F!fG?+8W-cJPF=@@0R(,Zl4,RaR17SBG)U*,7tk]abZ:Ef%1^4YOsd8hl9h8t@TJ<>hq3E>bl4f4lZ>XB`G-
%Gr,CI;9%.c#qoI')b5V\<9hfLJsp7=_XMR+TPS;c$b;fLaPtT-$n`0sj<36bhWe-V(`VTeXd[OiO5(r-]umj@6<EiSZ]B1@dW;DL
%?[4EW/^%s2DK[E?fr;>Jj^n0:5GOQt7_]FT.L[2Fb7*V`o2KY!20s\T:kRCR1j3EAFdBqnD;0`f(M`?4.(<D3BrT%<WnlniDP^>A
%/5U4SrKL23);=6ZWFho#XG2r0qlMi]Z*[gra;4J.[^Q?9"GCQ4B4K56\o[>hUXaRLn#o^I00FIIm4>EDFgmg;b9sDrcV(__k3m6<
%/,A%-s37lEs3C2hS#n%k]r0'8chCeLFU(oLg>jo>3TbU2*2cm9?9DA0m]N[>bs,H;?0Lq3H8#%+9XD0*^=>*CT(gi4T"Qb[Xa8Co
%7fDk@C,)?qIr]G0EpWs&.#Xq4Abg>H?i9n7h>=^l:h[;\4^`:0o[+?PcCe//m_2p*hRNRqVC<QJc]:PUG#sF=o'Pa=T*klCq7#Bs
%[G*9_=^+$>I9BeBjdV<g$ZgsKr)W2%VBL8N^)cVMMT9)\an<YWj8JQ=qItH><.8@,ML<$;XKqDX[FM2Lhl207dCkOC-XYWtf=`9F
%mFq99ou5kdh890NSX*Htqat]*dtHWA+&t8#iq<5hWHYkX>*sC"4^*?CnEnWW`r.imNG.hNakQ!&:04IGar11YJ$aK+5#kN;B;m)e
%ot0+IlX-:9ef/[+mk8i+I3'*FqtGO^!Y<j_StESJNPG&Xb?CT>^#+50puTY]Cjph<QZB'Llk[1_D>*10RDhNoMpH`gJTC=1,i?.-
%D7RBc;un>PQ]L;G(S^SWgheM\5*Y6]2RZ]U]\?Zs"^\5YDL_6G4HUTMYE)`Aeik\WUH;grgaB3a5j=.*n.)bcPQ/pXh*P"&=[.8k
%05:N9>:Vf%bFP!=V98):d]H"]]/Ye25CB;)W!Q/X*8TKFkT>kWPZIHaX7%rRW:h/<S);_/qubg\$%D>*HLbTfJJXrM4OsVJHb?pf
%qu5k2EALoUN46,GbV[[]rHZ&/0?FjZr8TqV'mToq\(6Im7.+O6Hg:DKrU8:R61OiIipkHT+.JP<rO_Cpd@8agc\dKR$4!KZIUVtg
%ok!*4]-m^aq;oL7kZ%Ghq>T-t5tiRN]I@RnHBsL*2"KI8L1qa``T-pA)Nb`RXZUk#jNbn0`?cKAVV+(BO5@$dn"5rt]%tgohX\j6
%:Ph_qW-<[Ji5:7=lg=3-0K%=XgS?d(;U!+R@%*?NNsG9Q@Y:dEcc%[;c^%L2"$Q18g1r2DrS*$YkP`5BC(>74,/)t7qsH%h*M?.(
%OfoRU8N#-.UXK(Rc@_*TJ+)F[OgFng(j3Fu::0nC-!lG&85,'7<oNO.,FMbAr)Q.LI??1#J!Ume"Vb$jr?'9#Kq5F502!8)cNAs9
%33&6%C<[9"8Or8YCVA[kI[:K2pWJU^Y!5"Xo6=p\0Fb*.g*pp1bsa><lW#c"Y&h8RY'kc4_sOJnf0XtfF8I?o+0BdkL1mlu%C+/I
%]iXsMF=r$rjU^cq5>1KLM3dTf6)XGuTTHj7o_A7&k@W;/cX>4,piWb;E3"IjCDQWY4YJG<+4$;'!6=i+q1XHfm?=re#MYNlB(5X[
%9XFT:g&)ggUpIVYI`4tSr8m[gpd)Dm4o96FbWq'6W$jHMn'h4jfZM8/$[[lY6bD1?atk`*pH?'2qCl9$nR909do[CA1cS`%OS<oV
%b!-A<C(#<3YBX<^s#%21m$11u%rRpN,%,q*&ZD!T)Z&!?!&cf0m6"GDLTmmu[5Sm3WfM^mYMXng^VB[0a^a5)?OQ`=CTWSBrH/R3
%]7irhMD&9u>:cmoM?ic(@<;"DV:m$(>anr94EpA;Y>:"Lb2@"4TssahBM%VUHb%1W^:l&+pMSgCj:C[-h-aG+jYcu%#tR+(lpO@e
%:YEV_`mYdu"K"b7;G@IPs'/&%\NrCCTDj;-^W'V&;tkNk%>:jaTaIiY,q0UfHi3ACB+pc9U4pV\#V!c7X^eD5aZsSZS1m+G>.jb\
%EK:iLK$2iD2:3TZ)]5NH(5%u(S8h\&TEBkLctLNX1r_57E7(FmV10DXiK3qNJl8K]r07h=RSZp?`mlM)[SBk0a$eQ-P/btPg=RYj
%Hu^B[1G`Ns'/7ZB1K5`t=#)`Y6DR4Pj>#VYr0)kmVqt#]!Rmh^qIGiK?-!ehB_j7!9?iq';bPh8n]2glfXMp]Q,q.QjD&MNdd+0T
%Pr-QYjDfc/2Vo<?f--E5Bjrh]*l9`\bAqofVs3;Z,^nq/TihhC&d>Z'-H4[dM==DQ,Xu3qb,iNSgl9R7&ljocM.fK@AgOpoL^Sok
%W/`'P[#>6>1<LLJEj:X29c/^7RV8bl%(+/?5@>"FkV'o,(g#t:bo_Qus6f030J'R<HcIKe^u9[g);7:^#B*tV8o'BV_),A;>DGHZ
%1%/<fbM`'KC?_sPn8N6`ftI&loBlEfAoCndC\\g5V_B)[g$MV/0lBf_%ID5uXPf(l&CA'lp[<`1pu'WRE(d?]/=-_3g"kg*-)=Ca
%7,\5A'==AnEcZ6ZfIO[\qSTY;=[.iPH`d6*L&M!oF7W7SBg2K2UU1f^F\L#apE0dge-t*(%Xo+82V*)oZdE)\1IW5g;pd["j(`i^
%Ei&VEY96%oh^^nZ55[<RJ:`%>A\7Hkh.uYVp"J9HSSe%CU9=1rbPjP=je)-aBT^%h[(&)u+IC!!(-%bIDn\UmMT;oIqb-V<:Z,,h
%rn(&m\BAf?\i<k3)_/Z\G-mJ>.O(blnb7a.;XsXr_i=M:Iqe#S3HkP-mm@:iH1F\P]il@V\!X["g;D`bHqB&ZJ_$Sj=5`%%N"ZFl
%MC4;mSuNZ7]2-.l"1N?$j7L`SNMZK8a30oYBi:coPr"O$Hmso<dAGTEfR64?J6C\iQt7Zrg".uoX^k\\EUS_spI#O8T/A=l8A^"$
%Cg\hP4H!N^!(sXhV/M,b_W',OGmmRI-?o6NpMtN6f=)fK*f=C5UhuQW^V)6@^Nm0i<kD>l%r.S+'e,Zl/Kn(_m-ErMZZ5gf94,Fr
%]MmO#%DMACYSe8i=C&GKoI5mPo(2P+]5)rALZU+X#T.rV/%g>=s0bmS:bt<]1>fh/aKr_1Y#Bdhe4CkKiT(.AG_Wla3;n5?q9bD.
%_a>YU?h2"Pr/:6SQ]JrPh`X`!G8[_B?e<X!j'0V9EPfLoXu...mO>?$i#e/q#R5u-B)ep0edg1[>DYH;f8lN;Xo'k/*6>OQ(E[N^
%Lj=:s4nqc\J#i8`Gk8GgfA>9iM%@OXa7BBSU#6s?%qsF`T(WB,l0pQt=IA5d"i`OcD'!lQdFua4qfs]k`^Sq]b4/m6Hf<mWjTE`2
%gi,lXf3DG'Zc1Qt&#VHBT@PEuO2o?OMjkb)27?#uW5`^)$$id&45;LE.iru`rhX@GXT[2L"9lC/@(3C=.Z0;bd?>)J*hFH/6T2^u
%[qr&6HMR&p8;b'*i]eM!o6[ma[H1KIcf.+R^qX/iD<Pd[Lu;b*8%W)4HG?at8:!L(3fUk&6^%08lF)S2[5i[0=Q%KNf:+itE*GuG
%,HncQSUpYMaM$3[I.YcM[^ND.qG<j_]6A],CWl0qe5q[&*M'8`^G"8-.Jp56r9t!`d(#";/q!/\dGWT)Y+%KD&C1$N^r)3``Mg+A
%-6L.?;tfW%N#,h@]Y'fZ0Ae\1#I*e_]t8RR[([68%uQ_shHXa/*#-=piR;C]\+*kIMpg;&PIWKRY2O6N>C,tNE)9k.I1-q<07S+n
%Xh,D[$G1XX?^C"bK4Ej9]8+HHbNi%&e)Ma9S+8pc><]eN*Nknb%F<1hr+H/0:N!<5GZp)i+-9i^6?(F7ag5Vu(GlQQN.0Ksh&hQO
%q0)O@kVmZahWDosnWo)kI^Q]BBKF0V1hRp/-d+RnelFgT4-,nL8%aDM13hW(349PZ=g$;8I[k?IEO"_\+7GOS,6+``:opno7W9_o
%pqi*gg@EPT"u4@\2WnV-:,a4qhgY^h.D@A"*N]3!0-GIb)th6)HY^g$\VgF:J%rD]C?+^1fPU9*INqq[ePF0OlJCs?pQ#!oEW>?q
%>HjMTY=nK5T9dB-T1aV"+DXI/6/5fA.kg<+Nf,9/^3F\/PMZ?fWW"Rh9"BR6g2YV3g&&/Qi9oAD$MiuLdF-'1g+?BA$P)U\h(Kf*
%\[N(d55Mqfom=GGC!6)nh<Jo"XZr>2BpN*iE^(9K%dr.FM9OH9GhfT"C2)?L/!FfKq0@p`4M+PG.!u'QEGZZ$K;ISEJV_d6C;&S/
%@Ip-7_nD8\qmP>a1tS;'9lOI<?nCtYZ*eN^]58+W*P?fH[^Q%.K?$CGNL"X(`#-nug&:pAFmm682pWOpp?lS1<Vq9F;<IJBBpuBq
%<tLs>[VZ3?f@m`!50!dT+=u;0&4([PP;/A+E9gNg_2$iqiPc%&ZY"X`i`3*_CPE4r'+\4"4;e$fZ]i<G/!JcfFt,&.NR'eQq0hn8
%rOmFq5&V-r*nKMko!e%%WR,>7VB"l_d%C[&J`-+"NMXt?(GAgUPRkfAmk9tbg$sH(\Zg;4E:r$LC]ju9ro6o8ags^g&]O-0A+#j9
%C@"+al?q8P_jW6mfY3?%Xs$MC>o;pW.'5N.6XY<-W-%@a!eWK,%<`(=BTW*#o^QX'NU&cuJ"Qj>Gp'kjj0,l$Td)ZoLR$<cG-_aO
%IXZF;<8;o4?^g;*?t\=b-Yr/H7k[_3m2a#MM;L`,JH`T6B;5J,IC?SqR"$f9)JjP7$^8f,U"-#e?J4b:'tjA82k0EPUG$:ZfJ("/
%hSMcl!bh)_L[ij[Qe2%cj+EJ(Ykua^(g+O$Zqkleg7d%c.SJ23#DEsD5b,=`6mi8]04(aHDggK2g\MP5d$tQH`r0rB$])UP?1LeT
%W0;UBJ*gf%^N6u$$1AOWTj<!>@)3*:aI@fQA$&%0Q7Gg7IB1]ar9&!7>jYe8;dNX1\=LS6k9\C0aud#kdeo$*d,m0Am-DuAn:sJA
%s/:"?!_Vn<5$;g\%_c-WeCq7SO'"Q/rJ%1pkH7kHb3PVS_Z&I&5JP$jDK39kn%h2rhLm15r6i'@F5_AI?tXa"'3uP1CZRXQH#=U]
%+D`]22il\=(,'BGE:;VLc-!N_g[!*SpT-M>Q8Hc4H2?ehYe+f'!=Xs".H!3kEJ$88"@bS%p]K=Am8rg)9ucgPp\t'<]g4#LpBKpp
%$:-ppL$mHd3?Nc3c#5Mk^OP-H.rNsFpP[A\k=^&k\ue`!$B7ZA4JpC&^$T$9lK<E)3l8'PO)f-GLYKL@6g7f']RG)2HY0\-CubG@
%d!)o_D64;IKu!uKQKl<WX05$Gd^QEmM3@#@BCd3^JU/<<>IsoN]V<?7F7oq6MYH_]j*R=YIfDk:ETs]i?V4*ms13.N*9fVNb?l@Y
%j,)3Z@G\L)=tVc@?DZT9^Y]OS],++o@&qo"3WsEo[O^guH4Sli0"uT0j[V%/rH^P6RYhBbH*D--GJKAh?LjGDG4&r/NdX9N^7IJ<
%*VR6!QIbIo#O)mbTCbPk)\Y0s_J[&qGT+AN$X6gWK7hL>7gF`l`=m6p5%McE,A-:D]Q#HcV:i.Gm(hlk4NcG=rNuEr<7kLB/ALN\
%g?EFJn,HeS?Eq(=3@d:p03.,6],>I74PnqR;ju3H+*<"IKR6^q&1ls^A(G1K/=7X8mRMQlmFbC:3%3/Dk%ep'mOo>KXhm``;%F_L
%T<51IC:@bfa:g7Nqh'N);@K9NUE9(#m<.rlKQT2B[H6D)ANFsdK0,OMRXB#\HgUA_s2g<,B6I[BA7!$c>2ENZZ@32Xnn+'5-$mCF
%r4.hUHh-4UoA\0pBFiV\ag8)[LRi?o0OlsY6iEB<3j\SubkY`4No,9`lmXn^:VgGRpp!S0MGpPQom@jXC=Rg?>?_/oIBub=A+L7;
%^YW0C5/27,fJohL*Tk-8EEo.WU,5r;b<pp&ND\+rpHG1UMT>*;O!rC41@_Ius*B2ujb'[$^@Sc%io>Y6&HOF3\A)/eh#85Y4ED$"
%GN&?il#>VKnh;ul5R3eGTrgF?d'o!ue'`Y,6P!(QNX+eC>D;d3h@c-5lkI4a5MSgNI4(n"q0D)hbCg"t@/DhV`\1!Z\)p</RW7*c
%&_+G)q;V!9GD&,%UORKoHF-MDZ@mH"W<P;"ha?fRU*I.9b)q19CF`a.#DId>GmKOH%0H'r`Cch0Le>eSe0sa4@:a<;bF<Y-g-/o`
%0.1*djotGtCJ/7r0HIb_:rN2[i10@92bWnRb+5?X.=^Yipt#23f2)<s`=F'dk,lVqV:/JIE]6++f7h1-_qY(SCnlIFds]`87h;Xb
%MU(%s(2`m,f#C&]+[biZ"9WS&[P6Mua5$]AP#VFW9Cdu4Sk5gU_GLK[=@p#,/02H@\(]B]DS$c$gV:/G,BPU(XlP)QG,$db]0#Ct
%mZ1UX*a.WT[9Mmj\oV,hH9D;d/84^#ebp;SH+2V.a&he#hak6_rNXnGUBWDJG$&:lG<:=5)jQG0]qZWSGdZ=cZpXRm9<a^K\,T[E
%HWISX'jj3/NVI[t$7gWqVm*q7,<Z[E6+9#&p%(XZq66iactaTh*Z'jjnRX8P<]AhrgB/<p\C>"(Pe<W]Wa@@Ro.RmH;]rdTBF4YT
%_Hm/B_ps"EDVs*\8C"ZTQ!`*7od^Uj?I28PH%C4$\J"WASgPC5Hi+"g#)V.(=283e0=oS@L-=bORkO<79SU!f+J7E1jdXG[HZ8Kq
%TiBe>Tsl/aY$s%FYnqd"ZONZq82@AYcap,5IrG`uOK3Ju>lQY'kuSL<+F7^gHF_p.UK4O!q2+rIC$!]b4eR8Dd%`nK<I4FM;HRgC
%d)kJ-oOqY-hk',")YdB\OR%E'c[i/caqiD\e=\2a$&a+&ougKMF!1c%`ri[KV-Lcp"')+$SSi7CEfGtApC#mIWH:1/Z'7rU#1ZXW
%n91j'Qi*&`eBE5&T\ofNh*+RL<:AoQXY]n+5^pA.+mFZBX5/*bP"Vm]8HPH.(EL2k8&&Wn\C-Q:Km/Jb,@W9KA69$"rqaUCBaoLr
%?(bkQM#m7)')K_79VS%45*oJU6Y[/O@Voja\s,LXf;m(93&,jR<tKglgbFQ-Y_CB49C'J"l^du:`l2^lee^Oh;nlT$/ptk+6L1SA
%KYb&:Un1C&:B[2`dZ4l5#L0#EV;B9KNS^B?X@M2(a<Xk+>2Oo0-3>!MYm?dgp77HVIDGft&T5bY<dtWk-f\f$;Plt?q6u>EN'I65
%>?3Dp\rV1mrhOO$"NVd"kM0`,)^"+VO4*K<^>RPsTn<`F0,XDn$e9.lW7!>#IRW)O=1'Z(p.)1Q`L*NjIbs>&JtJJ)hQB>B]g$6q
%[VN\8qJlJNB+)"00Qs_IR3pKFNtDFsBVg+LNAtYm;MsE@B'L=H]AQhN\/IBur`u5FfT0ujl`16Q_di#-4@:2ORDVgsi2sco>+]"B
%EDrM)@JYmIpqJT.0coE>@kp&qd.5S6s"dHQF6l2qgnIUcei)e2l8RHd#i/MH6YNSGIch92^PO%'_hB/k7saB/7.5WC724s83Z!2@
%..]re0]o.NNLSR^r[OrlbNd.C&+eQG30`cp%a=rse2m2M+;oWT#J[Y[qD+_YSA==Qb<3WPI/KR5!'`LF+i.D*RR51d=7X"Z^V^tX
%0Ca\&*2&nI1C#<=CLU_>Q\!Ja[cLKC+G?:(jtDc8=(.psqWC(VB$W"!4r>,A\/W3r\Q%$ucfIMeoR_JSE4,13k./D)fX?+YMmtLV
%#RCRM%0Oek?!f6a6.kqcWHXjhj50_.5@JI/614\5MglKMs6N7/bm2[a+66_I"Q880]F;\C0c%kM\f-GJ[q*?C@3JI7GIba/aHqe]
%*e&mY$=+8-8K:R:H,k!"RES<2q?R[Y#n5);pb3,^h5B^7H.:AWH!e'@L!TA-'effAKEnR]ij1aW+j5:1%>C\`/9$#6I-:Ps9csrN
%"E@h`QPV1e"r+SX%>?J,_b`^SAgS.AgI*HN,Y`o9r8o1]4"-=K/";<RKDNfcD`Ef]fT+r%_Z)<FE9I#64MmLBE_/.eK7$RaTAu.Z
%a=see&upNPYt"cYb[S-Xe"*Z$O"pHU:\p*uRo,o/!ph:;=#*/EcN=c5@YShBAO6tIn3A_Qis]THrO`dVf)QJg;D@NaUrUV5E$2sB
%cRGOU8d0A/T'r,F5*28M++`Hd)]7KO'I`T2+(5I8$NMI_6i?XE7$C[8)UWM/QMZLJK=nDK%qUQJD'nUS:WXJq@H8#"W*WpmYK!@]
%_eHRAiE_lI,4GCK"VI]sKIeerRc>'PI34Qe&,uF(90QE"kt&T2^\CHK(,EZ34[g]hpSB-UdKf=Wff^0*n.\/Ognb^@j:lh_d6(?/
%&^h.6J4tNk4)WQ")T&L@W>Grb!UZ\k!H>rm'uJ:%N<l2-ThYW3XqU*7!Gi;m0.u1aj9=[cUo-\8>tpJ._$.[/85"4>0YM:`7YJKA
%+>eD]d1U\aMAL/_aEnCRb\S>/m9j#ZPCl%$oqjs,oR3QL%bNj$iXb$&#c[.b^63CPJ5L&"W02JBaCQdm!]5L#V&Q4BW%OcCI0&DZ
%@GF\DEeTHP$_V(=)*(T7"JOaRT]pQ;H_sAB\Qj]E.?pt[e:>HPEXE)@*;G]@WtQ?Ab(92l&jP:m_K`")#$)`m:9qeZ!-XMnRXfjK
%;`$1C*dXuU)aUQbOX.T`bIQp3G>9f28nG_%dR+LBDn*eL/U\8E=2d&=1gZbmRGqE.]1-Uf5)*i-XZWAHMP^R`gR4eJ+6kl-I/-sq
%Becu5)6Tg0L2DNI8q8s-\r(F"O@hUMhFY[G.74OW>f;R/%5;=Abd`26#3lT8,qufSN^,t[jOtGB`4q[XIo\3_kmLWud&6"[1h;Oo
%%L8"@J-\_HO\jd&$<.>Li0^CYo>6m2TdL:KX.USLL+0pD$4R>"a8qKl0K94n$s&*%2?KcKP!5<A&>=[l>"bO"![qU7CnZk&":>L1
%lGa5BR/opWq5ZbEq!?qBNM+kB8/hIPMWlT?K:-cn]lZ+481.;+8XJZNc]K,kM(tl9>!UggmNI-7%+>iHK$sLQ7D=pr&")f?%3dk=
%+=8']k#r[<\0a4%?"M,l&uLHi)_]fH#t#Y&(rffjJZkcq#n>Kk!#ql`p/HC]0Sb_/j;bQc7Zm2DAX`#_AGI2"UPDl@.DTCh@-n!L
%0To-/JGi3]OhrO=n/io"&6AQIH7U+i(r>srNf-_b<gfVS:r88i#s88;Ga/ig;m6?'n.A&c$+Rk12Nh]F+Q7oF66R[P=jV]7+dZ]/
%K-$7lk:(>($)U)f(dqXQ:_!R\e^2DoEnkUD0XJPk0*E_CoLaqIfGC3@Y?*8pc\4L`_g5[`7L%"eJCP<"/NA;B@30*UK\_6SI7*H_
%T#-W43Ob:U+GSmQdElZPHn]FT=XBF9LniR=OhcLG0@7k.WHNff<-.gG-@hd6_M>8uKpYuhZ+UB+T3;Y2W$4p[7mOqbBJ<jSJ-(\O
%W[ZmlW9:/t>G)XA\rVU::aem81q=qBknqDSSl?8PihE[[2d8X0pO!S`5`[?*fb0c0)FT"i0SC!gfaYb4i(Qp>N['.=iFLlbK&rr6
%J]_jRk6N5jRZo64a8pSp>-9^3a@nT'A]1f`$BRJm=KSEm87LeaQ_N(?d`WNm;2cBC496M8XWJIWa_+)%)o`T2iBj%'0Is]U=t)=]
%(^_,%7a+>,0n',X#&+`J*GIKtAUO8BR4'C)Zug`!#fhoX0*3/K&l_CR4<Pa,/&kBg#oPK%d[:]HpE'N`_Uf.r*=IR0:k1!+JY+"i
%>Qp9u#QY&XiH_S8R);$\J-:a4(ZiS$,Rck!*sZo7$.NZfkT@<.S;2j%X%`hQg)<I/%%(d&R7]f%p*Bk;^;emUC+'L:P(H2m_F63[
%$.0eC\OE,,+:q%h$)FRLm0T1u-.)3tGpaJ^Bk*\;"(41<*iYgThLaF%4ejJ26Coe]bOLe!Bq>hA"miu8-je(_2jFc%>H;>n0i^\l
%+70lg"DC)/oDrX"AjfkH[5s!Q;reMN#(`(Tm\0A`JJaKk2-gk<"0YD'.=m)J3hua8#L*ZZJa]\ka-`T+Ql%&QFiY$h\0I6u&ieZU
%"$co:d_%oU7)YsY>(PPM'__['$0\'#4I"P2q+)Q=lNAG&`FiB(+hAQnKoY2]^'9JR=D43XRdM.,4@9R:Ns?:GYZ3`A/mq.*#UL?3
%i:Ldu(kU\7Zn\Z9(au@4,nq]2)7--XZ?NS:QYIqrBIXSQLEP5Q4_"Nq9ka<+(aocg+tI)t>Sn/9U9k?:[7#p_-lon1SH.EBBRns"
%d&WJ26I_JZm/VjCVa)a$-#lE3<[/6g9H+nq*0k:S4Ja,E<2Q[V>De<">+.dC1t)4G*8e/s9#[1F9Wf*;[qTD4dG*7sX:f)T3^`#>
%$U<-F*>?0<:1hG$]HAHtg^b,6I<81*fQSqL$BL__;F29fjAW(t:^5FIXL)"j0D&_982QRkqFO;LJ.9mK9ri$O3&ukhTNo2I,hB`0
%JNVH:F,1t`JRBQsTYO"b!C/qY(b_$*<Rj%t%9-_IO[(,IZ!@^)d,4?Q*SV*!?f)7!>jJ1"-5MQ\*B8W8lUX6HSRs/6)^6t\";Ekk
%".4,=0bP5a*,Z$m4\qpo$D"&fd4jBGBgf9ag:XI9\O[SN[:%#_W?DX4UL16>Ud0/EiH!E!5f#7CJXQ^B*%DMr#nRgG`bKQg_!*/W
%bQn`)o`,</e95)[lNPr;W:C89n4-D`6d*AD(<=!@e3R/380Ye?\-Bo'U,*SH]#Z#VV9>_/$5f3J@[uc,P`3Ht[0Md!.7.>&LnTP5
%;GIZk<XYE0cEuk7d&JPTa#fQ:m=6)fCQr!W0arqL+A?f8B%de:Pd5nX%\ZruNfJZ?]tnt2d@2o9#%J8a+',SS0I_-`6Z]kOX5b%m
%+`a0]*#]H&jpnp]85dQth+YF]C+RRhi`Ufll4$j1B`YRi?`V94;6/'#=&36m!^[2![F8ML_0TT.>u!amjm`q=$+"j'JK9>IXl:N]
%gBu@jd-[(6%9:9(ZoPq(Oja!@njogV$ru!;(@V=ZN(We1+-fYt/qMH=\/UnX:K]E4#L?"Lj(3g9$^[?"geh*G$<Mui.][#m%;#m9
%E*1#nH]Z*'Vt%J,7mJN=9qWc`g>[Yq#[DuVXr.d-.@,'70VOEu)1B`.RqTgnUEq$+4DFX=d(m`&CUSSF8_')L*9B<X6*+E[k]SR'
%@Id,8DNf@%+/ANN$)CSS'TCs)5Mf($XWW6O?*5.X%Fq^_3Bb5M-q/X%Gp"CF#il4oC7)&C\kZY-<DZhmKQJe5n)F(M&`e6Z2bF'3
%."^Xg0`gOQ+IVXo6Zp83piLc5jVmU4%C?k3Y!)k4W#r$<Kg6L[=pjk$)Ob`r=.:6lfTSA(jG:T1#I!&=)U6,abo4o,)')lg$XD`)
%q=.Y02,mE-J*@f:RD*Dp"ctdY8o;1^i6G9g\2l6Adt6ouLq>u0,633sFbL8\0[9rp,1;mbn?g+_LX-#NL?ku\R$%p27:#)H*$nEc
%k)p<G6a\I(7S<GPJ1,i2MoOWV+850#b276+LDI7eL'e2UV)$$3!#jK,26+*M1#2?mP$tK^hjVa.0cj?t)^E?B7M$OE+\`S,eo@qi
%?=4rehjcTXH'L+gJUsTj:t)%e%*bn5[(ZMkgb9"c=qsK[f\rD\PjjdmEeO!'<s*Rj5(rJeS;*+81bTVC@=R3d#]S[ep]-@m\R(0!
%i;pOA7ZcZ?5<r58-D<kJIt6+leQ]A;q^kVWpSWO]gi#JQglHMIUDbWMa2OFAE#eT3U?RUZ$2Y;l*p6@uX?sisiP^9RI#H(GRBQ=3
%/+*on*enF3MZ`tZrHkLa72>S"-koAPX=E^8J`=K&JgN4$i0fPA&<I'a<cR&95u$9u2"1o<..@Itmg*>a"s*I@PVU(58`1,Di<kc.
%T"!e"$N,H5bS-t!5-?_cZ>bj)O;TR/q?--CW.7)t(W.M!<PT+fNsi'h-K#,:i0o<t*:RJ&TPJ^#(%<H#[.p,@5JTWW,Of]g%r:d5
%DZVErp]8>3P\,kN(-CH`jN*5RM2'deOp$*F8[OZZ#8"DYk"*BXquHD;<sK#lJ0HY7n<D:uL`\YF)``d#IY:<.m3TSsOEa!"J0s8O
%!EI(!gnV4.,iT&j#W-:9^lO?dX/67!!JCWB.2n_OeL7UoKI0UZ:3*k(#u69L3Wgt3TI`>U_)45?'5MAsA)t.Gf<Kcie^g4[25,c%
%-fdt3X6Bp"ZnZUViTr)I4-->[4dCn<VP339\11"JrAK]4&;C=NSuY.s_UmttQV9@iKR>Su`MjOoa,1@j@cO8(#,H<[&2*QR6dMR:
%&MFm#H5JR+iS_1))(1#4'0o(^*i:+Q,cX08:Uhju!_WaHm@0bL!Gr<U?n0%`:n&ab!;D*:5UW5c(\a1"<`[CCOYQo(3dUsbNesGg
%\:lD>lNUl4!Q9D71k>nk[%RS`.U\'=1=QtaP-SN[>;BfA1fFefieC\[s54S@qhP*F*$3-=\^7-`@B8JsaRJ!:Q4BUG51=!%#L&6-
%\nU+q"f/@K3soo^VjW9K5o1iR5e8oq$Zi#ea!`B/'n3YBW`[_P#0Ks(R'1O1_&KoVJS"t-R%;AW+>%nJ8<trDM#M_!q[+uQU?>+s
%$N*KI0ZFVi]c%rMT'to8W8PT,4TW`JAQn`9)ctnLSH0sm<G2_s(:cGlUU;f3MV);lpjt%Sf*+#iC0FDi#,1'[+ADrW&6Z"VP196N
%,T7qU1IDEh?^u`2ar%Xg2Ul?8X%p(O4=>uaNg,4fW)+<]]0%><.)ScE//aUd9M:%BSZ&KIRAr`q>NEKCTZ&+n4Ilq(6`+"^jX1)F
%Ju-NJjBE$=8$AG;@]!(:Xf+9XEDe(p!nc.iDKAg,BTag<d$@Jed2-6r(+O/YYu4:+>>6Y''jb9,`$.KKC(SK6K!^dD`Kr\D!@F@b
%.^>^r*Q(Gr<(N+_A3nQBC#-4K,`au(l@hh2LS3(.L:p1<e3J_jA]EN6U[<paDk/ZF>]Yp??$1aXWD+A?:hjGG(9=X3#X+:d%FW2c
%<'&BD.%,"l_kGQ[\Aj*LXb;Og[84qn;om#'_&2IN.`u;%i(<1He>4cgk0V_7M*+0>%gR[=$`IS>]>ms?iPcY&<uS@,-::CF[q>i9
%p(<.:/LgW8Te`U"U-tH[WmT9&"l$+o5tT*rEg1WNh+jq=VY_PBZk,lQC5\AY"bG`<.L)VMn5YWJ*GhHME1An+.sS#I;74'6&/.MM
%7meTtkNANglNSJ3$VKaT6WNe"\=kfeI[Eqf;,`P(=Us:U(a?g.[79<EOHX_;O[H'_bS5<0W`1p!4MA]qVJ\'nb[*^ul`06>lm-\b
%K0[;0Yfg&6>2Y*(,=5Z@+am9bKjC\A!K5Pr$Gg[bEi8CFJ.1JW)5AC?';Z6H4B3*ZBq::g$k!8n*:c!5lqG9YWJ7:KR>.Kj%F!s+
%Y(q(c/iCHBTFet"+[W$n=D0OPbJ6i'KQ8j.FJFCR"<^^E:&C?M[OIHO1WJ0jNBKY,dL!:GA*@2!.!-KCV1h+0cij4%2TW*n;dVo8
%_b`;=8VIkCU_?$*\7d*<V,W/(<%"TPh:RZorn0"F3M%E,o3AUd.m\kHqEjb[TMiTNF2^sCk\IVRhcD5l.Nt>6<9aM6O1-['<)3[U
%9!QHF-4j5^LaMl\:`tTk5L-+B-6Y5XD-VIr`=*(>$'g&968+`6ALT]62>#tW9/#FuE.#"HEK-E[P]F&Uib]Ig"rWRrO_TZ_-ZhGB
%dB$H7j6OrMoLsj?P2Xjmea5[nC62KH"QZT$Np^YTg8Q\86WH!*Jlj/>ejKgd4Iuk%=<Yqo0LC2b2nP/(PfUYMQ4aR#Uk4E<%UQ.[
%9pY1CA"&ULJHaV=l&;PHNDUlJJs(7R<).^7A'_YFP<mS3AhR\0\+T:&Wn(B:O12M""*V\=oup@T90*Z#ihnVt]4t$c'_l/$-$2*j
%0sOK:m@"X33OqhX0;1O"R<[9Y:brQD==^?I)Q9jb?"c3!BYr-$!#`jSl:<F6"BJb3RPKK?QY=LT(o$U56]uk2W(-R!9>s77;lt'F
%f^1gY.1g:s9dGYqCiY#m"1j0i?fiCC<O!ZGqQ@DDV9YQtK=WAZNpd-rS;SMo]tSK\6b6@?YUIs:l8YB8cj8^m4`GOsLIp,8Ur+N4
%$q70>n5KV'+V-r*45cXnV>/'nV>F1X!Pnc:+Hc"H@DN*\.?LHF;<b4fasi9&Vh%M^ITo`Y3a'VT;B1tAd(u/SEsU&[i2Bf`Kigm$
%cCmZ,"4=K.fU1@:J=7/]i_YYY]fZZ!E6?gQ,kab<eP:;)7&DTif\GWb\<8'K$k+:im+l`q+YX[h-9:^?9o@tGWeA)92PK%Kf+LX7
%h,EH96\Pfq0e4Be'o4?QCq7n8/JiL8c>"^\H([I;iIr-YCX1_&(DQQVPVPfE@=)a;>as(SLrqr)?N\j,;GKS6b,:-*A.kR;5'o0N
%LbUikRaK<ugk/RnB\[u8EGj5jKCn\T18&NPOOVm+-">$oWfBJ/iJ'^-bX5G<Ol7N9=Qo;k"4Hn:3mqaOT5o3L3n,'17j"k$g]XD$
%5Hao?l)RfT<UWW,JTQ<M.\+H5$`!iUS#[`53f?S2!kh)XA3;R6npI$D`ir!*gEHp$F9i^U4db7Hq[PsR\P-MlcikeQ.".fB9U&>*
%ka%)44Z/J'ClXN[+:8Ru6X^,cT*LP&VufG^W=&Z';%FC,&;\J&iq$PJRm#+#Y2Xb7BO%KR6eu0^T`rktG.7rY%IqA!n;M(HqA;G9
%oaHG1\8OWfT5$H,Pn1ntZXb602GEk&#r.=CoR:JH2J%PjCLS7tKY\?dE4kY66&h!^3.*4?kTX!cV5pahV1;Mk6mo-"cjZeiK0&P`
%>.*T;P&L\X3hBA$:3dk:V-&<2U8'?Z@6':EGFQs(h0:U.d2E`2d4q+9>QsYCTKm6:5S.4)1+o,-<0U#!ai@kJ5Su>A@q((8m/82+
%F)N(SA"bgN*p79EQR^/i6nZ#iM7Ltk<-f8R"gM>uZUtRW7?LJO+AF;9]<TnJcF&X'-C]N.%s.9`,\*3B<?+nS&hQr.aX>Ot5IFMO
%Y)FL&4;4_%d3hsG:PH%Zo^HII3Dl^.VX[J08D3KsSqh'LOHY;4!YLZR^dof2"[P+Qdnh`l,R.q])g[J2#puIq+>!oHA%3\l[i.C_
%PeQkZ3EI>1Vf\cb[?3i]4>\E48J*F'+?G]RTK"<eJqDm^_ATq*8K_BO8p25g336.:Pq)mth)/>&3la]@*(;?in3oc+U"U:h`6bZ%
%;UNH7[@;mfoE7qU(j`3D)*pIL>!6E3@nE>&>bt[Bll^q[5)2Cfgdsf1&m#HmJJuQD8+WS1F2L7;.n%$3ER2kO0Fsqe%kgmc:,bu8
%9dTito'G`mVNgDD)G5FB7DgS6_.::5!?EgaFO`87,6q:]%a9[Cl1dtA>hZb]QR?bi'fmeEVQ\&"e5ERacqqYEMQ]I'C'08qWh)h_
%o#IF5+Ga;pHAk//Tlb_.nk^mk=KW'I8Ecig,$bY2SiK&U$%pl1dN11/.PkCm)rN>Yfl>Yh!c?!,p:`Sp+(.:Q,pImC#.bksJm)AT
%+RmsS(_9'a`8f8Y1W!h(O0Q;V%jaF]:Y?a(C+=a0ToS/m#l:RbfGqqYArF]e&N\#m4fM$k+_5I(ORD@[S..??#!dcoJA?tpA3jH`
%&C;.9`?MH8%lb*E15%98Og-.mlbl=:PYkMB?E!fDUnMr7,i)k6#F,'a(`23OLiD@])#$S$M`@`HJYs2<cjrUA'f.PQ<iq*o5)raY
%!7_N$,SgNW]AC+Lh.S+q6@?$A$a3N5M>3i<9Pb9FS,+I.>;T#6h`.PdEleT^Tj![",6e!mSQ8:l>dD#6,><*6J`;S3kjr74:>kF$
%OB>/p/RB!WIEOQ,1lQ^+Fl56(<#R!:I"Xc"!Kd!e!cX]`PAV6&P8Z:uqEuM%#U6[[@c%`h+_,,^VX(K1*Z578lt.(R=s/eWosLLO
%_COnU:nd6HRY2Vc,pf88a<AHUWt(PX?!M\SM/Z++(e=cQjKMl]?"@e0Pc@hT%jt<kOY<*L_E_J,+=7s^$OW\EXUH_6\nRDk3MBXt
%.1(0h&BgQ5+L(]!dnl`uZ"U7W@(^3r_I9iOBS$OGbSj8a(itZp+6`gb9PQYn8<bI)j/;V\!-t/mQ.9QA3aW_mQ**!Sp@:O$SWhhu
%_?*jS8jNo?Cadkd0t!BF7tRln1K1@5g5U-_(-Gj02V/p#RA>SW#rU#$V(@qJ'=C`_&q\,U-'YlO9ir)_04ACMK['$h<R/e(W3cEK
%27nsY:e_,cUgl(lqHP[qeOf>+atM^_!#.JS2@buFL?Jd"5HZR]eUA0!^t-to5FR?obn*Z1>W__2N>*o3m)XhU@Y.)?Tn_jX(Cc/o
%j]UfJH`Ap)B;Y@^Bt9*7&`e]o:>hgF>sZ+3DhY>?$)N*R!hkh[U8JBIVC;Lcbm5T%J2?<Flb6n+p%gAk*!UX]02bmTqYEu+h,)u5
%Zl4[$'!D,S!((ksTN>]6$l5j2$pn6nQV95'Lu<8dM:W_`&9ok`$Va\)2/t]Oleu"6BTPt1$pe1t^/]uuX-h9Y>SMc`,f5b7+X,F]
%8kj]5(EpB.)joe#G68S0,TofndK$m&7cpDAMt#*oLQZNo&VQ`rdp;55=07Mr\&`OGd7^?Y*eChrUFbZq$sO&Wi,b%B1c2'F)JV8N
%@ZrGL\r)LRdHNGgAKh_\?3sS5khlrDUn/K/9VDQE`EK9UK&317$kj/tL''0[OG1[lVLq"Zn3H3O7+nRq"]CfI?bIP8ej1Ya3Sp2K
%LcUBg+?e4#XVN`?$<NqTBTTYqND[]1\:tW7iKKM1:b>mY&65&s@OMscW',rj.c7@cI&-2rq^bL>H?9T5Tq80#MU>?9"G1TLVa,e_
%U"3@9Ta\/Vl?aG$dh[M]d+%Ice0Vj1#'G':"J*i=,uV,:e(Fl0LHF)[8mER:>Q@AI:fh,J/9?2^f$.?^d1Dl+(K:[22"T62B`o$N
%:2P>-Y<p`[ik)#Y_A88fp*ECi/%;,SVV3j-d=H%[Pr+&\)D`>tX%WL<5Etsn-s,^W+-1t&0U(tG11d`k9W1IY#V2a,bZ!sQfQ*ZO
%3m"OQp7riI0.B@gqCbf,r`$lYAtZ%J2/h"Y70j&k:^f-2`97bTdGhR;DV?&?:ha!#\*)adMFN??6%qrjh2pMd:jmKD8<j?U][)7O
%_@:rlB\MZb9sh!nDi!T].GAHs((Ks#LXcs.4;AbK?k#/K<1*tCKus,@>tB\L#k_18/Y3bWY(koQ`^)Qe8d\R8.#CVX%AcQ5ea5Z,
%R6lJA^br/9cNA;<n7!R8\?Ao'Jn.3nO_i)]$sAUaqu^R/>tPM]N02>2>mV3&LT,kip$ulB\o]T!WK8F;R,JQ)_N%'OEqpDL`=e#a
%Ek4E+&mZuCn^7l_9>[5d%i>#P,UHhcXMo:F,IC8Kik"Qs%5f4VlYhD4^2]Ub5_2OII>reeh3h)<X&feP5gZnH>`HeP'NV7MZ,+g6
%/YU4$j-:TK=N684,sAjXf"\c>N9)iiH/Y/_bpa"*Lcdc)?D4rZB,HIRYV\o2=rf$sW>Z4f]-pTdqD?[J5ZKDb>.N<@Pka82]AT4S
%icRYM8R$SI)M^u3U815O'QGjKjG?i'@1JB^iIlLdAnYLZZE)(KKh=&OBI"^i7Q/cC-k0bMV,6,".uKWZk[u:GhcN`nj:7MNNet&)
%Te71EgpU%FY1W<*jRQ49&t6h8-,d9j9t1n@cfVIO_?M<dE_[<<Q;U)2O;i8][(O=B?Y-oN6C18RBSd]'eq@O,\`^m9'N,U[nO\dm
%Vd>ar'S1P^04e&N4N@ci:d`>ED0tL:/BYk'@sC=I]7U,!3?-_*j[aLX0d\u[;E=gR?D'UFGj)jGMIDg]8;XoO:<dH#G?"C1cFp2l
%U1("3O%dD$H=3Ctl>Xk!U;Jni\]iH5_o(XPkTn:sLD_\#3<hll#\N5hQqCn9oT2LXK]lqr(q*F!'4P1"Hnt#\.P/P8=#Y04\?mgr
%NO('YTO^>]#JO0S72ce'T63o7;Kg2FEY<S1%R]K[+?Bs.R/iTrp.TV/`gO*&k*gL-giYG(Wc/T@<E1u/oG<bcE:e:H(o59Ro@nFU
%gA@0()jlg5DH_TI';#t9c;'KL'T/GJ"ifUpMj3#UI;-fYjj$q`)#;Ol0bpO=5uio,F%,24!AdkB1a'jAF5l;#itGm5R#RS9;Bg^.
%F>VBLUfM/E1XT/J:MCGsC!q(9F`UK#81ZMc.aWt'RZC?2$D.B^3)iD*_'g6;#dm5j/%We>RL@!8<1^RRQIAZ7Dj(biZnZT+/Y^>t
%7\S9EVUR_rcr3C26PF3JA)t/;.<[8ljIXo(WM*3.58k3LAHgVi/6$"DaZidDLF*Q!'S7H:dNC%02+^Z1d)'Lqgc$?GKVtn)QB0G(
%\S\2uM9UZP6VMVY2n$i"b,=R#4q(V:ar,_/-_k42cMmkiAKjs8V+EpS%^-u68YA!36iF7\3%0e0giH;ac>F1[qm#jZ.I$<b4*.35
%^-3YK*Hf8RkYE#"6Zlbi<iZcfID]e':o6V[\02p[F%mQqDA`TRR1Re'f:6()K/Z\s[7J8Fm_uoRTKC#AIf'sIFLnIKC1p4?OW5_)
%*W]!Wl8_]]P1@oZ<ts,dK*=-H""$a@Sj)Zb0R^i*3CGFBrkqi3Gn6UH01B*n-?,G`_d[=4.9I%->p2r[d.>U-f%:<Cni6K&;9[+-
%-Iu^P9nG.+dWfdb^",d.\KESAp6.&!%#2,R$r!HO$Ac&ZS!XE>K/QWhEs%\NiV9icW3X/&2Aq,1)0EQ,HJ&p^l8@!d5>&iW5(Q\D
%32+b;#,Gt0]qqNuVsa"&O@+;.4><UVN\:(2Qq'7]$)@rcK%eU8#R!\`LQd<(!UnPm?2]Fj4CpUZ-;?]IJ.,L:OB>4QAaZ7imN3hg
%<NkFLkg_2XM"'GYk].WT`J3IrKGXCUg6eNITJ3XJ!GTu]%kLfloh@%rM2TbsW:0$";W;J\-lK`+(`C&9VZ\R[\8KBm'#XugDB"n\
%:i^0j$EC*d\YH=Y,D7hmas4hK?s9144@3CnpkX\t\)T"@b=YVBG\H3l87.UpYoH*Y/(_1u`QAuYKSc!u%\]`D`Z_^2hKX]&;!\gd
%2]9&"Lau$.Oj.;_\\]VE@Al=N\iYtG,^i89Ho./#&=gC"PF_D6j->h78""3AZp7ed6Jm$P\tQ;\&h'ppXY6:7#a:jFY.j7SP2lGZ
%.<Mp[nQao#%>_U#0VDK\/iHg.bW"fG25n-j>q?bGWk7_Tg3n),MQ+!#Tanm2Le7/-4`bK!Ap,IGK$T1H3M_u1dgbu($-OheigY%a
%E=*GA9Ot9m$&\lejV4RWYu>mR%a$$"23<Ic(OT&<Scuo>,OJUm^N$%A<Si79YW)u!qNQcT:obnoPr!_s#A[J<hB6h41&illIs\o@
%nlUp!S;13p1bHp!eH3k^WW@O>#bslpP:2G:F?R;5L2Vuk1s$56i5ZHJ#>`._<C?oP$0YN*o+3]RrdC&#>()G2gfMb1A($`rWDDq=
%eTMhYRgB:$[XhbXC;e8<pQ7_A40=^!8QQG_j%&R":dO$64`OBWcZ<O688&K!(^ossna0t2,-?!.4E#8go>Il_JkY?i^nFcf;ID^%
%/q&3o^a%GF).?7f7jOI_TDm<PFbWpd:H\-?V&>r>%.$"PmpWg+JI`7q*'`b9WCkgkVn7lfV3Sok6\[:j%ifiZ.jcB_=KbEaOoa.!
%3r%P4UMl\oH9fa'!IIi0V\l\#o5[&n?.3.m)"I,Gr;$_GTQn>.+/`i`"7`V=,Vd[V01rCUoe[4)$=2bImn&2B-/u=PDSCC*J9W@G
%:D6[_nTbDIeS1[UDa--LXn-qf]GI;0Ju-7b3M<^8%Xn[A#3o)UFfpC9fQd6R2b"u2r>l&WN#Has%M@nc#.,_gESDH7;Alm&QrT-I
%0@f0]1_APRdZ=<74TUh5ck@&g?(Dgg=%$<6:Nr.maUPm+TRJ>b0l!8SGI8r-f)'7V5aPD84Jto4^+]OTFIBia*!=AB&7<64MI&mK
%'G(?LPTU']4^YmOLCZ6#1[593`u5oL9uC@_Tp+rN%Du!BBUF`qQ?F=%%;cdXm.TXP;+*Yc3A&tC<^M#Kc2:[#WAYa&`WW"j60r'R
%6+NKe)T%m#A(&>S0T_96]GSbuF#]E/QS2io)Y[f+(XEu_i[I&l_d%o01lhlT?o\Cd)mhp`a7LDV90*S&8III.dUPU8,jlt'nmm8'
%5/)ea,S96.>6t9_)lRMa"NKtD\XTqF@HsZDRSH5S+$S\=&"$PF0M]Wg#0B[r`0r@\RUmd4R?aC3E$L3n;TfC9[8b!aYE35WBn2"p
%HB&(<-I=9P+SKhbTMS6i%>DV#aF7ka"OR@Fbd>pEduQ706cG-D!AlK:=?KQqpgG.$CkI!#gSlM?XM3*X#@%d=.QRl*[ta=k1i8lo
%br`DE1A14t.%'7(*]7EnL]e>T:$'a(7=c3X8E,a*iA_5Z<ToL:9h'VciG.ln"]6&gc)\<MXgO0o_l1PCc6GU=Q!X/5WB^Cp.IQN"
%RdiEo]suS!JTRY]WXgN2:jkJ160]E!nJ+O]leB#S$M8t0SA#@H(Hu?j+31R-kTWQ'*mO5e-ScO=n)m$;O+c0qI?P5;i>b<02tVck
%f@,/%&mg1$kb]Lo"Qh`S-=\T_``DgZTV2`k5[Z()q."q(@TcO$T)V,RTPlIhofb1+``2NQd4_A1KY@/0%MaX>-ra20VGPtn<`2eS
%<)m9uZl4\aOTKkho0uJi?Ma/qGre2B&AJmq!ZR%#@M-c`%:'mI,V/7"Ek2s%DI)QYS7s*OiC"6*PA2hd_MKC67\<rEjB-NdR4HYF
%;^4grA/\h66kE:Re)Ui``uEqdRBNf5Ece`1DI;?jOL_W]>iA(!o1cVDNlU2+Qc(gBdi`^adt[-,S2=C\?]`2F$8cU-/n^OjS@$"l
%lS;kZ_9(rbcDc\86<9I8*2\B+T`K4'WhHWRJ;nJd,)BRK=L<!cEic#+j#\3)K+gO?OnB/Y!dTg/m5-a]$0mrd>'!i1VWNnc&X9G;
%Os&tFklN4e4>aIIjoQnsl1NHCp];g%+,<O)ltsljV>*SJ\tNdro^jL@iX;7^E`o@<l3j*fUc3<0isV@_Em3'+]"aYbR-U4j+PknM
%Z$:ZPKi#b,51aulbiMP3>L-7te)a<@5\$uND^)4(J$gqJ'(H$EV3?e7Ohg5i2Y#m':)0D[d,dtsc[SLW@"JZK&C<dlMrsSB)Ib=;
%g/*3CP=AKI)!:B9:!9?h)t`5d"FB?8cWo<P8J]2"0Slt7)nN\].-76_)uTVp0QVJrGkaiH7opUubF8c[*:kWe?/FZ-!DC,JdGbJ.
%:55jnRfkT*0XilQApqX0#jRnG,j=YC8VU`X7cMrmOosT(g1%4&P)OEK5ruSG:nVsUliS#7X:57r'I'>;e;t`X>`A,h,4-Cs9@CPd
%8K'&&ND;OjZjjOZXE37FVe[Y?IJhm_+`7E^60k`h_t6-e2LTriK)9Q,K;1A,>#q<R8(G3jp'pX1Wb<'.A82d>B3rSN"6meAEZ45C
%YGBPc65tg/,?5%[1$2))BgDWbQ:5r`%0QhhF4+ZhT!/KTX>H4d9&ZW#i>8a$F*Rt^>"+OhQ)hs/W39tS,C5WCX5ZudI.<=\)s"!+
%lb3[)WqV.%p<7[*!?l2:]-c";Ad^*<lW?OXDELF2#n[dSnQf;DdEBP:LUdeO=&V+BpueL/R7(:2.98*>GXLj"fD%=)l\39O[jfl&
%Y-nefI*e6k)aA:m+Q!KbPmSO#HV<IgH;P0/`V&rnX/An>$;++f.6E,!4lVYT20JOa&2^Ta=RhqiFZP4Q7sO1)"+EQE1!qB,YqDQq
%R;*A+>2l>:0s+9lM`+dDEef25ej.$-+=DVl^iKQ%_h%OW>l#9KM1`MKii4X=&P1gXFk,eM\uRJ(ZU=PKV@S_01)^B,UjBC2%Afu_
%M2f5P%^?C[QW\3j;'-D1``+HA\IN-uOJZ"MI";s/V`W+D8naoTS01bcMsjP(9(lhD$c,(?UoIAWnedfdXE<%m\5l@.Y>@5`mGBVY
%4*[sW>jl1tYp3!Id@U%65V\YjCS:NY%*,:>R(;[5%[>b0_7lMe_XgS9hhJ%-+q9gmg^0^m<_fj?)5?,&L$18U)N3eD#QZBlbhO>O
%#V[G:S%%HNU2:,9WZPoY)F>8S566I5KM7mA(;Fn9eUrBa>4ed"Ul%hcp!><Xe5or^i]6P9Bs%u#06l3D%56j^<5h)BdQ_kKa?[p,
%1t60[AU=CZClB?69l'cZr#D0KYh0"[bd@3n\#"gL*(J7Q$1jrg;aWonohO`)/KU8ae4D4\N"A9e'1&lg8I>"kJQa[J*.sTCR;:B.
%c7aWI_%Y&T2r9[/W@ORi<N8iKfF=[VYFmQR@mqln1Y6TF,+JGg-cXC%/XZ<$L^CECs%hF^lroQ'fjSq'r.gdRBF;m[ptL5Lbio-2
%8,sfn#iQ%7#\;d-"L\=0]j`R?\G>!$lLq?k%?7C5b1I=*0R#Iba"l%b:5Hkuor!Q@YR`0=rsTX*^qPB4+D$kB=I'bY9Lne,S)fP]
%4:bT-0:%!@C5WppOdoV[l7F+f6j^DO*9:OtPs3hO]nEqDD%Wc\.EYo054#a:b#ra)3T&Yu/X^>`_6@cAaM'i,=q(%3_9QAYOXQ];
%de=rW/%LhJq*#u@`.)@#*V^A\M&P@mT$bgWEMDOk!(<jPn':Y.Ld]\K,Mr`&NF5]!&%(NBVG!,n"&Maqr$^M/d:'&b5?L$\?<!J\
%btPG]57"E,QNBQo"#A.>Ac1K->hub4Ac)NhN1e&o5PXFrNXi9@`:k_>#J[:9Pg0!>DA_CQ#sUBNlX3T*0J,F`_ds;[T+:]W5^)?>
%j%!_:X-jEVnH3I6mZR&AL^#4EiPu6BiC?:gCs;"b--p7h\c%7qF;'*c8GMK`k\dL1pEl^6qI&XAe1bsV2DInPpgF$R[#-Lt]/CfO
%f5.:(CYHkD1e#XW9H1>h'Ai3CVVIRN:O(PnkBA6W0hj_YYS/6RDF?MtoR<!'qN8QaXFmc/,JC^6k!/<.#ia?oL-$&)n41jJJCmuX
%PpnuWb&j;"4$jM9D!`80;u*]raqR[a11:TU*)Nh4b:(#a/(68bBYQ;G`pejR)c9MMPmLlXX1^^<;C?H+),ftrqf-2aTJh-nY"VL;
%1r&K0'?8^Aep_,G0MbnWIUb^?XjIHsKkW7Ldg1;F@DZ)m[mb0N-F>HKpSG:D7:-.8M^;\sJhVlt'*lr:NcJK7FL.BJji4[%+jmJe
%Ljr-!Dqho[@7%RPmE:b$:eI`pplu/aA<k-W&Yb5,MuO.W/(9'lPmPqSoeK!!SM-a%$F_?5TPu3q[;#;I!0pu;)m>$D;o.HCB"6E=
%'4'eEF@Ef#!H!93+poaEA4BU)S,ci97B=G+\EE%\e]`pbTOCN<]Jfl%[D?IDQe\&SC?c(LH=+%k!:=&2^MTh0G>u_S`d8AgkZSkm
%:$de!.dg$tY\WKHDk[b@GnfB"`">s7dQOb[0p&+Vr$gZE<"Is(E(e'eWE_GgOmM'qFEjEtE<;qmja(njZ<:E(iq,G%kIFSFV;D7?
%2jjs=1DHce\Gchpj1aF?N*]Dcn-qfWI_!tb%SC>4_uW,dH."Td`<1YOZJ^EGq'^rGVCYut(FhKJ&M&ter*^9!I!D`._$_B"-6eC>
%,>q3!]**<iKTR%+fJ%j6BIoM$=Bdj\R89N@,J]Sp`Cps4Pbt^I-P;ZA?5g]#%jpJMQLmm0NHqi1a-:MbhEaQ@]rYAZ0*$qKT&CPA
%G:et-$"?to9B*\YGLplPkYh5HZ05IkpZ7&fZhDl?aoK<0Na0:fUNGl^4JU%qq^TQ<16-D9.3C=*ML*/MV1RD1KI"SL?4KqF-^8KF
%\V^q2'6S@A$"F?Yq3d_#oR#I,aDM$cp$$B@!'u(G,RPjJ993-)J3sa*mJCkNR2dg%cTjG;PR$$G`,i:jdl4aaZiXgPK_XK0PZqH0
%"OTjLg+daLW<&qA0oO2DH$3Uc9)X:/e:gn"h'dld$:i[<o4&@ee\$d%9A=4lN[iQLJGLt*E2G4^pL`;]8;Gh%?I=fI]iF%hN_ut]
%<8EC&m>D!2dnCP,&G.L)[V/"h6$%dQOZ\EP_CNA@bs4/RGX"1JDir!?W-.iMJtlL>VPp+<9:?!Vgf0\L'%DJ/^!iD!/"Sf82%7_d
%1%g)9RZ)E*U5kcMa(?3YNR2dJP#[nWhbI(@Jpgi..3ZaN%gYBDXa"E%&8SBclde5tNT!tT;iuR99q@PM[nh;?0t[@!Sb38nG4r;8
%DC\$#aQ+"OW"h[u)tt[h<XCc@+=fM=)olNu4SVR+\94u#6-Om7Uf>q22Y@YKgeb2_R1F.F0sG%"Q.O#P7dkVTHKGQ=*h/h-Q*q91
%(7@K@KZi?FC\F:=*en4Z>2L.K]QCq;lGhhmd2Dl97(JD[&Tk5+7F\eB16kgde&ljui`0.0r)j,P]:X'T:Q&L8:M84e)@q!-!_`r6
%[BXDB,459%Z9Q>eqT-BF_3:1Er*l91gu<bhB\U(l"fY)F5m.^s\=^6FOX-Us?HD^UOBnem8XqF>Ab8nF8,F\HeTauk\k#eYkQ"UD
%((B*cGj00Q=/2Yn?-8OjoC+6\7&g9.OsI2-:FGi,ArfVFQW!KlW]sR5H'=K!1*!U3UMrp(D"6/EcC>bA8aZ\9pONU\M<"diBVdmf
%Zq,dMr._M`8n4CA>r"R>dAF@99Mi=O@TZDCK"1'E\Am^Cd&P6c2q*kNpWHU+WaV_9/q^5L&18*,FBCA.`XBl<`g.*UBD%NH@XUnt
%="&oQihS)9+9bkM"LAeKpAS?@R=m3;oha7[rp?Bck9M7(LQgT:F&d*HE[X7o@/+Os1Ho)iqV.7Z,mot\kNJph^VAnj+I*%u9LmW`
%(;V>C54T"1?(cb\ePG@&N[g#Ho.Q/"p+/XJchl"-DD-h!0C<.O`n#b>dko>RZpY#nmM88W(9=bnN!3HPV&69#i.caMHY[?J$r)Zm
%$4A86e]2?uC1WWJQj->:A$MiYn'T8`PY'-Wc,s.Uc?iB'@LU\qVESR%Q;UZYK5esiKkP'L9[#D-R@+p)l"^H4e;+.HL/dQ!&__EJ
%'315?7pjTm"!eKBpLn2uW7i+L$L3*S4!R3<NQYcue]u7@aj]U,Q]0Mfau:MA6"78n!EG_arEse]Q5UYBj^gRIAn^80m^OM.s+&=F
%UkV@!oJ1K`=W0"uos3LZZSXGcHC6(@VFLR?8]ka^jEJiiBpM4H;9s8?255#hWS:m,?T#[J)!,I9)EF$re:>[s1Ckc`NI\;>2O^HS
%.'%`D2bRYco]P[\Bd=sG,f.o"<$Pq^9bG(?mIrlP1EI[`N'N8eSObeGW>^8eR2NPcI$)k$=BNL[V.0qj#4"!+j'GP,^G&q]<1,?=
%27`5rdfgj=a4Yag#aA^jq.@2<[.6M4`TR`T<SpIdN/%sAg^eR"O)g\jbX)ijGU/P$$`H[Kd:>!*TdoX>=gAm1+<_SQ,qG^Z=!sc;
%_\DBt7l8SO0F2,I=[>;GEf)hfa^Y$6<Y>LtA?kC92J+4;N:0SpMG98!=W,\E:Cug1BG_n?<NZE6XKYlH8q\l!r`GGCONrY)ZhZqM
%'k^ei&Ya(i,Jja),Jo(HIDdh?l7>8k&`H."P/Y5+Au#h\Q2ib3+'!@s7^J@r/6ND,\IOoV$CI#a)'8ok//o1g4pZ2piHto&jA%iV
%JL)hQC63FkXeoPTl@Y71702-g=V9I8=n1*9OsQ_sq>t\J8be?DmheQ\[+T-OaH73aVG!.@OCgb"o[I+WT=`$0De',/m^<:4'Pj'W
%+[_',W+6/]A7PrV,4P-,6VS)";q]^bSa,c=JY&4lYThICYlmTBbqf[>`SW-[XE637$%bhpjlVsX3ZHf>\gQ3ejLI_o-9$=?h_5*>
%?5M62$0oP:?TRW(eGp5?Jp\PD9BR?U@BXAu'Y?W<ElWX58D-a`*DU08Lbtm"D<CP%`K[Hf983I48p-Z&6BhQjOpn5&h'hUPI7R.m
%p?2[FlOB`d!FrN=%RY4[4@[H&[u/tf(5e;,d=Q\6%bIXK8OjiI+>JGO'<$Y)`WoSI[QtT34;EbmiVBXO<QnI\Q%(YTVcPG.6'8ub
%s"Bh2/C(8!QmdW,8Ko\3Pe*S7I,RJM4Vt"]T)skA(q_h0YLXO"hof3W')`Y:Lh-X/Y*nLW%FV&JS[tPM'#5nFMp+(#B!Y$aSC%jS
%245#Z3fU!EejN9s[<DdbNa^Y\VFGUP1@;P<Os-2PHZ]^3;?tpBkV_XM7CCW.-ZN*kI^e%#$!k4`V+_qW$0aKf_ES@JfQMW^h?N=<
%P619Ebs(ms?O&Qe&39mNoZD^/#,7EO;W!`L[e6?!I8e:?''5Aq:j-;P0\T+>hGgB71rWS<BX__5khO)gg=F1KP;JmM:_Js@lk3Sk
%9kUeI8(bMC:P*7=YoQ(KU^hQ5rkf1bKE9?@8GcN/N:DbMVG/gLrjJ;Y"tCXW;coU.pec0X)sTaP\%uc%.f7%2<.1bi11G2#js6rQ
%9jLBZ!C6Mdj"0YY?l1mb4_]S<EU.bl4p+oHSXYMZLU:VQIJ>TJR4'3#;hi1b_Zp`1RUJ]]bCr3^md`ne+t[Peg]G%lAd`9aeW]\&
%TTN3iQoHE?AEe!gKJ-1MA/Oj.,[Xu;`#h`doX\?OQ8Q.^FL8qBagY9&(iVU2o%F,Ti'/s,<KS(DR=3H]6^Ln!"`kRa@]@>C5WsEQ
%WfST\.FS&F1pZW_?<T[dLXaO##1M5MF+_E+R#Me$_%DCf]a01V9B1dOfYD"=Q\ei^B8Qi4.SI7TTOh-*VjAgOmTu6]DgG-q7Ll0G
%)>&7t-MsW%eqGp6):X1AFXYM'Pp+gH`(Ab,N*8q^CHtY1Anc6oE(]h&j56;'QKCQs>5^dkkZBkq)2/;@#2(u[mMh/lKjM-M-FdaH
%;RPJq'n@Sr^=?2&4h,oBNYA#7)!CGI`)1926rJZ75O0-,`1k"HT&[17-pDP4V!`]hi]ge%$F=ZVS'2VPLmfP"W)t8_Y*\)VS':Qa
%]c,M:rumK7L0)FMB_^LtDN(dU"ITehI1;f"^I_IGZl3c-N!>q:CW<e77KX4%ko(*,%n(e*Pq-\UUj$W<DX.]u9<U5U7cLQ%#FXWK
%h:XM#_PKlfB#eFUSDT^TNX<c@4(ZG8A=#bua(3D"l03=MVfQW;U4FCBU.ULRW2jg6"IY5D;prQXONCO\):'-T-.Yn)?(!?#%VefI
%'U]S`-G$*>L]S_n-S^KPL;MN<gm:Kma`tK=(c!gc;gb$#OidD6De#H]PUP7[I5R$YR<8\""E&hH[i&s.9L3KNpd5-P-<iTl_35S$
%m$D8=)"T$YTNYia,*QG]U@mmY4TWPN1*p7)[ba`@aanY:;u6A/CRM"J8s(!b9p'^q7Zkg>cXQQXaH=S?Mri)@1-)saf'*rk/>qa0
%aQ-go1DF`bU63OPE.W%KV0LA^!d&e9?Dt[]'Ge(/KD)<(F&59[)YCIJ6t6e&F6+s3`h3F1&WH9^liK_(9SmXf`7QdFC<haB@ffin
%+*Ae=/"!FEfr/4X_*T7)I7%A^;i;:KPoYf('<$6PN#jd.p)6)+&;3<0):;0>.6haN4H^aa4u-(^,s>jVc)/OGAt+7m=G>Bf1\<qE
%?FOD]RT_bDg:Dp)K?1cQSW)eg6SgEna([AWciL[?kZnN:lp6Hc/ChtZ`Zrc":K:p`O*G+.A^LNdlqsIgat@`\&ne/@f1n"DEJ`??
%PHcp6+hq>K&BU6&?[8885f^C[#8%eaN6T#+!4%g3M8TFtC=P;2NK+"M9nQ.anH`tUnUQ@()fJ\gpG3_D`$6a"iXF@Q<\m,G2iDP8
%JOgcZ)$5L`*6:#n;2U7A0b/1R9VQi]/n_5]`8DV/gp3YN`Zm+p]W516L.nh;Pr9\'$:e$W1`Gln*i!c/S`q"$9%&>7IRK?sG;;7T
%[/8=JVB("?maWW*fneIi9sk?H#g+,A(R-+p6ih#-fDPEQs(6nIN[V0?C_4mAV&,<h6i!<GAg>PSjG2BkEJ8H",@K*.O/G0h]TG,N
%]Dqf]di8:]IDnu(H@*GW>CZ+654gh-TmKT6+oE.HKE(G%J,-"WI(QeY97$V^TKZn$%''q06$\oYVciU5+!@kJZ&SRXJ>0J=L\?kb
%L^rqcd<5]#l1d5'Rl,]1cg4jXIf,,grEtC.Ii9.1l`FtrruGoj6Un$b-:-Qb3]'?1`^9du&i"N:5Lng_%W?AU5H)jB"VJ1hWEVhu
%Pr/g(^*eF%=5G?P`nTmaH0sIdVE<fj&$'*S3E2?5+r.3=GN*b2l9W6P6mIar3ukM@21qq&@mbA5n1$s#MgC_6OM'l;<ChOlGAht.
%&MoD;_u-dd,CS*X+$\Z$@^FM^)7!l@"11dg/sh9!&Y/T!7/"'7JU(1>"RY@o:[e4#)WY)m+M6K6$^@b`"1tq`q0ln;RlMlTnF<iG
%%J68WJnG2#U==N/os^3B_NDL$%BVKU^9XVp/-_9?X"+MF4V0b#6_;,+iZQ<aMip&<YY/QKrVfjJD<&kpj@>/&2"3ka5UDB*5[jBI
%A,?1Tbj[LmXhc(aW;YH=\%_<C)"Q^$h!E`?Ed__\6H+38Q7/%K*/m6qV6gXG@_bqh"Q1QQ(?/9mfG3Pd5Gm@7R3]%d(eDLhR?B!V
%#Qg`K`[Z/Y7d&q8ibhYIKhC4Zg=ml%np*o,o=#kq:Td@q142q?e+X)XL:?iB8c!^_g9:I(lhgRh4`3?r7u0mB&miDiKN<uL4X='>
%<fF'o%RFd,+CIPt,f-Ruq$2`C*tBPM$!p(,@g9:B*-r;>5OVc7_SDcSXaH,aTZ[L3%MdlMl1`87@%]DE\9p@4R)ZMq/mc.!r;$!1
%Vc\HMgT<UAHc</jN-uV5Ie!oe+^&QaMVu,mV8tqFj;3FQ-i=QIS\cEC7]?'[K3H-E_!MH7"J)L8-L2p[=qSk<4[+IVC^mSj&g/+,
%#Z<m^M6M.<8Lb3E0,BZ/4]LM6Bdf#Kp4(;l!.GpjQ+$rV`0&sp4tiVj*Sah?-tkbT+QP$!B%&'Wop-%PXSgmW:]b+ZJ-"/G#Q%4e
%9OI?R.$``;F>l=N"_2=<or]K9+"[,<R2W3G@8c/+-3\l_%F8P>$?h:C;0=Dq-.G"U`;Tgs6<Q03iW\[#Y'mfp7(LsEC+c&E<6aR;
%79+V+K;^gD75]TFWr=Ia<W?MB<H"8JW]/dFFn[W3lK_89;>#DHP.G!5,SbkI[/+Z;XW$!'7CB/crt&1tIo;-/=uA3`bA';NX?,RN
%lE>5:X[4^^$7d#!4,s\!)DB:hUilDd8?37j&D#G6HBcs,@q<M1AgXJrBnK8:]4P>4K2F=bVN]k&#r:;a\g4e:dTTVVB35P'Z-mg&
%:(c'8m_e.u$3mZ(!)9is45YB_;*V3glYiR)jhmqRe=G)SgF(3m?cWG^*'d+O<UAmb7@QIhQQAn`fsq14/btAcf5Dq$U*!kb$J@1i
%F/'!QoF3QsL[FN@4&=r9#38f"Q3KKAOGE;F$TP;`D^-2]GV-mVHV"nSVNI_EoPNS?,/%b*5IaH`1DYg?Mmu-`Y0!0li"h3H0sNB>
%@Jq#A>\BNL6i7'f!g$+=0%snoU&^n+Z4",G,`afH<\9=Y+O(lp&^2;Yi?54k8V71CFU#p#6_1nIeR2:6^mEG1niOFm)7r7'V6(_W
%ig51C4tX!K$hJiNF&^UOb]<%YeE,/%/JFo6H3h;ah\&r9AL"4WqgFq)8XV7(a"Oj(G,72)8G[2b[R]/h^,/#C?^69t3IEP)&?EB(
%IE4mB8[=#8PNun#@(nkD%EsSOmU36Yo<a468OOqfQbHf[i$.!_q7/b)MisBJF32^*AQbLlb>_(<.D^G_7oOhVG4BpYHmliRieT!G
%5*dJA<*i"b(m[a"qShHq9L:\SL*^D=,%"!p_!D.Pmc/:`-iE!)P9_1?rH-if,[#HAN$950.XG_pCLp.kNH#9.PbbI(`3)cO$DCf\
%7,<2V_Qt>b)ND"/<AbfYpgQ+Wef3b8k)FR1#kcr**tH8i/fjikDX:^`i74.#;3D`865Sa"'),4(l4EDhOuDHs:/<;M%QR7[`)0B"
%`F5/)-r6NsWgi:C:j5JI`r9@HNk!oJ,isqNgB5;FgALV(O$PeAd@0QoM6!/#JQC32W)/e]"H[G:PB3K.Oud;L]ppZNRJ&C46jHD!
%'B3N-F8;;_3oQ,1<]Su']6qo:m/bn@i,uaU[g8A9V!W!h0>VOWC:b?urK@-A`3a,UQ*F9booQ4DcuIX"./<t79#DMW6Q4Wa0DKLd
%2GR!EH)H\_f[#?0S3<`ZP)Q\C4jm?T9?LEk%XoC*76tdgGnFM>B5fes"b,\$Hj4dJUeoChT^MSfP9*#+ZHYsU[$qF%I-UUpfMjs!
%[E6/n0Xe-`2td6`3cPQRlNYV1SPD?0?SLf]E`/6tZ%6pp0$/CJ%>[Vl5a60U;u&9RK_`5.Y=\dr&T/),]e\>t<fk\@>:[(cd(#1q
%[QC;F&c/WNkL6Yh*LFM'[DL&alN![oq7@m(2.GB,2Q@1"4+kr'ARVB2jb@BdP-dX7`WBrBT:E+ZQ>s$M+ricc"p)'+qL#r+kq]+M
%]d9FmB4qFncW7.[g=@N(e"Jue*22+khg$<OB,C-r=?+R7]Y?gnRtC-&/&fqSXc3u5_>BJ3]/MkS7CZf_BEAd'J7uH'5qK5c&YT[?
%%LGC`ej]ZBB+ar>/`H`XnC9l)>b`I3:bi"gSS->dFlZCZ<I8J$;Z^]u'cP"fFs7*a%FtP&l.1<mZ"pUO728n.-OC5!^,_/eMZmFp
%]oqW?'4FFIV.9mgZ$KdDW%o=`D]KsoUYZLj]u2Nt<X'aKK4O)ope0dX]S%mXLb\<C\H8';/q7T^Sc5uC@fp&G\PA2Qq\$#%IU`aC
%brb#:;edb]QdkWRY%agR7Lhmo5fTe#5o)@*%e,h0U1a10,%gBumLLj1-X8QcLKh`16$YNT<"ksf<$d3:JA^]+qC9sCC1nAcQ8pOc
%J6pZcf59XgCA.MYV):%OE(DR8;9\jpf>sB92^/S5'%ns5B-8JU*lkosR?LsT8;1(45RA,Vlc)i:QK2BBQJr]Y'"B((4$rEL-t-:E
%];SYU>rM]<Nl=E>/!m,H45&?C%-$2U:,96EKiE`I,r5]q-hf*'*]Sr.BNMauYf8N9%t!kL[QLlBa7IG\OOL&*p.QeS!`c;FPc"^Y
%!H%[<`fBg;mp"V8=e8LYrb,\S7FU9131Bq+:WpL72>3p/bV>1moX?e[XJGKDJI/me=<,W[W=O0M.FE/c>\dZgMT0Y*&C#DhBT'#k
%hmD!`MuWLb[st!,&oIlLe1`]2r9sMN=YlfH?0Jb+I)Nm16(:e.rW(u_J6=I,SMB*-5Yd'^rYUDZJ2W2%!BQ!)5`NY_hoNg@.3',-
%CgBejBH.e$oJ@1QE`euI@oME?RY"V;?3BgK"(P!R*s?RT2s,R0=HF3Kl2Wf!"o*_8o#3R>^uW+dmoMJ"!YdUF%b0\l^redAL0=_l
%&NL__`<M=<!b8H,@*6G*a;sVTYe\=b`[aO`$W(n+"d'('&=4NY81&::'n;=e(uI9)`BmBo1]BOIYeZo4HVbP1BSeJ35%1\23%L1e
%@'DV9RZ5-mYnX?Y6,I#\T5..=A$Eam]2NbiKa$2o<8;#gi-dR,HeeLeq$_"Y&>qd%!TnIdP8F'"0!ai_!h.>,C3HC4Ka!mUSX^JY
%%-Fp$_&]5R!+Zh`SA>9"C(Z#u!dAj".JjHp%Z:E(&rTbCU\26_=MR7rh!BU1!\;>nWK:45<gO:`n2==>&+RHF0Im[S]`H_X#U9FT
%YWB!5@=.NmJ`KWu)(8Pca2jrFg$?6O</m^\X)YNXBBP?1_IT)&j2(DXo=ct6)i,5^g"i[TCG$hLUq*@#8[:,o+s.B`WrCG_hBWLe
%J5&cbq1,ST@?=tl8mIeN`,bS*+m*8-9<1[pQk,*RN^l*!b/lC2_&d8D$S#6!YjZX-,G-t\7Z#$QQT0mtWiM]>h:8q.+9_4PMDUE+
%Rj!:QlU76'$aZs]KH!A0lBVr".AGC*<`=mS^m+9!g`E1L][P<^p4F"^1/`MS1)>]+X!mgIg<mRp/Ag8#%E/p:W/XVAM[4G&#Ym3]
%>tLAubP]L$6\AEdc(1H96VT3JkDOR<PX#t<dF+2?iB\D\J))1Cpt\))hS;:>hMjMX[T4Fpi@2`ral;"Em:Os3mm_N62\eWPSGNA)
%U8E@/Dg4b'XVmr)N`%Il?.>&dmrMb%YS-9[GqO9nQ$(>n'sJG4dON3dOOR2$\uQS)%+=#CW?N*"$jeY/JLI+C$OX!"^XX<r-1sJW
%%TbP<L'aE<OAj:q/O(^dXfdM`mFL3D(jFOEC!?;j&YZE&rB;gtU%u*E#`Sr%Q"?mt2rYjTA7/)o0e$5i#-J,m''PBf,F:eC-I.Si
%U4P$)>1p':fi$D;!f#qEFEp%]$9,^bS8S;-Ti!Y0;.>!*7ZlGDGXb\tIm+57MhMlE]=oK6d4[qHOV0AM'$+'q+;iE18/Ej5O%](k
%WUd3%CrepPW7aGkpT($M8k-Ah<[u*\q;p%/WFe@=6R'^U</F8q2PVOOkAYKRUaZg(K:L8+hl1NH"]"LM:UNI97!Bn!/KDcBbl2(O
%5i*JY$$j?mQD<#0RP,3cg$C&e.#K?`q1uHq8Pt,[JECQ:6g?M]AMGRUJ8`*iFZW[Gj\Wp2?n;`og$H(rI7+M9WL=)+Yktemq:?Mb
%#bH^K>msDuP*<2tU?1fX.N53YBb?T%!)Q2r::@<[F0bRn4oTUVl)^1B7"WcV4t9aeQ\6YRCf>)'5rr"OY7OV6FZ.ar7?WQ>JVo]]
%1<K\d].j:k[>>Kr.Gm[[K*K\k`ir@Di=3.i_\:bSGc&%FQ9Bt:dsT/sAqiSdlfW^.$aOP+oW%iW;R7J`2cSHs1lKgW0YDu2B&2Uc
%FpmX1!=e.i%H%lFm`-i(+'3KhT?5P4$Ve<-/hXGsMr)s6G$C.U8-#G#Urh_2OKC$N8Y;%_<E/n3-BO_u/GF"oQ3uT*d[4'pA5#_@
%e$B*QS8f(MVNNB8!gc0Y<)YQ=qC2LLEUDorRg=g%Ak82CfiL"%&I_#Ug9TUejTX%:Pj>>#1.@,%M7oi;8HUuW$;"Q_>DAXS&R#e]
%WP@9Qh6EZ^=bE*ra*hs\T\S;8g[o@9.f2YNEZ!i'a`tJD-#^i$(5So0$h/c'N7!F9!]3J^Nb-9a>hNl9(qDoA[emq8q.<)7)85QE
%2uLMW*%FQ5!(coh"1\D.e$#!@T^9NR7P94\bIqb=!cGL5N7nj&=hYRDT@#nV&5a_i^e8n*]+E:5[pElOJR!`-'OB,-"_`,.AYtsu
%(n)eJ6isn!YQ((`5T\-='5?M/JFqJ"j8qS>/t2#h3Nt3L%rDXH&'XOk^PuIuT^J.t>X51"CKg]MA!beF1Nif-A/`.5YmX*dVbmbN
%?%<q/UPb0<E!1!EN*Lo,--`mkkGn&c)7]`Y6QXt:!ZZE(//bo^@7p1A#K\P/U!50.U;ed82f^_/g]IEEAX\TX0#6N`gKBeG5jW#V
%@/t<K/dBqdI*idBR4fGr]WCmiY<V%_#Rbcr$cE4Ng]DKK/%NG%)8!]%Y46KMh+WCPoE$C4H3$WGEK2+UhWC7+7P@$ePr!dXg-scS
%1]eQ##1-7.H\?3C0>AgTK/F4k8Jo7KP`A9f!0iu@GGc88'J&4"dL-1\#kS01h=LdH\WR4J]mtL+R5P.nJ_6Dc0>M1De(-pb$_=V'
%DN)FflE.`KK1OX^=7j=FL#n8%5Xp6<;j:]U-clYOF??aq</,r;15:>b6$Tp=_c!?856I0T7$Yq)d%#8Yo=bNE(a5&>\^;6APtR+Z
%%?Q8@)O28#/4M;(WSD05fpi=i6,L\eKIB=O#"U^b"-XZ4.\f]W'h0JlYfV1(aQ.M2rkf2-ac5a-5)HQg:9/4JR,!3Mf4HO-cO4@C
%K*q]c'm!hDCG@*3DC`ja=#F?Aga]YuN@N#:ga\5Km-A^GHuN*G*[6deU#N.r9'&NAW?X<8)aBm``p=<!%C'6%l4?$6VqZ.W7cd,:
%lfK)gPoCiGrU!o)7ODAj<ZnU;kHrHs&\2?2X_F9GNL!e^'e,=c+So0R4-SD*)3`g3P0&]e;oM><B4qH**]tZfA+N[XL\`9^7,*38
%+u`\tKmZ)r\T.,W8oI+8R%T]1D'X/&/F7PZ`#FgXcrl>`O\BYXNr,P#1%.+7E[J7/,a02)Q>Pq8P8c`5RB=SugaEl[GrcP%7p2.n
%$U4f]?/"=Al/Uic\TM$#@NaF`AYCe[U8o1EWif1k(\u;Y7b2+:"ClHce#Vke`nAB#QG'm6Zk^8'Oi`Rjgt@\/j@0_pG&/(\)qVc$
%PUM_7Xj,NIhal*0L*\OaEHh&e(Ju&IZZOW@#cRWc`L,Gj*kP@q5t900SQ'J;Hi3&:jHX_.r+Rd<MNUJoP+"g.rhU`9+m[r#>jNpI
%r@hlpi!OZeFK5%>^_>6h3^HgRO4cWAiQ@1$.O>tK4C&XZ8Zg79-UtM<a<+6(q4aTTr#4h(/E,,E>U2'tW>6^ffuPaub+ork-)RpF
%WX=br<;p"Y&,S>(g%TNNc#po'(D0W6in`<R$s4/IL0IN`^R@:X.0GJ*A]2dKMa7RG(=nd>q0AS9RJ&j@ao_0fSDQ4U^CJU\%tT2>
%BC6?A_em;#F/0TiM&dp&obCTFS7jC6G>i`n0mUQ]^a)\(QUqZn#'tO\&gCTbm+j"9g&K";gm^E5;YLI_)sX#G]CeNo5CA@Xh(Xg!
%'7C/'LMH8t',QosDC/+s_u'7Piq7*0[7M,bEC67GA*grpoPa')s.*8c!?GY.,rCZ;$=unMNet-(,(3-G%L'BZFplX]djg^&hsq,s
%*OT-mn`3u>F]/]GosjNO&obrrVJC%`WiE7f?VHun$F_P/O0`E>eeL#8Bg1@o;\,t0S<*d!qWORB]4Hm*kN:3HFha5lfXg*eQ]5X<
%CO(uF?cJ>6`+FU%2uEJ>rrsK,b)iA[dY&":$NkQ><OEaW5P*$cO(!+-4KZQ:KrFZ6)X\"uFHCd((75O^DPftQ/4%:41<;cVB65W)
%@#?)OXqjp^_E^jRO&WhB$R0J`Jp&JT`@X_L<lq3J'u)1a/j4aX#/aKLSao9UV<8]`Et%Bms7jA.mD%n(CBW&$hu;6*eKRYg#k\?M
%-$`_/e/2jAK8HPm[t6EI&s5/a<i#)a?Hjd4^D0=c!RbYNC0<[u>W`GhCJ*5kpH4VP=/]InY(KVeVTq=`;I-dBnP%ZMPh(OL1h7Cl
%2C@qC/lf:B#c=0J&6"S`4+D"F@BU.i`'US\5/)o5NbY#CAG+dgV3`+S7F&EPZqG)/!eO7@X.$&_?t$0-^8VBF8\=%Ya:(W/>EF;8
%eahM#YIC\!#L6Z/\j`\WZ'>F\Lmt:(-%M>JNnbcJM4<0.8]u%>7!7G;BGtPQrK@Ah%09Y/g@,E(DC]b<VX@(U'eT"?IquG]m>bQj
%h/Ec>^`BPVB=1i"::he!76d'2n6sE8/E6+7lbSS1[8]kOkuIg*!XUpYLROO%W%.BQPq4`39?3rE<nbQZ0=CS<+S"kkB"^JcA)d49
%Z?Wt)I#OO97V#2P2:KUGAG'r3kW6`m8(9uFp^V>haKSoQ-4Ig>QNTkiqYLs\?YKia>mqoB>to)+#n".6Rr5sTmhW4cW@6-2-mD^1
%h\D4u<M%`,VVl$`FP"_U/-T.2q*!S-YX7_h$$R0P^U6]AV"f_3+=tXS%B%+X%)g;R,EPhN&@0'V75YjM<K]kQ5=uYR"mIM2V5u;k
%"e[Z,B!$q`e/guf>,,#U5*Vad#Ljq`h@l#7)@gBLXmoCXA5f90+;"(8Zm(efo*rh4eP&aqT"tuPf=l+DT5T:l[l,Q94;[SAIN;gZ
%;H<#!Q$Us+i05c^okN@>R9tJ]M+4UJOXma?:EY+XCqK3OV+33r#tF0T)?15?G4Xlqhd9h1Ya--1Np7d,iN$E_`PO;]*SS,&\jG1Z
%`]HAM(t'rhJ49QYJ;e8tQ%=6FXW@b"lRdM;_.)X/GSQ7TOX6oU?_h^%Op"S8R\nD@g^A_Am_L'^g4k$L5,?o]L#tW456f6CUS.#K
%]IE4)%X!YZd0N%:]])lc*-u_m+X`rtBIuW$T3g^n4qs)*[/c7T%cbI.Pl3)A:0WQ^`'rNW*7?H7#S-uP]2+l>d?)\Pq*&$a0X]s?
%!=]D;RMIG8!lhR!<XC2N3%BJ1;Y(EP>[2^b$(oSk!mG,TJO^c=Z:;b]Y_OKS<KiaBS(-C65$3Igcu.ObY&%OqeoX&D63e5cL;Z=b
%#%pV\s-C:@d^M"RB5)WG1h(,,*VQ_<8]qtK_ak97)6t)YRLtBL^d/Y?kdheWX+jr8pD8T]k^Jse\n!^dY-XVc1Zgij+WU6!ZG4Vd
%oD_n2p^cl`nV.6*(jG:ME$aN[Z/n(^b-]]!E%t8n%h]ZXUY\$K/lE6ie\n(ZP$[3od@p9WXg]FU6;8k2M'R(:&-HAs<B!Pj-W;:0
%\lU0%%C0tGndsYa&W0I4c:A"'C)9f0,N0K8?\d9bq89"*FO5M?Y'*t`n>_ga>[A[`Y!O/nafH(+o8>FJ(;4:[^/DAm)\CDXJ?W?2
%&=2JZ!^dpaL+!%Q0W6&pF__4,;$or$<]TZcI7Ie$>Yq'p+;js1Qp`4j)YXZ+O@PkJ2"]M4fVPV)hj.dcpqrh+.%p%WXZMC])6HN!
%)^&\KC%1lON=YjdQ%1$S."E#[,.Al'ha!D:,0BM>5>6)0+tF)P-6Q%2arC7g"E9NIg"l$sb[p"rj2@gGQ.%VNmlsBr/eV"l82OfL
%a!D_K3!'pUHN0\'(cTko5n6S:4Q?Za2:qo@L(<0BN/%UX>t1ilBe83?@g#Q!P0P>/Epkm<<<X7t>Y@<6GKYL,Dj38GZ_%p@C]H,%
%]h<\9J!@u/K3H*-K@4?s,YALp_'j106p_cR_i"W_LNJV)'2/i+JajcWm93T#-(7>B)/`)<V;q"eED(C>,[LH^G3l)4D@Ecq82VIO
%e`KJQ#K^S2mk@4kWX2rFZD<i?];sKKFAg>^+t+%ciLo%;FAZo'FOZ1YhKMDY_-TYYiC'YFFp&qi^qC"!;5Up*3iuE!.s*r'PRe1r
%$s]_&kQ7008AX,^r]E&^0Mc%^2K^*l1;[%P-[Cia,k;(/B;4TQ%\sc<Q$iVeN0"oG.ga9B0"HIfK=A^cgm4ffZ<=YmN[1BRO>nk*
%fN_%2lP4=l1cT+'8=A:i/X\olC?6-.U,"!\'U_$/9f95"ajQlo<p5W:p+u5K(2Ro:.a&PE#[K^q8^2s0$?W8GVWt:J5Up'V8=34@
%*gP/"%pmI&6MARSBo=e2Zn:;B-?iLqi6[(U!?L?[ottUGIri'oT2.;a?HZa,bUVn1H9-ud*N%GIgn>u%<ra&t8jH6d)Cj3E_t9Q'
%A-$4#S7'fr[i-A=_UD^1_92R9J)0%<\*rOi_3n-N.otAOr@rGbo^\7JTAJn3_-L7?o."1GTU`u\2]tQ5%/1:KN@]6oga]-5fYZ#d
%(Z/7En10)e*>k%VJ$(%2i@C8#(HI)b\h]s.1`/+eM;9lTkL9'of.^#3Ar&1uD5j<jmMO+)?s>rJ7YI2*D+]qSN5RNs,Aj[.dBSBD
%"%XX?U[ff_.*NkE8?sMh"1&uq!+(gTg,p='/]f,P?63i5:EW)1a3a@s3o]BuYO>ACZX6`AD/HtnZZp23$3e-92+S\j,DEXqiAOaR
%Fna&7n<lU*\p4e4E+Y(6,^Ii%!GZpo>?W3?"X==60M<8m@$[$SoQn[4B4d+Z!0%tg$dBK)%,[TW_XHA8[Di5Tel*-9in72%_3hXN
%a-+g)&3u;fQ$hMj2,P&4=I/rHH(s+e?ijc*-q9J%!SL;o&d=[F8BXE61eABDA%ZbG#alnEij>Q!b7)e$d=Ob;5nm$d^$,;YJgcF]
%/piNYrk8k+p[pA!bOY!r%UEfM`99fQ(-!MrQYsg2R+CiXcj%HR09HdH*)'XR.PJjN"`Pb&IEN!%BMrF;T?on:5k$XE3M?]!PY`39
%=MgQP^sjWoP0qOubgWA-ZlUnC'NC-oPgJmniV@j3hs.TC,no<2>?Cm3R%F1SL'l'.Jg@&21"__bT\P8\.&iioO!'KNK7!<NG3SoZ
%UV.$[s7)IiBG:qiZG!5/Qg^N_<!#dCl;J+&,?(="`Og+KD[+f]P0KpEWNu!K+Gq-p59\[h)&W.b%r.@'1Pec..ot-K%4EBaVB^1Y
%G""Bq&fW?tWg@;ua\YO`+l\>D?-t7?f(Zq+"?WBHi\"pI]cW`0%CW-ENcE4-8s30\`luk0$@07[qekSgIAB?iF*n88cm5]:aU+7X
%(bB;+5PTA1QO3s6LBp+>2Vbj+Cc[mce4S>-BBU=/@44tTe)fj>FJRCTT3o1\NRYcdj1S#STQ*T2ndo,eZWUk>g<jo@YDY`tkKmhW
%;"$1MKGs>m&;)MOk=+Lj^+nnZS)gJf\)C5:*q$/gG+=`'_Tni!a_]h)/1$#&CK12eJ;fcs&FQG#b$F96TIZ/B4D\r^qE`=pWnMd#
%ZoqjQce#WcK:MJXLREUI&KR/MM)R$FOuk?5M1^@%ag$DKMYAre,&,_HJEB&PQuJU,<^"$ZP(@H$2$ID0n3C"5etl5:r!"CFfpn&:
%LZJ`YTF@LVq^`\QQj3W<`/L<o6>\8OMg+-[I[MkuW$Vb4QX%6FoPJrj%!S[S=`\0g=D1tSbpiX;fFWF/^m/<[Fi]pC@%_F&G5rI#
%-19/&.jS#U2t^ApEU=bsLHPsYWtP.Qc%6Q<K?gi99fTM1FAXkIUc*>nTgY#`q.^U(^0,7J*AH;JMl(XU#_:2+M[f.>G+qhDUeder
%P4]02rk%LZkoRiRT5llhFd)bY1COi2I;#8fHI9RmP0*c?9j=J3J;=N<5oUZ-4sE<(`7UjqYcc:'1T*e9jFJ@!$#1*h=ct[%ba2+*
%!H)c,ZBh#S8J;&3!F&.GcW#fspV"K.@sQl\IN[dL.`0p4!tHI,$ZO;12W&pp4l!5!3T%/e?$J?N%q'Q@gB1PGP93dl)S">53W[-*
%9mVUBM)3+;#E,,9IL's8H4/E(4`,T674I0Ae.NiJ/XQHu@@=@42:En2rYS9]ca\,7HBc$ZJ^j;s_[UJ[.?_scd+.l1ab9sAKb!ta
%:4(rJK+tQj&[60=M%ZJ:7ZeC4l&ug2B@B\\DNIJt"s#l9``DaUpG3hN'sVig!l5dD_^"ur.L?)WHWSdangY8qhBHbBDu9.*-k7L'
%bAdnGeg:3;[r_fV57VXJ8)`V<rd9$iS/[KH)AYQuMHT]]%&+Ai&RMEocaUBS7h^b)E5pN5f\h3!i-mW/pfTG*7rV$ClAsug%j6Sf
%&teIj1:@f$\;Z8Dgl,*?BXJgTmSEiO^5C[)mZnt4s-hd>#Pb'Vnm5T,!:n8*9'TZ//<+I1`2Z';%:'];1;N",-/7gOZ34^H@SO@D
%'a6UTam?]62#ZC8PNp@HgffL#dN&BQ^[SBUQ>8=OLo=BPQ/l6&(a]DGO\t!\\%"S/A;6M,C_rKJ5gAJ%f2_JA%%L6\Wn\f(*[*Ki
%lu'L_iDW]BA2\Ct4V4[hi*[6"fPt\p?\1S(pWjpI("JpPo(sWg:$n_'L.!8*MIQddLRE5lV%&:*)+>q.N(E#P(acDpABZU@NSiQH
%'G._s*LPNA!iS"&]Y1j>!#lOh;4?<ReV42>%S?"f)\T_,fiP'CO?mcd;`C.=F,<sFR(hemG;BlT15p@EOiY[ZQ:.1(8DRqT%BN)>
%fLDZmWP&STN5Y'!XKH:6[$Zq5VA:HL3SR\abCGe56jjX+5H<NpE2T.NCYn5C&;P\8+DF'lE]ur&mBA$]8Z_n49h6,9iF`Tn8E:8b
%$O]["aD/G*$(2*VH-LL6RL'9\r5j*hRZL'hfqT!j1.'6OXkJjJ@+2^@(MH1)c1N\&n@*NOCe-is[LJ(GQ_H&8EgF>l>8jEuep-PI
%W&CHN46q*s+\`?5FX,>a1tZJ/!nNNLO(L%3E7cjke0AWrU][D)#ufEQ^(<aZn8WR9OVs8uDet>l7O1edPa?j6%*sP8#p'_amNE=I
%?5bWf?r:S60KVG?JdmJ(.#iOJ=^pY6^E<q'"Kt;3^K[C`$f]_X/CdI0eS^&F1VsD0*i&>7fW1+]!1skj;>d.JAoI1QdnaftGkl:=
%^'J:e4P]Q0d6>\`2`TdGpc-&9q)s*ieOnn\+mtZ@:r(P)cr_>985"VM%3=`H?m0Yi]A7af<IgYk9p@Gmj4BI-#B"YmoC1(?r$gFU
%1ch:,M!>C)eg+AgQrs(No4bXC`":o>..?kf?O,4kMWekdXnjKTW%;rSZ8kT>P.jNS/jL>rb0me>+1X'P@4Yj`ln(C*Q&,=;]rH\/
%2Otr.*0>$ZgJs6BdG#_(4X^PKK5uJKIS[[BWMIqNKiVHk?)/\,%!`e;;(/8_bb@HU8E"S.QGAes%SmU;(dW65mXa4:%.g1[3[U#,
%57h$"n+6LB,&C+K(dgqE5<pQr1D49_N,ZV_.2tE==VK[)8TQbSGNQrt+e.=p-6O>tk;$IJll=&5;PYAL5Y[*8ASI"R3JRTc;J]@M
%4N\K`6a0c=@R/EhZuTkmjp%(S$j';6KY\I4Eh80RQgG%so.R#N9!$kYB$iJ6('<l\k]b_ePEosei8MqhV5g,E!Q\:8:gTk69O*Vf
%Ztl2aZ-NoZ7i!/8>.9U^#7EJ'DQ;Lb,,RF.2)8<)?MB`deZf3S4V@WuI_q+t5j>jLpr0EQ0Z2%3LM0ff'NkGdP.rYcbo#$@_XqBA
%(J5uQPM*gGf.JH07V"?P>2+K7WEr4>,I@B/0I0:t??K*&-Wms?)..n3XZb>t=Utfh?=4n+>sprS6%@XCP;Tup;,12Pc0-39+'REQ
%U(0=YH,`"SS$Em?g+EPj_IFEMhRJ[?bQK0Qg"Z>SRZ@$aQi<#qb/0r3d@(Q`fIPf+r*dc_8U9oG[F7,B"1T.I6[^^N+eHO:9QK+T
%O'm/m_?2&&+X5f:drUG@8hCA.Pg"a!%6#g[SNS_?,!@,U3d]p(D!"qZ5^la^$M5JG9+$91L/IYfg_g8=^u9SF_M8_R-/(Rf!+0H+
%>RWpJ#`f7J;GG2.rkXnc@\*C/PLeLCi,N/2B!X'J=jt?>$4PF:kjkr"@<ZE.Q'jqUq;_h1HF=o)TU>":U`DjZbE_a9`]ApcM`S9)
%,TXO[>Lu_d-0O3;)!,-*pZ*P.ArZX5(^+URr"6T3D=ChO:[r=k>Uoc6eFR#UJWZ$^#<sDWBp@1=r4.ACTAD$S%/=dJ_sjee*+ApW
%rS'P<nE87^?hu^uOi&:>+ulc<`sE^k&g"D\dg`_oXJonD\<KE4CsuD]/8(3c[FeWD`,p`Y79-P`84,4!D(dgV6kYa>",LUme[Q6T
%@d%rQ2=#NRQ1IqkH'020aN9(D?EXK7g_#A(k^N$B*f5+I;Zds?2c3"TFWH7m,s#Gf+i@SbU,6!D:`D:+Ffi"^g't4Z2UCfb@&V]d
%r3<8LQp=c4"%AgHck]^r!NOM&K*"O`KHCqN]%jrUBEA46X=LJ=1iNg)_KGPLGQbj2.M\!HW21V>`'tGj)#E\BU/S4aW,E/CX@WYh
%\JQ_\R7rseiJj3?VYJ(c*^MQ0V"e%i?3J!AGD:$treV(lV*CA<0bq#poVa"fU?Q/10]5oSdtC3\l.:jEQ.2Ak=;W!%*Gq^$!5j>(
%&8'X#/a,`88Tl+>#S=mbk-Q1#_Cd$EB&=V?<)*&9a2,P88j/eVL,.bh`.@!4SC@,)!Iu,OLjkI)-3uD+m0;odpEkj\/s_^>._-E&
%/)Cje>3$lX@='bEj=e<Q4hY\s07eE0Z>\q"bO?6LW-eR"@+]r&cboJRr_E9$_"[OA^(huAK=f[mkIZ64ml^J+X<'9\Hf8Od)d^Kb
%Y`AkoblAX(leW\urgV?\NU4.E>6_C#Xr3)Eb*V&S).ES\c!Q'k1%=e.4"n8N-"pTI#QkcEM)9mq(J%.Zk2bnMaA5D(6_j#P3".'J
%09CX^.RDKh+KasC(i/RW^Y+1\9*DPGY,hmHHf<&7>m8jdHU1f^[sE2shZ0]m:n80$hBRPXTjZ6'%lH/E-7p7\P4SD?C!Q_7X[u4D
%5hploCe3$%+NDhK^a:>?L`<"p&kY<m3_-O'X&PX`Qdcu8nOQXcHK"QJ_bLc=WaGh0"4:8u&['F*)o1G9]a%)_hD$=h8+mc&CCG#,
%9r6#-GsQFIljtG[dhp4NmZn[Ogsd7(:O4X?^A@Y-WFhkM2=Ka<DisE`R<apPP:tahl.Z<(8?-j10MWl;7`u1CIBrH8HqDC)Ya_kZ
%ncBg)>M>Yk"!bG#"]%#/I*L*4N4e^Y<=iPd*L`,'PmGT3/eQJSPUHZaC^OaK]F%^bA4@ja)rooua;+5V%Sss$8/;:T%I#\SU-uWp
%ld!CpJ>D--P+19[&U"8P%_FJE#qnP`8n3i'`>(#:bAJ*fo[%;r*'0]f4&3"k+IOKLqm[:.6BG/,;/cq^;&@5EjGl(/Eqd71Qu]$8
%B8CabC)2L(-EMa[m(3L97(X/roa]\aU*/$cmT`JrG9ON)X7=3>GHn[0AX`bV29:13=^T-1Z%-pDhE=-pmc%6SR+2c)ij%lqh-"ri
%bLUbh(^S-YQ8mOc_uJZ]QruBu^.6@5!;D%$[=$t8i4^t$T0Iq^Z>b?$/BiNJ<m(R.p/ffW1!@ECm_,$c"hIspRKKV,e>U?Ga:F!q
%,!L1.JfSTf.hLcCHat"1V#Gt*-B&=rH2VX;&1<n\A;J6ZWSp;'UN$<1/j&B4>R58CEFBWt;RpoN4d'2_ZS"qM(-1j4%g/RRGs<KM
%R\3-.ncT'>V=1:(@4&`2DX.?J(Dr_*ecg_/kl">[$O:.lK`D;X5`!k].MWm26FD=B#]AtF]C`hV%%*GrX1,EM(hQT?*=L$Wrc(bP
%hqohh%/<l:p6YL8\?XDirSt$6^;'37Dr!aYJt"NGlD>9pHq!7r"TQJD2A,5O,iQ:>oAQMK0?"bSS7kG>*bO*7K+Fr&1W@C8P"`sc
%m\O/[b,lbs"*pBB\PM1\"I6k]%kF07)qZ4#Lm`m-A*TcK]585C;8FT<B\&Fq8H,R".+t)'LLZ%KIN%NSj.aONLTt(,hU<?1d=#da
%(F<_2p2%;g_ec<1nsEDJ`kB]?3+P<2,0;LS72\@5o:_.ll)3/Xn=O7GpWR,,2+ZoBq\>6W5OA1(aFu>T@sK4u3?$@<9BUX*?F<n'
%FIliEQY-)?_iVg>Wj4NH+F@&tcpm*sWH[q3k.%<BONkkDC9#I=XYi%#4cAOON!aKbs"251Sh"Qu@0lO#@ANW&_h;^8NgXG4&&_Ma
%qh.0n$p[[SbogV1a&Rg$5jUmm-58.cYA0@b>YRLPDC9abnHjU8=][6aVI@!'A<G%3_)K!Um27g6/r$WP^ZZHBmZ2(Q0d6uc>2[;c
%G#B%%PKB9PpCGp!5s`/pRS1_S&<Md^g7^_fE,VMQkr/."+KMNWJeI="8l_$&`;T<lj3a]4HRG$EV4YG3]D\L'4_dTn*0GYb^)34Q
%R@2e)=E.h*"(N-#RX2V%;u`$pGn4_s<X_a!-F2%9FT:5Bj+siA#1(F&%1H`TL"X3@pG)=nBciBu)\C7>AZ>\dSSG,rOHh<`<cY9[
%&:n"jp&calr&^jji8a((dM#b[e),d#CurVTr^d8X+p\EtQ8#iIo1(M4>_aq[qoAa6n%h]/^B'Z61@^BJ)u'Zm*I^a)ea)3LH?%nN
%pn*D5MKTW25`+*jaJ=E2ZM4reZn!V5c`6ijTP_ZaNs"_]oCHu"r"7^KB05_O9sW6s"gUD_V\J2=TUjGFmgT@JbmTqs0JZ]HKK,Rf
%2[2#Wc(+OSR>2EE\\[*rrTbitCa<2)?dBZpEpj[O?QPte2edC+iDuN];9@BHT>TJI0Es5L,^pneTdfm%O5S20p00L2Gi)&)Iqr-\
%^C-$8a"ZBMGff.m];kdgX!l'ArqRd`Y+gj)37f>Z5t,T(dNS$?S;a5+pKY5=j'IN%-W%gRM^C:PnN2d`H<_P!/bXZXQk['qFdr<8
%97M3O0Sic&1.X#KB>#,?ZkR:;e#<U.0jHt<*C>oG6DZuIP*p3E>\]Y"^qV(i!oTf*JbY"(jB;3`:6m*"!VfhA]75Iq-Uaf(>+t%9
%+m$G\Kb1E+6@K,`5FJ@'RdX5g;DPVU2AdRtq#$hBb:Fb;7L"P(Iuk1,P'-8"&q(.d'u:hko;?%K'?O:]U,Vi^)XFXb/W%Em!H'8U
%H3^Rs%q/1'h--/!WXdORC^N=j_@od(7I:;[Us"0?KS[$L#u7"E#V%##Gj6j42854@P``LIX<`i6@\(*S/1fcs]241sqg2de@*rmB
%;*:#LPieGFI9-;7C).Zt0"#?o@A!dk9*^YHDM/^)5;_4ghU^Ve2*R#D/B:0MVM7i&M0cm%/Ij)"cijFi0NGM-eAXi>:i8nl87Z#C
%I+1jM8mmNJ_I%kVAX4UU9=pjIN%sMA02Lc';B>pp1fQ/^PY:E/_2)MD>4[>8iCT1OA?8Cpic&8J]m;I4dhnG*bV-pr$9*-"Jr"ra
%^_9E/<b[Z(8dFCYoa<G:c>gj>]9%*I03[$USiKsQ!Hlog]mp"XDu\#\rnmaJs7VfZqX#C(_ghI%cd.+?otUISJ,_b'm(`So56plt
%M'bR'2KLm@L:+>*,dcI)'G<4li/T?,"-JrkeenG8-Z^1f6?'78]P(1ujRqBa^,71V,hj\%80`jgC*c1WLVsa'7aE>L!G$MYZ]t"D
%A5;7!oZj7Rlqqm`FgBn'gN4S$Xl[H;X`BZ&I)C:A5Q@=Mpcj0uP4LWIl??s2*uUNh=>EiXR25OTbAbr]JtT?m,(Z2%]+ITj-1lKa
%/7M?2YC]Oi-&VC4%?]iT??\?\2/[?I.NnVH)mk@e=*`i`qY4Q)4SD!_k`T^r(f)0Rct-SeJNJ'fL_FsEJ:mrB&7U[ceUA8(5I7ll
%XZ=obn-E$^X=%U&p@*4;C*R]u2Q.)>YO]]Jp$p(0AM8-`VE]LD@M0X'I#rPACmdjhA&P6\9JA][qM3O\UqYiDPTV9B`3d+4CJ%K6
%+>.cDbELpb"N]>uG[Z8:Md8"$n8,rdLNAu-r8Jk9+)V]l(h1DRTR%?&Lk9r)<q%f34kXGXPPA@!b`Yd44u6^c!hkA_#S1O+6_A\_
%nZ"2GmjW+Fe:8A,@T^q_l&6H<V!Tj")+YWCVJ12_*l65NYD4ug4b[Y\VL9o%TVpl,iaP+dJr%7YDd!XiT#;oWm/R?$RP&hk_bC'i
%@;>hbnT([Xlh]@r(Ke3?oUf$JpD4hk&l"4So":cbL%JV0_$g+"(@gaDB5blm",DW,XMH=pdh*QX,c[S^;'dfnlhX!]9OUJZ:pVe)
%2_G6HcR(cL1?C@.2QM@g#p7-LYU%F+i.?!)4JF;u>q7D<p[PF,0Rqh:rpBgY\%V(kJ<?&W:L>gL9cTSsM#[=JSiLQ;EqEtgm4=+j
%,dt92_(>%>s7o^Gj8U2Z]$uU;R4$U7jpmbD4XV$N6U)d[8_LU%bME1!3dt;@p=5Mnk$<m^g;Ib;/Np5P$-H>-$0Xd_,p\h(g]%IK
%.N=T8!"h\RL-B\o=c3EPk$6>o8u-(B\4"C\Te\Lq]4YR0#HCNirq7B?m,aQ0WVN-9BO[(3'hNTQ.Y_L+!NmK6/5kr\P99m?<+s@2
%9VD)0CE3pdX-^_oD*_(GaVl@3V\n-7DpTJ4DGYkZW$?B;;sFU`4>ZigN?TJba@a`2"SWZq>EgfI`4A9#"*CE`12u!]+7^CG9-:e^
%B<4acTFKTP'I+hJqJi7V!8]GrncP[(RAF/uJ62kL=\R8Ll&bCATeX[;*/W&:`(II7b.NI696=`O7`M/52Ab<u77hcY:Pt7C;h(7#
%\oC;<,\L2K8"_Yhg#7T>6N)$jGRaH9S2RsSQ;SDFpPGTgk[G)S7JUWIdbSnY!MiddQ8fl7V+lh?K;/WB,4(l+<,&Kn`VF7%HoE$F
%nq2T#LRC=sT#:$6nSa$`VBZ#hHlOo?OQ\--'q@m,Rl`qS.+bgJ.TkJ&FauT#P;"U->9AIJ#`2=bbILlqhKPS*]%\A(M9)uV>*:#1
%g<S,?Cr7;/S=:?YEg4Y3Z]J?uW%Ok4,7%g=LOjW!L;_\PXd8$0R-#S2FUI6E2U1Q"M;l$+i$tf#I<EfXL'uLKkm^WooL?ePAV;tk
%.k&j!^6:D#M*$6.Ch9:o!2LKl?mf(3![C)J;h&RrOnHcHAY\'(6Pnj+G"[%oP-;(S9H9%5e[/pc)!SLIH&*r%Elkg(=i$MG\$Qd2
%)P$]E'!i<1!mfsTR`H)>cS7C+OYtUTcA!);!Lg'+-4BKl'6s\>J;=?-\41;3bYgkkN2W;pb_IV2&W62qpoX$T^7oB]q\oDUg-$l#
%]U!)L!"lYJ0&]HLf;>l5'Y,0%@#C+7+T%McVi4ig6dWblOH+e45e!eqQNs@KKKu:F,5n#sbJobY77Pp\3_j_S9*X@BL/CZ;99[rq
%o$<nkrh>;B,';i%,E6"tQ(JR`=3`3?n\`W=>1p>lA]1>m<N>!r.3Qi2&rRe,hF'/F)'i=;lhR4/"Jo1u9gQBiR6&&_WuICNXih+;
%_o<9+["uhD+L?b/,0>k`.U`ss"#+'>'V3K/qh,;jUhYYcD.9=FPa6-.b^3%]qWPfBd90dJ5@0SOQg>hh3iFT9>qF>>Y,MQB$LtT"
%l/%F*Mt/EA@9cDMU9+4@cq6ho]/'7,BsUPu=CeVO*Gu1XTc4e';Fe'cB$&Z:RM8-cY^'mHnC8d5*RKm%G<ee(+o@q>?EG.m$-a/n
%OE![>_,(fg&2i1Q%"Y]//#3e&a)Q@.4!/<<*>-.38OcdF;Hc-R=a<QR^8Ou+XFA4pbrHt/h_o1l3_cGm#+1?PQA&Ae&kPat_$J]G
%J<6_s]@2[P-]HlBF@>\mVA?b'N$Zs,$d"4+Xb1q1Y<\jRh((?<WQ$6dN2psW.kU(t6Pq-0_nH^_KT9s2*.IMF7$[/%;Q0LiWi8p%
%P?ge>3>1/T'4#m`-mK?SAi,a/eHa5(ONC%9Ft%dB9.i*dV63*TWXGkfQ$cdbbIGfYN(1'DG#7emZc)t<n0EBCJ<qNTX,Num#,`^6
%FIfc@VEmQYh^stsG%U&/pObNkF4)`!IlRM*Nn5knR:BhnM"*=pPU2K(i0B8rdR#fP5t:bR_r3Vd=3:7A1A99(.<pZ+Jk;\-89!LK
%K!eVelFL)]LsHq96j4NrGV6a$)CbG(3"+W78.(FkjXH<k5b(C1^l1f6J4_(5ml1(p1.`ciE>n5@;+\%3/*RXtj=,1D$)$X4K>VW?
%;XMn-6_uq.=Hk/Ll(e;V_`IRgBXp^3o2%)5Os+>A#YM'%D,R>H<=10sA'C@t_;TI9Qa[F(f+/.F=+</H.1ALW7TsKd;Fr9.:!pXb
%W&1WpGb_"3Cjr?OmRlYuPR!,PSiXb'+S#+pMCB$M/&(5Po8[9?HU]d0EE;DDAsj8>R;Gnm1Bl86e!4R'5BlBA&l%o._h?m6VV&mZ
%<_cG/51[`kEqp+_Digj@28u9%S@Y((r5#\_:,PK/LcGA9f2Nr@CtDAibDRS3bCOJ.KTZY.nP'V?9cl30.695bOdJ>-7QGUcUgH\e
%^rq:N$HV@K1Y+!-+((_;SYD?RrNM$h&(]4;$!-7rN.k.i*$ZB/6hgn4r>fu9o>NXNTomFd7*4MWL7KSbj[`m/Ym]Wsh-apTHfK,L
%Z7-m;,mHnf7ZkrXmZhWZZj4jqk6l'=c&tW]88gfgeU)<,&<%2=*Jk2?Yu*P/():n;UN/CB8XWNuWD[:*IELirVKB<;2A9OfKU^gd
%?:R8ogT=B*eW<`&e?4m82UD%$YIE=b8aT'p`U'VS)7_!J*lY'2aZKYR3UJ:6Y"m&_F#J?eL6Y"!$B6gMhscSBP/de6J%6h"&e9<d
%*m%RD1TJSm\*6m;]'3A8$T:06qcd'Q1jiNJrMA6S&AAhS[pQZP>$p.\g,5Z;e]<I?9@7IDFA9Z5JX1$*FW"&>N#TrX2Lm+Sd_=dS
%"6&!0jH*V))jkiHS>=69%;>Qkdkq/h%:84McuSMKb[aa>jNNq%DG^QZiO,Yp'c4=$agA!U=rqdK".GZB(Ju,m0`:$p^47hoE&tge
%ZNSWoEl0bRb=0IW2/[NlF5YWmDL$i:"DC`$MtTbEhoGi(;'+$</J"/g`Xdb9d-/@u=Wi7mPdtYfQ6A%gRY_#e0gJVrPGcb!*ua?q
%OtD[O*BGM<:&&%k':W=5W\A%U$)h!>ONucQ5/]L7@+Xs-6q`AT[rH"4A`)/B[buFHogKMFp"LIAV$i\3CYF*0E<\ut_jKN@3.hiK
%c,`c$3.lT$gA87#L,hWCS#k0YPhSg^WuZq+RnNPa4fgF?2<tZC2jS>>!a94P%<Q>3Z(!`\J>o,Pef"*V%ob?rT_bLRN.Z8-(!I/W
%%A9bj4[lG.X;YC:.C[UXB[QBPAt;3oi`,T_@\0":l]hVE%+8K.9/2lJ3:h/1R<\uOR8p@(o*j@$]:(t>4G-*rk-(7ed'[oH@Q4Qa
%\f/dKO:\PFiXb$\B3#g'cRe+u5KkpFOE"B80H82=,3G9n"oCtYK7O4[]PL4S$Om0N]d/N'BJ@3CF9=JLTHcL=Atm+fnB+k-*$Aa*
%RI]f="BS]`k['$^U9Wg+=D5RW2@E5]r+;W_FpYY)]^Hlg6A#L+D*M-9!brJh#YFTUCUDI4-*E'mLP9=m^$KVE%4d/\]8"`&Jjce[
%rH&DVZMnH"Shl#s2UF^.\l"L"JHiD9B(>2UDCs,WF#;5HGmG1SJ-H\3dL)R`Tjd3[ABm\KBY5dLKnaHQCR1?$XCM,q_>oP#?M7rj
%e2g@-'agIfJS&(_`kt-\$-G^R9af3#\RM6m+Lf_19>SYY8=N"f>^rYN+^R(K?[L\@mZg#"h,5-,][;cRKt2BNNQN1Sr@,mAd&oH&
%Kl^/$"^be$ONs#l\ktJF1k%hQLUVi/)p6Y/WZn'*!u:`Y"kukOs7(H1g1h(N1K:)?WWl1]T.rSabuV2HnJ$`0fe>UKpSXlur7Q$6
%,c)3@,5#RH3`$dgL?fSf;k0:Z^-0^,O"[>[rnn[k6oIWYdBT9]-k=WoI4Y>61>qu__gMFXC2.rg9It@*?$>([jjQ#AroQPuU3Yl"
%1<:E"PSP5_f[1tV.]\T6kMDk1BFR,$(1TBqH]_K!J'*1EMI/G;acg*IK_+];hb]i+J1erC%Bh!:9eEX3#+[>)oOY]^M-t[5Di4N.
%?!IWVcnL\"S,P,(T78nqNe02[HC;j6qR@^GJW.9hFPeJ/a-RHr5lSFUUdIUtV179sAOCHX2X4eW?RI(A[)N=?a-W!r4%$BrG$kD\
%'(A(C52^!Wgk"lt06H@T58\?oZFp22jd9aiH7EZ'5U;-'/LsHbfA^O6+:RU+!K(A#d)Nq(iGDjnT81`2FNU_ZVq_X$9Ri1/6Zp@&
%b^-%onIDO'MB"CMq@ST8c;=_>0PG"3%]-;JflD^/?Zu[JB?P-/59>Sbi^Xk275aI4ndW##K5cr1drmD%#O09q",_-WNU[iL+7MU0
%3Uh1>!YWLdUFl`ID<t$rp<`1K?OkKOMP(U.V]GJVGTW?ggYr(^[MrS#%kI:#.K=XX=3E/p6AcjsnmT6S]Dj]_&#8qalu/*(ldOHu
%gVZ5PYT&)*2>o[\@;E]_03e<,kh3L1O1"n*llj+,+1?p=[YOY=4`!^YHe4bBSGV+18^lu3IqSp+LDJla_h3""f<c*]kQdsHI=?YC
%Gs1)6"8[/7[Saa,B(+L23PKJlIc%l2p:.$Fn.2S"n)ri:"5O4K__M(4G^Otn[GNu>O/)I4ET6FaHp>]E%fD[;LVL`QB+tC266T.K
%LAE4j3"jhk8"p$*SS<rupZ75iJBBueOnk9MbS.-;7Pm]#S>7DRX^S0g"^Y;*/P>$[<`DEmOJRXB-jD@ZAqJhD>q_kRBo#pOV:Db2
%UbWuX&7J4s&u1n9/frt7%>*e+d[P\J-A47>c^mSgn&7*:@%-kak+NqID6PB[6?<27!imX\Pna%LiViPX#qSRC0cJi7W3j,3/Gu+J
%a^BpD5aK#-Koui*Z>arrrgQk3a\]sq2.YpkJX5RmGl%Z*@/)m/U/D?86Q%P<0QL]]BA>j-[aI\]?N,`>aJqtA=\VU,5Z;l;WhF)U
%LiSn9618]TX*G`lXHg0%JA/eM)OiM)hgh/Qb9gMR_*^kn/Y(Gm@7qL#cO7eM=>I2YAb6E0$++Gm91QlR,OYrd1N>UciLaK%dc8[Z
%Y_fFc7,Re>`lIGh"gR3T?5RV<>OP8'pm4WZL:]+^SSX/_P&gqu!P6&TrA`1Y_r2'Nk^LF!;3RZSNB_k-@^9[UV/;!a1k-MoU,:d.
%Tr_8U(An6A2gda%pZ%=,CB_6K&hb&*q>B?p<e`OqULu+WC-qH_:8if@:T[AtU_rd.'CFelbU>6s7t63UIa`Bu%/KCMLDtp`W^QIp
%4<t58N&]g@!=c619Y/tS=l2QK9uefP#QWC*Wti8ingm,#%hoQJM3;k,^Q+SmESU$O19Dg'h$'m2F<No)g>28WgAQ0Xo5S#fj!F\?
%(,*\23-(&EaB>1DU4=(BUE5lP#r)^J&BVVf#FEFc17C&39p4IpL_r1H9>+sM]d0F4]^6>dD#(*An!S"f.4l=(3):3M:'@akrYFT`
%TjujtrV8EZ%md!o$FhW#d9crXb]B,88j^4+KKB?gOCfnac`&1YRlX31<(SK0NG2*m+=)(Oi3q.2b)AAD=qSA<;C*HfB8>q"W=fbP
%+/O+K<1/lXRZhjrXt)b@!5"0X&4i*J*X6WV^r)=-Hk>p.c-c^P:=#Sk0c.=\<!$UdoBhVCU^Z!Z'DGjeWom?Q..XqD2QseS\AB#;
%s"#cs;_!?!Y;XXi8p!`8Z]'TAS?Y^#OW:[k\Q4+Ij$^5N<1Xq*.P^Ke._[Y!l]V(SKu(Wm25Lq!eSM$,mQ<b#e<)"cO=esq[H'W,
%5a?"=4rAa,PY-mcL!D!jW<>8:]5oJ])O-<7?8/5H5V/ZCA)Fmemor7-;%8#rSl&'9Hf?%#QBVkbC.V;QnJNqPKt?cB;AhZI8OfPt
%jCMO"JjVLO@g#3?<0YAk>kZmNQR#N3Z;UG=&h3ocYX>-\.>&)-gX%aO1.'Ym.O3Y0Vt*6D<(Ub*Ad^C0!KlkWQEqo<'$XQXFHBHn
%U`33p+?@\\Hd_*S2AOPl"pTs$T@U)9TVGY)$rP0?2i)15Pgmlc0.a4<kg4aP8VB$65Ns6/XNJ%<Wb5>'$dA/h3MY8;'EVI(7;`e#
%6>fgAQs#[cR42/)Y3K/T5T/e`h*_%L0-n`M5uQfq=AEE-S"s!r=^;8o.@$.HB&fU7Q#'$tBkJDQCp/ojgN5Qr#%oWf>o!LYpAYcT
%nnZ&KW`gRpYu?!<;0'Yh+YA^'KCI)?UGphfb/[NmTl[Nk(?tOS3!H`_fC9P0"a"JSh^RLcSEAt='2sL)!LY?1$!PJB9WbTB9oj/n
%C*hiVK;7]j-AW"ZO;preUt\CLi2lpB7Me=$b5O,l3#NmaA=HKbepa*1$qMc=+eU-4%B8"*k@EE4F)9#G%3A'`CA'hq@$ldD\tO6R
%$+2CIE)7LL_j@`Sra7Mlq.iO0$:hI8r@UIJoXFQ!X5C$%Z/oe,9kTWo>1k_'Z!X_Gd\fe7eZ,?SNm[5f!_,qYJZN!*V?J#)aR,s+
%jc6jmnp35#W*KO&jf>c^#T^AS:q,QcH8f67Su8jaHq',C6d5;\i.e*`*r+9Y:NNf<e_l0c?cU\>5iHHsTQ2pZfBoViIJ1/gGk:XR
%^cSf>#2\+pB(/!anH9-t)K#c<:#T^"XOn+M+NjBD(BYp.VXf$f+:Xorr:"/\*isNi$kC?3"p),i_1%kZ%/<h\i:W!omo#0&>R]6i
%921_15nK2u1%9`S/dCd^olMq(>rsW2YLW!FD!ZF5=ba=_8sWdhO!7VJdaQX-b;'@k0&,0L>R&:!Pq(Hu&Ls)QG(Q#e(==Z>B(?DE
%]CBXVV?h`5VF^=%fOhhB?Hb(GT#S,0X5V"o;%Xc#MNI31;6hf)_uqk]XDYo$>(RXY)qS>pSh\'?-4f(m8*1U#bT^"K_<aQIQONh+
%IFNJFfknM[bT^4:`JgQG/2IDY-]k0&ff[4^"-HX5\6,OJ!GU"8E"(-Qo$TY>%&cQO*tOBCg!3R"OE;h'A+4rl0]T*8BIaP]5[(X]
%AX^OtcHTg(/\qj*V8^.kJ=9l#B=283DQI)r?sQ^jR4\eXr2^,F>Cm`^W-V_cbmXKS9P[uBDenJkCf<WkP,F\h:rZ]N7<-s$9.)54
%j_<nK6a^u['NR$,NI(XcUXc_r-CJl1ebYFlac$a:Adu"e1A!?bhL?'D,dS.qOr5Ckm5'sM0H_lk$FD.J;$(R!1<0eoR=2`,_TQUU
%l&k%lZZdiU7n/ZiY]Nj>joASNnI?/U6S$!oYIV,oW`;Z,fb.kS];Kp#0f/m)W+osbq&`eQ8kp#\k(orVoV9M\p'_*N":7u*^Oo\s
%#otJW:"W'U&oJ1Edmk-W00>]K5\8^j*1:f7We2f&7Sr3f2n:*n!+'idq4!Uig<ZHPjDYCI/0J50QZI4elFQ^,$#+pIAo1jJ%jKH6
%C&,ornNQ7l9%])*GpH5_V<H>Mp.L=&!M#L=%ktd;d&h+fr&gu"!FiH2fhf'D)pJ11jX)?^a$N5+c9-9#bj6Ue]"6F+.M5g2&BBSE
%fbdVZ5pFtJ-H^FNrYDmmr0d`uK05@P^T&3+!`Y[[0VXEL`/bS]7+Cu@Ye]7;nA\!kd*dqVX/U7$.^JrkKGTlChh0huJ%PN_r4uUI
%0@P)ITU^Y\"iTc4+d)5`V.RhDUZ*=+k4/SWV>SoR;N:.+dZK3Me9j-B_XWT5WE\%BgH$urWWJDJAS;ReX\CK9?_.X\)`^g*/rPkT
%DA5T1+Vg'4S2C4Qd<hXa?ZAP-:b._FE<2MsV5<^L`mb<a%m("Xo*N[@)G37pBKf0*7>IT0LQ>EVMN+`Pic`o(9Xfh@.r0?H.g9@D
%"RX$\.m.KtW^`L4pfsudC:6$;QE$mqEA";`Wr^Y.iq%0eGhHHTAV;@A1P^HU=hJQ@G6j@J$(_&o#CjJ$n+C2DW4O5PRRES\Gk]Fs
%@nE=*NSiN0L`_%lYC(Tp_sX,2GBY]*iG8k9%CbJd2njGHN9!i)j;3s4RW=pE"EdE0/W_.kd)_N/<P,8\2eltbZrh,RW490m4pK,+
%-c2BcrcJ*^\X#q]6db=$1!8-AFC$H:pI68Y($@`LLnbncFjIu04k?)^F[Ttrm2"O,"4g5#4Yl!W=Bu8r`TQ[7k@&NCOBUeS\VlnE
%_!ng,T%/Am$RLn*1YrIV[/nu_YQL^$iT!>p.p-G6r=_cF!D$/#g\tbuUWK@r`]>%s3-;7bj(>\(+Qsg'#0l7+:,&)NfX]LtLN.N:
%Ga_c"X(R[\::%<GE>jtGLhgOgDkr8mZ":gh#CT1kM^V)&TnOi,0]a]GV%Pqk?O+X>?5g!'iD,!DOSduNfcq0#-O>H)U)/=IhCjZ_
%PU8ga63G5^Uu<!8C_R`5"@Un-GoHb.;M8!VoVWY9gN`d]+G_fUF)L?@XG7uo0e#gq/Oa>o2[,/s'Qd$4g3bi(h)3LD!CK;]d6-n6
%r(BkuB^E?N7!3u/clht>H@t5>\psU9EpQ9aL+XQE#E/JNp-r5i9pJf1+$gE,CJohrRqR]dY4bbq02(Nlj+-KEpg8f%*G7cI;K`0Y
%acc!EfdO2j!6LK1&]=47bU;Ef!MO+*lS"DoA.HD'3VhE&lN@Se-M5)XAYOetf%O.%;"+6E3,9HDs80JuOF%@1e1MSJ/!6sA\2#tC
%r3T!%+J:2Zr2(3r,EsIJ:k*7/i_,.kW3:i+fCVE./qWQgEZIUgLkq!=2j882E$ad:W8K;S?pUaJZpAX>0@N%NC&Sk"`TOC:qiY3+
%L5Fl([Yu%/&1b6m;A1m=W_mrTNgM(XeY#rp0,iBrL(464,Xe(8`^unUkte5(`?Q'>X*Hmbb?$+:dhF"[B]M6ObaEi0EM,s*S-mZ2
%%&0F7%G)'q&REFn275lW5-co#fYDM:mDfc6DVZ%3lr;l)#*`_d5Da8ClZ.O_!@$3n35l&^@l^2-^*o1N7jf9YHsN&D9N_Y0ZW-?L
%R@MBg>^6<7GV;NU:c"Ba#;HI]pG-VsM"je^56dNn5V*/O`M(H%3DJ)Tb.307N<+%g_k>G7cD?\,_PmdK(J_/uMEiLrC&*;A^/o6[
%?d^6GSOVYfZq'Am,ZH[=Y7rh<bE>!n$9h?bQ!-d.gk9*(DlYj$:o7eUhcgMC121smC#/Xf/N[>?78ZR_:CSr0Y-+q`+GA'J7NZPA
%]rGFrS?K4]fbVkZ'&^qW['Bn0do)o!X<h#;fM>^WeeWoSIZ<2NY]NgK!aeTXA+9UG;.fb>"t#V2X<Xl[+r$)D_M!DqiX=E`RD=Q!
%BZYP6T>MRPMP)F/Q`?:K6B/(pX%AuP-6TJqDbXL498Fr:cC*"^N]'POIP!qiRrRgnkQ@m+@R,]\N][)WU=VlP)kPIULB$gUXdh'0
%jQ).*Ib-0eS&^'#O_m*jQ6Muk6)\/Xfq6<kb^n0Bg&$,Grj=H&Im//^#uQ/:0J8*oN7Qct(md`L]\uYGf%SC',64TLgeqHJ9:n@;
%$gde1DuY34n*c=gbK0W&F=MD(qN`iOrrZb8WQW@*6Bc!uKgfS3:f$4.hC'lH1s,BD6^pIXd\C:81-63f0RNK>k:(tuSJE3)UHfQV
%&_lgFe?CWfa^VIRa2>"X]Dqf]W>g<Qeq&U:!IsAQn>FRjZVTDpo1pBSC*qoS^tnSms7hq1qTHAFC=<*+jUWeUnu&7J$X>isS#$Su
%H@EQ%9^W-rNXA5u'"L)AA?SE'=Fa]rNs"C'HXmKSg4hU8e%5;7Jt.UZNK5`N3Xh7mA6shcad9a1]34R6J?G$Zs/qJ+"[&s@LcD'%
%'[m"bT^k7\&V*>^5MI"_/FlNcfZ33N^aI6\7oCZ.-i$]>]%K[kN5T&am*uSRZ"?Ls[bFL1(_P`PgCK<;>s)TM^*]Oj,%cKO#8fj#
%`ec`ac2hJ'b:!L5'nM)Ym4X<\+KG$Z8MnPEc?AUBpX"fm2R_#tj\r=AcmI(KD.r7m8/?hs?W/?U'"[<clSpfW\.,fK&@4SKN`-6`
%=H*ug23o)UZAQn_-CH:(%$90pJ<K'P'-^;[rmXbh;f?B8q)*Lj\Yi^s]<YRHC(T-f]#e8rCiXGpn)W?A1C&I#0-[ja\*%Lok+nhP
%OQ5c&ke59\aeWUmC8no#A/aJA-p>c7K-OBM(9.X.W!^FsrmoFC+j6+NmbT3?.ghqr,-PIjh*JPVb3O#\h&\n`,G<4#RqA8Q$5jU/
%XUbmP+N%AVZJ=fU0Mj?.WQk?EN;EfiGm?%`?a=q*1u>`)Koh)R1'Yp,V)g"gUO:'gJ1M09A94G#M6N(^I]15BAKuU"13Re\8/4T^
%?-s2u#A2_f\4:9jGBe)+h,`?YgiAV3^8_A<EGJ=9=gYN<e@gDd,We3VoIi*W`/pc7SH_1`i6&%\gYiEoBWu9+2f)R4_gCLPhuDW;
%K`0bEX9qe.FbS^j=2O8B5@-Bq:Ll4)6_g1-kkY2qkb"HnjA_iC%F8^/b1RHi;BVbIfM1AD!,;7SaLZE;(,F)PlPn&p5W6M!WFQ$t
%+g3oh/5_J!eH`"!$Im?.-u%0tF3[p]fmIOnAgK46'ATYrSb"2C`];64lBY@WS?mTdRR7/HG4C8lbVUV6$?RYd/KrE4$gDIN&+(,1
%+D$p/jOefEm9<m<llL\WG)4#V%1?8of%Io4NA_'$'*9F:>k`\h5fPi(d3p&1WuleE7^:]dGX>]+Im+58b:8$(^ZDt,rt9Da[g^Q1
%SI(L8d(LB]^00)p@@!o"+N*mQ=fec\m7#*E7OMkXHP+f44o*)QV\.q^cnnZVGMF7dqg\rlHg$`k^8NgnOR\ENY>IS7^XKeoi5;^p
%<&&8$OS*e;m?Lg@cieuQb,ddq)RgNV*Og6e)PY9'^TRD;9!-IX2\AlGgZ'\Aj"_ABM%ihA9e:1CA)hs&LunbJc:C$LK!9pGC1a<Z
%%hIg[4@i7+PF3`@pj7tSj/<k^.';#b/C?cDp,L>=5\P.a(opqZ`8^L[XB:lQDN@$6$5OPha3UcC[c@)67&?@%\33*bV!($k=>1n9
%0?Vb(gZ),-(pPCqbi253?\!Eih#uKlp42jB-k"0Cj?ZQDNS>]=iQE"G7oVY94$jI+[uLA;eDg0sP];$eOk!WkgB0dJ\F2.iO%[Q\
%.0K;ERCX#ciFTM?!r!$M,[G7r6.91u/j#Y\U<.@'bh)46!\`N_b?*n.036U/l:4C_ap_"1:rO[=6eYMI,c:S]](Hf'O><0']q?!1
%e^8,/<93+i62ftFI+1s=dD'BSD+B(>NokU4<;=8Zaf((6+]#(HRO=fPQ3R$MH9&h*cLN759flaK-_]f;_8u0]W-bJ'A9h3l[FGX!
%_;eK4'kiMi=e:/fo!#G_$ONY>Osc@jEi@qnCp09..si;1'S+W=":QQ$Q8O&tmOV/,&npE1Sq-N_JQ\QVg0(!pMY&YH4]to-VKnmZ
%Q;4p<4Frr(7+49G1U#'>j@pcG;ogN51Cj?.nr0MYH(GjIC)HcC=Z;f2$-9dO43NhoQ7X\Pk7M@OR<)pu5RUeA#ui;g5^5J+1s;?L
%$#&W)QK<sS0l9an498RdOJ[;pOQCasoIU;VkBV)C1d6'FGnTf.@-2`lJ=+$,H(Oek7A&s0:\hSu%PZ:orMu5[,l.ba3P?aVE*S1O
%X,+c<WL9?.9G?tjccU(LlB+!rIOn.Vn*ck4)53Vc):>#>H(rOT,a9juM4'rgMWK1eVC,5:^db1KO_$Ug8V5;Hp"_De?[&N2E"K?B
%OC]_AVC0`]H()?]*kOR/oW6hs/VV"R4Xo#8lOH@CNT.-MkF1WQ(Wjtp4;XFIFGdS4H)ug*Y`kfGm:A".bk*GepY^DBo]/3/iCTJX
%#,jG\nB4eW'=(lhLha4C?g$]:P<HH8Y$r!3=7T@gTgY@9.8@7o.7a5C7NTkOq[$Ng>d:DWrbSs!/HnsJj'.^LRu.?bAT<5img[dr
%a%dCh+I41E)gpbhnT#1?R[Zo6SjNaLha=r:_<0de`Zi6/Q,Xt/+##qPWo8-CMfiTaT]NYM0/B8#2H)63!p-2,NUFDdAau)<Hrn$`
%alATS?Rn/jb7I48>=`hHL.`N\m,TcbEM[-8ZiY04q!C%QA]:\`a&YjN`3!g":qJptMhX[_h07DC;ed7%[Fn=f#FkU,$ZAZD(phB[
%G)DHfEBa_2fJ_B8iamJd)0hkl]*[2TWa5q3"!FSs<lo/SIZ4Lp/Gh[8[qgt$T*>doT5_qRcG<f#6/-HY%$nrt]tanVKq]i-MuNG(
%'ulnTF.S;TiEi:V6i<UGQh;hW-mU7EYk[heMd6MD517@d)dCdYWhbWZ<i[64qDP'r'>q,$54!1/_/a%_5:EZn\Z'0[Hcn=nE.Y$A
%e]UXVZVuhW6u"XO3Od#oru_RHg&Z-r[C/XeOD9qV8&#NJeRpKhi7*^MXPZ>2%3LZ"rD8@u#^dQi-86kWrT`mU.f+.XPsrJW=57_=
%7`-0e!0-=3cVgs$O,sUA]sM(]5Ml&2Jj7@G8YPNM_oN[Fq+DKgjEN`^EM?a5><^=k4JVc_Ci#^;5t0BYMG[dfk:F-*UTqnbl/4Rk
%.'A=SaS.<6+.+gbQc=ZMNLdp]FLK`9d&?I2BCp!ig/BUlb/6/`YO-WGkhWJjd?AZ23nr.CT?ts)PX5:L?5a^.fUi%rBCtXNTOeU1
%TDl8f(;tF3i"8)<(sG1/`+pe\B[rn]]D"#<>q=92iUJPi9qj]hhNnB\)uB?'a#6)`SM0_h9l9V?Q,C*&lH`XpYe"L@Y/0lh6OQM"
%l%>iQ*tU"^5O_lIiG$#`)H%dekmH<umobUJhACl/V(kl6/3`h-ZBpXOOC,^YnDb86T%GE6GMgF%`ubS5Jnlp&9B02HPP@dI3J/?+
%^MQRS-V?`^J-1)H&jk(.K(:@>\bgKt(\UP;OB/=U0(lO7fdTgPN"G#AJ#M+0FU^RbCc[*!3UC:_m7U[q(5k6(`r_1nAW_mmI_"^X
%CV8;JainK)B5tFN[O(mS`D#.RmZ=kVaZCVVXcgL5]S%FF'ZpMq#S\.nr>;QD1&YT\PI(Kjn<)n9Ckj>DK>`XE=sDs8miWUkF_-Kn
%E):u)rdhd/U1?4$&.95GZ0cf(rFP.NJ&j:hepY2]g'Repmcj%nr/kt6>6tDkK?3Yimt&,>!>Vmgq/"M^FYQSE`8ZR)J;YD]-:)Aa
%eef6j1dK6Y)FY_;gLYqF0"@tYp1Y/"N2SSm10@6[/[eo583[mL2##/h0Y;00/!,Pi0A/DJ:Tr@R:"u_eT\I>eN0$X(AZT2BooI?l
%Z1/8i?WfijGfLO&2"X'KQkM6[%qq(%';_dbO-i1feca*uoLm=4LBl^C='iZ=6[np\`fF2#46%F9?%*`^5I@Pc+NkJam0U'9NT]N>
%+Y0S,jN9#98*O@2#D\bE%]C,#/Vn);3A\<cm+2\rMU7EjNFTF%rl&3)T>S;%&'@BPaBN_Ydd6J7\R5(d2LfP!\!kYhJ*tfh%#mkL
%'9]U6U=&U%B)u#$3B8=Q(k](XK"uar(g:FrTsVc$*o?V]fi)[k-@WV%g)!hL]YeY4o.Ls=HVWk.(I1FV$+:)i;FQ&W-,e"?^\[dk
%S-kMIOs!'Se$nHlk22.B$^U42/;Y9=Atc1Q.^f]_37QbD(&R/^l(ZiQRBcoW[-#i?5$uKpIJfFfYrFjh.hT!AF6q%=p.#0tNS3d+
%Nl:0Zkjut=^Q6[\A$b'Fh>d:HcKVTH["f['Mp"B8[9eHX#$iRWY,L8peS+t"kWCdSXTeRJQ7lnCmF,`k2_3s,@dcY&&ipYuYbqZS
%RM0#*?$YnokEe>\D;ZZ631jXB"OkRXOY:cbk]s0F)@d..<&+;&,$,`^j\Psc4ST]OgY.,2n>?P_LPhegU#J;oB8(g\5bU%?b#X;,
%p&2=cOnh@W$8TFtY7&DE^$Tp)c5jq`MYNJYO"imk+11Y.J6]#_<)1s4]!5Vor@'t>6Q<qJ%<&0*g?tSK1/[s?KQ_,TWm0D(o?P%/
%c(?!8.)WZt;24h4pdFS51MJf[Q^WGnG_NW7rO2,i\I=6?"rZ8bZ@D9E[m.0lfU@UgX7tA]CMtHhYC15^pGL+UY7n=7O\(/bfK[8n
%'fDqLL+P(Vgc"utOoLKPGAG`>8[?:k#PpZTQ\$:*.>?[8+(t.e_gqBR[mKGTKckRKM!9ZipPQBFio],7qfF?h>!p-*ba%]epsn0T
%0$?qg^:358O6uQ!4LV::Aa`Z;<R^ebBY@8ah)_OB-bRa#r-S0%^[:Z?)kYNmqoK9tEKuDW@9OnU6NM6d.5Z6Yialq%lZkqRf=V!&
%S_!QJ*QElcHoJ/<+'4pt?7d4YZ;YFCg.QNT;6k&ggTt7bI<k&5kP(NrCZ@5In#;D:A9g35;=l@$W0#^*2qW5HXi`pTU=]%3O:a)-
%6'%\<S:5fubJ13Afr%W"baZ-8/FQ,[Jh.A02(-%3]COghcYn1.g;$5Jmm!FKhSo:!W"$W[T0?@]N#XbMNJ@FdTA,<ZO4Y#X\)uQj
%IH-Q0EOf;aPqq[KTr1<ocVSCQGb%RnHhT_=mIY`ET@&-ako6KWU,iuSHs1$SnL5C.2S+5PJ$.6=5GH'jd$fH:oF97f`2-8q(92_<
%DCB6_)tipkf4eS5](c#KVr-5'N4r*RhbYlkmo5e_:2dGl(W87TYr)MlX;XCd0*<U5%MUA+cW+p\^tr$CY^2W.>:j#T"%^o-^`1M!
%Am)8_%+d%q%'q]#;V+sfCI7'(KVP[)R/=-],@BtierM@Qs%M.$;O.O29Be,gFWgR^+SN>^kn(_q!mi3[?%-E/qHDCfl<k2Zdd[*\
%?VD;<l`EESCt$`cDetTq$lqqQp_s"2#_&.0cOQ!N/b<&b)ij-MU7O*f1b"n#-Y+K:#.`4WS/$mf$8[T2QXmk;2,Js@k_%@(:r)NR
%DO;@kD(Qb8Y`Db2B^"A.JO4ZNU)/D!e^/&3105UZ:('F_#_'j.neN;LpFG5GJWML_?K"o(>^+N8]%56*_Gss/"slot`e[0N3'R/3
%J\!O!%M5+_5IK)R9[1tB+`qG("K\k,Ju_4n1tFGS>7h`,H^d1,LCb_5a$:05.LPd@$#b15L,eocT_n]Z8I2u)"#OQb:\j`9BqPKB
%IkDR6'Zm0IL%4M#HUTZi49`6jaE?kg4Nd&EdSKP%_R\?!h3Up%J'E-9*PX?N-%BMM8NsimFBM&.;&+\sqfhE?Oud=)rO[6,kq-#g
%!Kk+<cSeh0W7(be;RfZ^hK0+_*+gF++N%_6"ll%$!"np[m[-BV_1jei3a^t*5Wn<T-G*5WeMh%L0G><!4hDpq$%?Ek)"&L.C.L,P
%0r+*okJK-sW5u.80)rc>$Rj<9>6RN9LR]!ia)pDI@r%MI>c^K/m'\VkQf'L;4YHLm,[i+!/?J?nP5)uoVPUs"a7mA0ct[CJMC/Ip
%*YBKW#jRKS%$g+^ns?0O'4I7d>ESP+ku0r)QOmmDb[;,pIrYjRFt`j.MQ>ihm&0RPfph[hLC`h+Y]fCOZaRn7eFii*fr$r?fO2l8
%6HUlN)Td=pJ27W0'Pn!F(dA;gZAOLq],;&oORdV8gDbtdOfH:"h4<q%5uo32aki<G('>s71M&_ZX8k8Q+4trH;<h'\g=eeS2XS:i
%8N-LLLX/i^!?o\.!\hM.e7?YW@IG%.-GSS+b%#M`GI(WP5t8E&)cNi/:",iP;b5(MgI56J,2jENdu4Srp2A)&[i](VM#N8dhdENg
%aTfCLOpME!9%-e)+X$"7'4mgl:b)N?h#-p8!k:c_r5!S_Uca.HZo6knaE/6nTLddeO4*]\%^i$H^38tA<:XO73JLK"s'/`T(!=PW
%*Y92hM&),4jYV*Sdd;0QO@5?)MhoE=H'Fh$2@O=:l9LW"Fo*<?S9$:RW-kt\!$"t,c2d8EC4=Aj@:@Y0aOCn`pjDY2?D%9r0hFYa
%Loc#&#)BA@ESlitNp8Yl(q&Y_KKW@h\3pl^@C@BH8$_tETst(I+R-Jj$j>ag52-u*RudXZR4s&W_*oQ_1N8BYMF"tZWf=!Bq=u:^
%:AKRCb&c-41j(J^([IfQ-IfqN[co603`FsW&5KnETuS=HDQjZ+ob:07JfNCLj*MMbk$J@-KqI2MZ*(=)@@>Ss:PBHq!uYbfKi;pK
%EthB.9BoA8oo<4E2Er[^@$a1ahNgoI9rU9H-^7UTD*X=\E7hO6*JAP"j$igm02omD_5S<2rX_bnBa3f)g7,/9;`]Ks`"*??::JZB
%;\%5i"$ntbd+8[-01!SU%CZ#a!HQ_SSY_bdJ94,5qA?,P!jBeW<fg'-@25UK7Vg]iD;1#N;(XtS*u2a+DHLjP?.8PUaJKHQM)p9*
%lD/a)5rN_[b;s4`$*%eKi#\Mf,tsr90P1omD!EUBq34T]3ih)V9P)Z^p0*N[65#Pn3/VY@0PCUrAa=_;fTKMuO[!pK;`:=5g.9d'
%a<k_I>>c#,jOj)^VP5MiHROtXo=C_U[RJZWkW)'FCdBP)<2mW$df?l1@Hdc_+A:-Zdmp_1YT.\`^5*<3Ru3$H>4m3NOK]""W$Eb+
%OFIYZ]o%IckeK07*s[Tm62>-$6\c^S1r9bD];,r_%TU9%h9lc25q*9[!dCj6MR!gYX2ofui?=<\RVdY1;?k2kRf86[rV.DC,DtoC
%$M28s#hP<>\[MW_+A:BQ!n^Y^n:PQo%YbY/:nU-/XPOUYR+9/)b1XcUH#KWe23V@\QSM1;r7BAdI"m(Np*+@ghI49ifN0*3@HS=V
%"ZK=OZPA!c%>9U^[>0ki7=I3.bYO=<W6quX":]M#W^&%T-,$0ADTVBa$Nl+@#JkQmD<sNl1ZkJID$:6bnA/[/RQPuGMUmZ&+qf&Q
%Eq*9-msF#7?T>rdd7_e%_3ATF*c^Mu[@[X5eCd/<+V?V=VLd;aO\q%O9.QuLA79^*Aa8ep<JLR+E(r`n6oDco4MF1O(f(4M'N!#<
%BsRnhh=,*cWNr_1C3/h?NB%W-#q]48C:k)#kPNegS4M7irduW'dS-E2&uj*t8>[DXa,5'-A;UT.=iYW*!XcA43>a;aOA0N4^YM/C
%,OY?'Q,ge&-T+U/&'[a<S7T`nA7aU17i*=($tMe&Y_Um0(Ep)W$n8=fhstF_NDtK"U[]P4_4rdVq@7;(*UjDB=@,P!(s/"G*+S2+
%[mnad/j2mO/hrGs+MZYH/C1JM^u>3cIZL>$5Pq_MG=X;\G9[_8,"J.1_s+aHPs_2!>W0jf]"l5pgEP-jjbF':=:CA2Vsgj<aM"d\
%o8oHk"#sIfQ0ml;pQ&.uWN>PSUf0h7K(/A%E3N76.n7uIOB#:kV/f?Vap23Nh$1D^q9+Uo=#6^N0ps^A>h(+fX^=aI_=rc,%r3*N
%Hq[/Y\>Vl2U@'\,\fl$W2*DqhRXcr)fR;`E5fhk+Lj02;M\<K*o.7[VD0=`634s$`<s"A[[@0q[eqh1J>(X6SK#_o"d2R_3;1m5]
%e?^XZqgJsL-/FeV&@$k]WG?^FZ&@LjdpVBZf9%X@Ml;st*>%32Obo@\)&?8''cHlQ%'+.Cr"7GDqX\FsT$)Id1,[Li>Gu"V+(,-"
%.9tYCYS`N5ZAdP%8jng<\o[[NeG=OQm)a!tA\#s?K2i=Ih(u_,^1r5p@N$0p%=)(E.0"8NMb,UZ+2JT?<66)PC7cN#Z1Y>qf-hd9
%5-`Lr+:g$9WYII!:AJ;(S+;Yfj;c%Q6P5CP4I*M#%frc_FP?6HHEhHuFH[%OdTh>65+@GOm.U<hi.NbM8Qu`.XlRc].N8qTY.c7&
%HMLuUB)&+PmXm<ak=FK^<Q^f+(tYu,8<sS+W-sm('^\aPh]`lSNIXH2+66iQp<aAmI'^B);c?hMjY3c(Z<B&b<Ls1.e<O;Gi^8m[
%-PtP7H?12u(`'nkp>KltA1mJ@5V1rBB'cB6?[c([XZRmn2:P$rjgIHbjh@(,M1UGdWqP*)(9)B=g.s\];8PajDKd0--;7F9Nfqe[
%l09l]BY+MrZ?YF3W'5"0kqWc)n+SC-;&'t3$AJ0)]ACS!krtFJ(CAN..0IC0,V_"5&<a-5@95N#e^-E4IP=dZDr^>'ZhU%t06!e1
%2^SuH91EC3Q1P,K(=<Y16</k<9J;sZ)2bQMV^hQpoRs3p)aRAS$TbZ-?)Z#`WXcoV45<fP8F-]nUfsoSO3M4m_p&ndZ",q^PE`8h
%NmgYZP[Y>^W25F8>p=3hptpk,@@=$S*<.-cqVp-X-OENjXEDGmd1VLt*H:@qZ'EFO#)I70V6M"lhk?2tKt""-=)8!T%+s@Rm]9ep
%DBXKA=WUK=RNXEub2ZqRlbAW:b20LfnA,+)f6[s8K_h6NM,@dmWJZ[_3Oj3`/b@$]_kg?O=EC>Fa27]Z#'XQjGa119d<]toM?qZ'
%+[_nlRuP@KEY&D/03D$K<FB5tk9\foi8-1d^n<.ddZ0]$5N/Kt=G!1^dc1RZG2F]6=MgR3@Fo!T,dNe&Ok5s='I()0U00_tfR6c]
%rLNV^[2Lc_6Kuud-"[e+XQG]I044X(Qn\h_Hs"sW'NR,HmmI&kpPrN-s!HS1'RV2M<P*qCMm8SWW^BNe!t4*2"DO#iZ&tVCHFaqg
%\A@IMR16H:3F[(Ad!k477$'^c<,G;8CQ7=Zc0/bY3l=GW5u3:^\Dg*2Abr&Y8rA0_K@Yg=Vquk^_o43;#<<[Q>0uDlU$FICLteB&
%.UqTGM3H8JHi3/=qu#%H'6t96`8SW*K#QNoJ_1P6i+ZVm:<#d,D9hkPX`\Q1q!f'RR(hO0J7i0_HYDB_/7T@/.`u!"ko%Un3r$ud
%GW.lX1]ekMD7Q;*a-olMqPuNK?^/V;"1-A2LK>cVnUrPF+or)&0RIUphHom+7le4C_T$UXq]8">0FB#cfI%r=;h^*7DgJ5hNt!>%
%ZSr%u2^Eq-hXE#^;u#A?qJMX/U$;ENpDurQaVqG\g%,2YH\WBkgjS02<9r61!OJ!f:dJ-ROK#NOgrOA)!4BZ%<SFGA`SL460RIUp
%hHom+a3VM5GUVchDukJ8CZ2),+"l?9(`;&/e^V,g)5ps[M[m&"4.M`5Gc-.G@A\R(*,*a`U6"=DcY.P*fkJTW:WX/p[jhC^!q`T4
%cI.U[V$)2G!uhWC+a#q=D12hOL"jA+@*VS*TGO:Ri!I\l[m6We#u>5&hqr4/9c6E;(5'Hmh%qSD#LLn5.cTb9A6>t",7@G&!"^`a
%TSDJ,)Yt,b\r>+hcnNnP;BTX*6JD"VD^Xgin088Zhn;>XA2!nJj$E_Al;iANg\BXE:E?hB&'GK\>&L[3jc7UmmDbQ1kf87oC%`?*
%K&QG/iR$Jtk(Mu^Z:+F/aC=lY60K;E8`ULh=tAPD[%Dh1^!kQiY>RBW28fiB2Y6J!O3QIpIn%b=r]q^6^Jh?tp.i=SotmsXS*m4Q
%WnCaW/et%*AY3Fk<Rg":oF43Ha$ucdNa,CG#\X.sLj!?W3T$JU.JPc&h$fh8%9)"fr:LW@i0Q*j)Nk8mD\V8?\43C>N:\Z?f'"`H
%+NRm6%`S:'MH16%j@NlqD<2ci*hBOmOJN<WnZ;qTmn3`o-*;@\fR>%IGP((Ybap^o<'s?[l"A7\cDme5edb'D2C]a/kn;T./#ZKi
%G*q_<jDMK2aRmi)0(iL%4Ib4!#RtjIT:l#+,ML+(_f*b.0e75#YVEh[!E+@0CiqTG+e@i`>Od6#Hc-SMTfbk8lpLiOg=YdIKL],u
%"<H`)V01uTc'+/3OJuIB)Ed7LML'HW\C+0oI-D4`ju?uo96Kcr?lo$;hUj#5`LkF!B\g*i/KB<lR3g-@l9OsLW9HjPGBJaR.BF;;
%FJrA!e!iQ]]/_V0WPM]aOWY`B+!f3Z)+qA!+<fSV2b`[nVBs$V?_+TD2*Q)l@i_M%gX*.L.I%Zh8B3d+R;L3<B:X0j`OUXZO/:-"
%U#XcF&,RY4fAfJ<mTl0!]QuiR#g)B@LoqU\8KEr<*ULZ9Qdo7LX"!41"!kIffK&98eroj]V>P%*7tnP(\VN+tj;ZI!k5eK8jqKF(
%8(6@U*jZoT/9Z0G"5Wj</pBRgkB[QRgLr`0h8,3$4S4BKd+=-2pEhj.8>U?$Fau1XQ.9WQXtI1HVFsM83WCL8iY4"bVPb_BKpcO]
%FGZmJ%h@-:$%["9OJK#L$X-I8>1V+IOX5-M7.IPedaeDsBs=RM0)F$@%e"?J+J-!$DaEq-O(8ThPh>jCD'WIH?#WOH"+Uc87G^s#
%.12+^HT7K$_^8(F*/\>VRAi2S_r=-RN_V#*HAYq!!.Sg1N"#8jC=_X>('(((I[PBf'P8qW\2q4VZd32N:#khbEIGdmXQ"'rk3GFI
%">^+jHdln.:2-a5#;o:^@U8&(EA-Ff0l]#qC")s4+^<bb3o8+#mH*OoTR2sWDo#)26:cJ;28E7!l6]]gP(csgLOm[skA"BulfYfJ
%VGKM2,,n/A5hQ>9`)9r#]c=:/n<D[**e)$Zn\E)Gh.)APE"%I)9b>bC@g0(2i0<L?Ei_NoP+h=_Qs_KCS>1,(GTcg2S4OFpW9q'8
%b./WY*uDf7PGCNfG"Z*2jUtBsMq+@]^1%]AFetEbLLimf0l.B9),XJj:]2%Gh*O);5P;2'KDRCAl^J]W<M][qNsd78,C_c0`Mh'f
%5kehU\*TahLKN@n'O%hVK/X_0$u\EpI>\="`B`V[L08=4.QBu7/;\)@Td0N5HoARk==?l,+YJtr>15nWEg"Q1_%Bp'o!F*3#.;_J
%gF<*qi9pminck/mKQCin;L[nMd`i.Ia&?(YIYbs#jQl8_AOS<WG.>,0ps%EIC1S>L6E0+(`$F0OQ8ZQG8VD)(R5-2^NKb`1bf\L(
%P]cD62sTV(RelOsl/MA%-8bkifq-?QA.!AbMab3^SV&qJpXTQ.;A'f!FLPdKS+OX"8[:#Y(=8/(1_m3q7Ea7-PHC>\D2jc2k+3RH
%D!RSt@E+as=)#q<>3U:9W=McgdKLO<q^Kp?f@OFC-7m7V-aQGTJTKE:JbHMfSg5$P53\%eDLI?'I*ldBR='/5O)jPRoQ%3Y'#4+!
%MgVM=mn4aM7V/T=Pr08KIH`gY^[q]Z/q*YNB0u.:LUM;_XnGC0)I9\l5.U;?;"]]DF(dT#6Y_49q+<G,<^Vap>l#:jCANiqqV[_-
%l+$Bq7^Yf(jO+hV^[l;]hsO<*>'$K70Y=K^2nfaTKb*!X3Ybm^#dW%FPAoCu>%HmlIGog0]r0o1[oZ27n\NANk+;)#<*dF[Ht7)s
%Fu7s5O/+Rdb)HpLg<qPRQT%)r5A-0dG3*5l\euLcau>bZi7b"<;q.!<*4b_#Ze:YW?ht<D/g23`ksP7<3;1A0G);R"Y`cl"O3WV(
%0/p2OP0*p<oH=eB154)9ML,P?[m4S4qO"-&P1qU;_f+_scGs\\?/p>!HAD:YAU127T\]DR;!r^u`+;!,h"_LF4frLKk5taqDbmq8
%+fa6q>9/=)Z$O"P%A)H7#l(T)PbEVX/C-gZK*1D@=gX.m!s5Tj5L!S$+C]5"S5*R8VaLn(Z>dT9[PiSM'>NMpWcef-#6]&V$i@Dh
%5`ha3kqcWZ3nIcKRj(ft_urQ.Gu3FUEeO8"Cr+a4$cI6t]2l&8ASZ2,V@?Rd#i^36@,>?_F]/Ou\%n>OLr]bC]tFa['"g6XZq:]:
%"?=oPfORhCoiZI)&06p2l,.=F)BhXNc,ne:!Vthh9IWbNP9<.VB&@A:,m^G\Hck=NffM(S[CoK+F6-YuHXQR<"Bs6$IIO8'p5e0a
%)#2eNF>#fqI3d_,ns&ns-%7N/(W[d),MFGSODeo-o`DZaYpT(lrGGJb>d>.38,!h3E1+)kZ33"fC&tW,#nV'YfRlh/nnLXM6&03<
%R](B@C$6[@JVJdfM&c_@9,$-Q\.,'d71Vk0M,M[/%D2T_!!nBqD9Kd$.2%N;-]B/.7*Ak[Mf4:Kc"PAq5oPM2:ZeCG^V+190FC0C
%.gmQ^riFg7SI!H\[/:q)rjlHYVoKA^<I;gZTL"$P=rQ+G/pf$W$+VV01ug!ffr.WZQK@jU4<[e)R6;E`a>M>h_Q/I#O3DUT0@/2A
%#FAJ#';JM=3I@/KbCU)376OhG;2(q#Am"#EHp:C-'Jl_/%3tu"OIJ)*@$U[Vd>nqMQcnk&7=RM8=79#`+8"E8IP4qq_rn&?]>k^h
%cf]P&l\k@G,,]8BQ>qOC5g<\e6id`r2hM-O+k5HbXrYSaY^BTY(X0$._Ha/u_#/N+HkBk[X98/5$&X3+]]Xr%6_i21>$a<G'\?.o
%C&mP<&p@lL?eSMb8X0GWl$Z+pf<JSDU@]I`Z!8foUNER>P4XTq,gSPDh!>[;hB0j'5*B%=;.U]d*s?/]ME.>a>$)Vq4F$]A`8?12
%5YMI_TJQ)m:`U7"h/\qQKr)9$)ngn]KuK6pTg^_oA9F_"#pb%s\2^-sqWpg:)EP`+d1;jjm2eKJDof=ATg5WbXsWSfU_0HWPl'A[
%MGg?;cXt_"ZA8[>5VgjudKME2Y5nI9.CW<&*U;5W;RsUZ$_\?f7qRMHNKQPbZV`B`[WgfrSe,PiVG0nB!R.C_J5INn+uq;@m/c0V
%2<4V?kdJZYlcCVg^R*?g"`#+W:[FNr]c)R6]@,Xsn1EktTWhFK4XfZ2ZNl2TDt]hk7(>DD?#W2Yctp^S'[/i^1fNQ_H_6lt@M#*d
%'/kI(FET)oqti:V@[VK=]bl#KB%MF<#%;JWp"^]HRLle0+X$ci4K,=U#-HQrP]A:m_R]%&][b=D<sa0Rho*\fBbGloX/'*&AS0O1
%<qUbsTn!MfBbK<uh:QVJ,Q`5bbUbjnK!\iY5o?Y%&"CsgrP:$N*-o^=ED+[FY'cW`B[<FkK&Uma*U%>L4ILa99E<Vu24Dm\8=aV2
%Y`)VUAD6.O*)St!:Pb1+WZf6a]CD2#<\(u6VD2alSLqcD`?PX#:IZ#)%jcmAcZM@)dC4W5VR?PH)?WWL"ZUl&KU]t0X8=egGA:Zt
%7]9O?CB28GO7<%oqfa/UBs./i1<C9X*-N3/Q7I=EWN_]Nb-8'XX,Mn<J/D#s(=,-gqp+6&Cr*)fldd.OmRG&N">dL1(i$Ua!5#N[
%.Dl<:q_HJKZX(*kbTpWMXrE>;P3fXL#Y+dVIJnSAQX@T`-`dL6Q=(Bd\riZnZZOW+TGbYUQs7GML5:@HN_.WK3$cL>#3eo,Gl&+"
%HV+`QKGpmDT;?3]]^MM#r"lVt8DI!1j?Zg6LtKAGPUN4g-^4-*8FJ#2LBVVs?(H0fD[TZ+5e'?&,B_()kX,aK@Z42pr#,rWnmm+5
%a8\sf('bk4K56VFec!-OR?HlI4."NB7[pE?jR+1LcS(S]/kmr2)*(Qbr@(lcC]=JI2E=)@QJ0@WF&k7Ir;s<4:tV/_N^F#%NTWiA
%6*mY(D#6T;Ip.rj2.5+I^on'N#"J08I>@Vc9nM+2UXrs8b9@4(SOJH.k(-hj7!O+D2O-Q/$Y@:?*)Va0l:>!4Rt$Qqp?j'N-%$5*
%bd>=LWgO@s6b5lK.Yi,^X75W?J'h1u![Vc5!_+Mi^5e,"9D9H-M2.uS7D8^eQL^8.@'5cTMslu`E2aP=8b4=rU)[FL;X_L3a`YS`
%Pa::1;[WJO4MFm?jE$:P5Q2.^:1#7Ea5?mJs8B_45QCIbs0(>ZnN[':s7H-_cX6_,J,A^7-Q`8J^\of/S/NP"\(87F`EUn'$2D21
%IC($RU%^cXo+sIBPaa<^TWi*BTq!hjWMOq]li0bOr?hCcY-]B>j\$*\,%]d&VN^*:Ve@,Lo8_f:`g37F+fXcuW;nOAkMpo+)r8r<
%1U=FF4/4K3FHT\j!g+HR`Z\@Eecepa&^PE"Us3&1'<i"G7=U/Z6#+g!.9hNr.M5F7(`]i>:f?Fb+DfM[/MRu:mPaai4FH0DGlN6p
%T/.+nGXpgl72t^IM%2W5clH$E5(g>1k<YS"8XNn.J5,<$3='.L:E'kIWO\]<!YceC[q\N0$`J%M>bZ';R`\!:M:k'Za[n'/RO'O5
%^+R;/5/VT4m]ZWLh*Bp`^(ji?Ko_REere;!E=Fjppod+=#%(fg*7U[h:eX;6.4^B,mZM!o>*G,N`^A6lTRCr?/6***TUCf3RH,+q
%8tpXtD`>gL3-h'R&]4*SdI/EQ"o9kE\#G:7Hc]P\\fj]#-!XHD]8F7[S"`+ha6Q%YcfE!NA:*DYNaRuR=`2]V40fF9!ij^=9"B^5
%\L3A,S+5h__-9CWNQ+m_RV?XB5=?F9*%a?tMs"?+=7uK(FeiY/aTEMWoZ8Wu`.6Dol2ia,7Aq+2lNnI;CICnkiA^*q7[(!^V3ksl
%mA86Eo3dc=Qp&nE0Z5TZ&Qn171'<+:P]6uPK,i2)YKJule&'f'nmT;g8Mk"rmR_4M[-(s=s6fas3-H</Wgmch8Vp6-e@ob`0V8U)
%L&PTnXtZGTTQOD].UEBkWkhn01(I,#ge2^J_Los5JG!cBnb2P$m_SMO\t6jV')HQ45!B4OitK6QjL"Fr74_&I9<eZddM6WMW;%pn
%_U:4R\6R^,Q\<?'HBKL:(WOq\('ZsM2U%8j0?g3aig<p(-h"+o8X?R\g$k:YOjG5gh!JlTQ9:?RZ-IkDFjN68=X>36!)NPF""?3Y
%c*K%06l_l"5tWWM1S\<W9a?V0qHH>]JW,[?h#WREnd?o<)jR#`6qack[8X"3;&5d/Y_obKl6f0!ggQgjdF[XJ\51XhiOQ1SE!1Mj
%;)EGP\4-eYL$J8SCmD)W47Ao6UW_QFRuRigem1_HMQ#Lpi/):F6tXlVd=_5i39fVSaIj%iqZjMBAZFJJ0ol"ifOA`idHh!(nI<fX
%1V0S",[V:[B#,("VKZjYb64"a<WQJ^)c8bW*GA4u7NOrQ.R:AgDWk";?FKUJ*k[i3M/OF\itAJ"^7`,=7$[@I>mGm^E'Tn5:B_l9
%XR&D^`UVB0K&PKbHrQB*6.\hYh[oK2Ie>IEe`a'dO(Pp^jKAWlPDNhh%,;qbj%IFrk:7RNhpNG\^Pc;4TIUg!579WuI7f_1;:8PI
%lI?@K`m$oM)3Io%j6Ek,q0-N-e,'SMW3>?UO)+Z)'-Q(CKY,(PJVCP*r_suC/IZ=J(]K"Vn.H8e$ht\?6D=ds5sT2c`,J=8guP"!
%U66q..K2Os>r!h['LE)pC1Okd)oUW7AV3)dX:-'q1i"JgAlEAVj<r;o)4:(W3I_=nPeW?g88SD2Ea!ra:TeeVM&h*p%q_Pg>6tIl
%>.7]M/h%2k.s_4@a-OH%DCgAf5eq8V#88T`[R)`UL\.J\&-)-,dBI.HSPf\;b!6G%]IrHq[nE%J`Fl2#)j^]mSPW,Uac4:d;-d%K
%7cR+qDg4`_rVh1He#uEYGm_j2=Tm)h(8I;t__)__%oFLW0,Cc1BVq`a"q^BJQ$?k**/FB_pUQ*qL24f,QKnPMW[4Kf:1\4@+7JrP
%ZN*X03]O_rZo+]_oUA97m:HsE@5eQ#S;:o4]<O[ZYM:[`E`kgSCkgt;#\0Z.3j'SFcgJ![3p[nPA2alkO/^U@=G/]AMo@F&XuO1u
%J9\>,6qiYCYHM#,P]AU&),n;KmYH?kX%Lb/Kh'UP"q$4G4R[H##icT=p:aM&Gs$k<W,'D>Bb^Ee8!g0SZ#p>:0ofE(6\P1.7+<h)
%!Ap(3h^CK7mUV)YrC+WEH;Ks1>m8le/&r#bfHan-O3Nb%*jbt@fBn]]hq_5l%GVW]h2$,fqrE/C4P_Q#G,rJD5NdIPnk6?(m10!'
%n.C0=kg-09^.9s1O0bAr(3p#e1"L9skf8P"n*W-Qn%QJ:5.ppSkbc&hkiN)%8.WI2mTFmdlYAGg(u9d)J0q3\79"[&.B*mqUq:/1
%C,jHq)VN%Z6@RKo".IAJE(F_GZ6^C;*[BM%3o3:l0=sCEnm.pdW&]`M3$b]dB2(C[]`\km7<Lji</5CZW+KO?PV@JpK!WuAE/JCR
%mBl7'?Klc9Qfmul<IYL[k/lMHFkFt/muj.2iutZAeR94f<$/I6U?HG'6r=EN85E*/ID)@!k0VP!8EpbE'8.]u6b6G4XpE3K)js:U
%4Zm^p08V=jcdD^=7X,g8/B=gIBdlhSBH<Ue/Tr6:4u<9r)=<NB2SOMZ&t4fYAhZ)6ai<%7<^\FKF;Zff#i;dGU,ITXb4U!u&#?lk
%N-P-cSf)<NQp0iT0r(nm]M8C7IeeI',5^iEs%(R)f"lkE#[)j<*#)*]2c)*7WDW+c&2pts%Q&.=NcdUcA(F3s(sp\VGPL2dX$j,n
%P!Z^0E6k?in1l7r29?5aq6EVYbHb<86j(UYM+JMFKNA98i;cCUV`OH;NcbP=48<56bOK)4rmW4h#s*I4Z]I]DD@9rEI`NDK&<Ih_
%Us[_FPHfYd)4^5I=M0A"]bh>rc8?D7)qg8c[4/U/0iRs3^!6).+F(I4?[rrW,gp&Jo7id+NIDj\6.m=H'e(A]M+@<M>3>[(oiKYX
%"rFtM_*#*`=T;o6qQKqg+*rlAi<K)E^\jOY)ua$h">CgHM7_to]seI$:Ic"%+>r[#B<f6]&Kt\4k`X^L10q1bcOK*f;_3;!E@&(4
%'cNjg%l$SQ]3W76"1/8]4Efl)fW3.GN8_=n<%55F>=-9`[2Bkpc3)*;L5N])etKf1=\e,[4b*L2WSn!m6m6@N5q'fF2R*P?!!UG5
%ncsX/W/^YoM<a_dDcdr#3qMBg^%%`p2MTSkE8@;*UM1[WW"ASO@7H-'S1%EM(?I<ai>LHipo!;Wn^&T8,_)G8Ba3iq^D)+\f+9^(
%QQA8aq[NR(qM":pHLIN5?\Y0N_N@aGjqlnDN:&Y&)u=.4U&X6CF0tCJk[s])"\/XhUKH2Wgt)Ascffho590h?^'7?%Z!N+9"qMm>
%^OJ`!Y?;#ao(?](-p21<?R)3c-bA':J,b2h?iQ<rT4oc95).f893WDY$YYXUqZW&=n[ZClp-rQJroOKVqj,-U5>bb[U0NfP?`pe&
%#[sruG"Q"Yl7LC"M3]>.Q1"u"5;2ceX4;.(]UFW@KQfls=X:n&j@S[.LR'7nEBMV>%G"NLIm+=WH)E<j\6HUj;L_".X?%P/OA*<g
%+rHO?!L<"H=&%s5E%6!'X^Y<q+BEF1lhZ%r7Hh%YrY)Z?rf&\Al/J$_Xfk#$!?u%+R(Ce=@p/aq8L]Ah@o>P'7`lTDkq.H?"=`$J
%X+^SIZ??%S<AJZP0WDeqNDCj28c8f!k=nZAF@?9D7R-Nq8c:#I=oB:N.$eE5F6)q/n"ANUYKaa$cm4JH*._jr;KsSsbGUc-`%q2t
%o?<!#VM>Z30HrnkEoLiUIb-4Eouuss+MCt\TmIV-QCF3OBZrV0eXc\5ln<IkF:3(R$3q^6#tgN9O23;HUu(\=!@B<pcd6/sP1Cl!
%P1C/B,qH'.C&L<!OCXK\IWWIU!IQ!%D4&Xt&W(:;H<NN<ZC2;]W9c3pcI4O1Kk8VsrmiiR0Rq7d=t@^J\nd+)rLA%l'=>,qU,9($
%LSV5.e.cEj!N>a\';RpI;lJGB*Njo<+FpLue,$V%I"0T/=31@pehIAIKD#%XdObR_;l[tt$O_dSE4b7\,$PWX2s>?b<ID[tC69<N
%+Re->\s^_Z('#`n&+7fKJAS<oh2"]9(')EJ$>8o&"#A>@p94Okb(piTgoFR:es&g[HsrHDPH+6VG0\sm!.8KPl@`'8\q`*lJA^L1
%i[cR0O*\np6j:O''o<9*;q-Y#4=Ym;BNB>5L(6K)Xi@rW+>'^KVemuXk3r$L#:Kr0>g'&G5U9!75:e8aW.f8(M$a7$RMmqOZL'Q7
%/1P%[kMk]gb5)PaQe_T=1YOr<i*h2OSC):UA.-!--2C21Adf74dJT^%.esh(*f-P/+Bnaq#-ulNe30dSn85Nm'gR.4qm-KRh(>.B
%KBp\KB^Z_aZsR4*($EUA-.?'+BRi)W/Cm/R0:L\G7$p?[h;Ch0_[M8h?58bGZbV9N8m/7U"ka:EL/4YXY:lNG;`;D`l&m=ONW+<q
%g"33YnSZDsY9"M#,h2]tog$+@`h3gX%8pR9%^K*q$+$/*AEqODR238q]:Q?lP$^Y#kQ[rL=RaA:DV+B\XJ^0)k66]ibiY21n[HIm
%M:dLp+mZ-,FG"1'NbB&\bPm6p1m^*IgZE][Krm8\#(I#-QEA0:#agl>7Q*d]Nmp+3!KO&a2Fq$ip0eS<*A2\f\0^'P#nsAubf<\P
%:Z60iK=;$A&r"hbnb%c[`rOgUSnqA7dRUW<Wh'`C0q$o!mjl3lAXZmAS2dZ*$BOcKi,XUY]Ig0Eq>=nq0pWkb8!`qu@NQ*$LZ^pF
%Ho<D,&2jg/Oh*""8_1)g"7puGbu4NCH4/LRlkqen[b_X?86k<n&JlM<n_A'SEBcYQ'==7le$qJZbcGZDpI4T0(,&@\ldcW([ftun
%R>'DPZ9np<*!IUj90eGE!5psQ?ZA9kVccB`1oVCTelRBL*>B+lhR/AH[-^>X,Xo:Mq?B$7.hd-UlUchTp8ep:_7"$?RSfE+2ZP=N
%8V@-F5[=MSD:U]R[G`J?`o'&)-&p#8im>PhLZDFg[Gs!LSHER?6Gl15L'QH7*NmYeBH"_p-'0>1fjhoVf_0a1cW*j8d_0R[>S(kU
%>j:?F):1&HR*OL$!V<>ZJ(h[;%UB\qq4Z'u\\+Y>Eg)RKXmjl%p'N,oFMEJS66C&]Sgt+c23k%@W7q-Y]U[$U=9(uDU4n&eBGG5I
%duP%ZV'[8LJm)P[,;bNIP7uK/4%+KKBp`Z"HH..-#N(iK>baU_m:E(*rg^N1#iR<=,ii0S^YQKuAO8M%@4!Bs#a0`-0DuMI,\7k0
%Y6$cH:RK6NKRr$3-it`pPPBP<:\P639\:78Y,G>1^juU"!/R/GnS<)"Z?,-U2k'0k4a%=-_5fRo@K]7@<m;f\N,q>`D,T1E4I@ue
%5J\(W?U\KL]=5;-,j(%ED)"iYYUo/?ENGe`Kqd[;<Q0##%F@#tDn\t'b<ZM,,>g]=K5_u!=#HE_-4jiDa';+#P&uCX#q)u\^n@e[
%eH":dMP2dh=Gh1A$pfR<L[Q&YS'nsZ0$%C'Q73inLgqd%$uqEsOG8SBqbj]m,13%#lnd73nKZ2>&K9,gF?I"BM%U%aS@sHKI9gpO
%2l+>]hd(VkL"Q#:?j,H096^WoG,9*2>pC@gQ+"_iXMW;)c?PuY[kI(*l)4i6ENM8>]SLtBH7=3SOSdC69Qn4c5p2UPArJs)Phh&"
%VUe)pSqp",F=e4_e`sa(=UnubQ&,o<H6<F!4)5^mi^s@J%2pJrZ=E0bhpGT5nf1XUVFO!,+b[U-7P:r9?Bg+T.e[)F\s(PTC+&n!
%.>EFHJCZF-U@M_pqTg<UL4q.t#K>ao#\Gti<jH`HeHOU@MGt.!FWeAdj<Pm*Tk1WE8?r0i3;]lafX0\3828o'"3b5M"2[-jCeVe1
%"'T`K#:n7S3^t0EMNQ(=em;CMgq+&C]bnTF(kHn\),g.DCb>n*NlKf>CB38*MHLcT^XPZY+eUE)3=6AHmcn_C&Cs`O&Zq3p(dFaA
%=B[NDMaS[dE7%#gR\o`%c<WH#0aN)AKL6`S[H`$p09&ERYN+R(CnF^O6("Kl^P+c%Vm=I1pm?%brV<f/NW[<(aR(?^-OLO7eYSs;
%5<Mq['d28#c&5[(?#'TU>Ze\C`c6st'8JI`;qugU$&rVG>rEp6r9W&@U9tMTpG,t>7=`5\*N0EE7!0Zo8%KaDH!+WVLed%EPt!,i
%.m2[1=fF`d.m%X5\C`GZHLqI:Lt^V#aG8)r.FQe$H*f1D'COW9I2P/<2_;"FeJ22=rp)hEL`Sq9282MCj8sb"Dg4aP'FT4QRn[Y,
%4M)l_W^&D1*im:[+d-l7T$DpUJ5#;gNTM,7&s!LMhl97g5<+TZRh-mcd$c#QBUEMFgG\"n%ObuU6u-P+c>q)0UpS&sG)J!-`DCK*
%-rcp#5C#g20C0r&@T3-1CIFWJ$e8iMh2=PJla:<U4XQ=.ElbD$M4XU\-HCgf'[$`C>01[GRX1A=1+hi2Dh@VN8pi-9#e%>Nl#`DI
%<RJ<5W]B4U60"-_Dg4Ze.K=d#i3,%BkfG-2c'P)3XCZ3KQoGpgkqA1;Jts*OlLUt'eQUJiVJf%[(74FnMJt$/mgPt/q[p(a&bCC\
%+6,1WZPCBd)RIH5%9+Y2MF[1?$e-KmV>In0j0$ubnq2@fW7K%BE&sHm5isaceQF-!l7,UV;,hZOk'.h:FW<oMCutLYRBW^bGcaL9
%MAFgJH[>don4n!8,bmD7%21uO-W^Y043]T04Z22._q9bs_%3]Q;Si`!Q'O3iLhc,/ecj"u>Qs,'JLn%!,(6`;3&)prE=!1cJ1[F+
%QPCG!oV\bC?DF,tI2p/MA<L;?N^hD:c8>"J9>WG*.S$CDJ<ZiL8=B1ACk28N&q/qO/a4^^qaa@BqUrokQ1`q6W7aM89>:&-8hpcN
%g`=%j:i"'u(;!k<L?mf+_5npoP>q1``^-&IX$m97`;=a,Bu/Y&SjdbHq'CB]W!]33r)13$B^SSuBb*tYq@\SBA\=VikA[^!)RZRu
%6'XoKY;pi#D>"qD[*/**VMSL%[LMih@K#4_!2P'YLhUBnSkrAFSg"T4&cGO*r51dHDN8np;%-2Q9Ne=&#B6dIU^;rNF'6/8[R?f=
%Z?Ime@l<\:$"k0>T^'(&S,%0)Nl/?B#e=EbI'p.Y[mi52j&a!E<d!"!.*1fYjVIhTd4EN)nKW35@r%Mfr7]C(c-F;H2_J]Q$pMZ)
%*eGfSLZQhJ#D]V5;1)Ftjse\*r9@;4ZA9qJ[Lm;M+P7@,2Q/Uqka)KhEHO6,Z3;;&Q1Q*>P_q0Z8u'5qWtl?g-?XOYpkri6.+9Z:
%mCfn4-KsE!@BSc?Cg'ZQol0]@ZPgi]Kk"LKoX^X5?9m]HOJT!W,SAI)TYK;2=3S^A<_7&b8*2r%A$[$pDS-g[eSQ?d..g5KkA6"E
%-9=m&"%S`Mi)07+BN2.mPuB:()%B2BGf)<UFT6l[mLPYTSTs.odFnQu;#OIYPOJ7JqU9(k;NV;Lgk=8[WS`ig(!['Yk*I<>m@.N\
%rIOfN6<&HE-\^?p<I[9W3oR)'=B?fs0'`F:<;ZElqhI,1mZ7&n4.iGF65\<Ko1/iDiFeg5]Y&P3<jHa.n[ZhK&#/hDZV@X\61K`&
%[+RT42#h]DD,o'_!u*TlJ;/b4=dnqd0J9gb'QJOdUYc$b\6nn-A^R,JGAN)'A:_:bNduSKk`@QV+6ORWrV?4pq/H*6Z]Uh$N0_qC
%`h)TW./NQ*]rsTd<^J6=%0L?W_rY,(IQ4HX8IgLh?)@KZS_u@Y/)!i$c#Qo!q:fJ..u(oXVq_Pi2?Y9[QVi@`5:Ao*Ai?`L3Z,iI
%;,:l[6Vc.t+V@_\@JkqM%G@0d6-;[Cl?WWXI-@"%MX5`p7[:m7a"]iVTA?L>_;T5/rjm!C;:0+q-HW?D@4KN<Gg*^&`SOZ_1`XpG
%IEh8NY7idW)qnKD@@2\fHC6M,%k@A<gN=K8#XXX>E^-M>(km;O@Z/a`i"%GARJh7^UqN:ZS/PfC[._m'4:h$rK_>tJW!uTle`nJ'
%1$+Fm3OYb2;]XA@a$tDa#3m$pnei.(YZHFr_SJ8c:LQZiD0tL,B1KH]8b;XDRcX%+EOQq%YCd)'+h[AoR]i!nkY':]G!ERBeUt't
%L9MCXiP3\\%@<q2B*_tUVG!ZZ3$3r;aEA2(1b-\*Qt&W482HEu+DNA6R[*J1<(F67&9R1==uE@tZ^*3e\:q$'bUf`pb%D&rTic7Z
%b;E+GWSj)^eO[Ki7C1KiHUFLl!m0`88.sfY=^KI@:l"M(hejL1TMEdY[A]fcTAfS@A^ii[(hg&MZ6.#5DO;WGF&^XQLiOSKfhZIT
%P=39,`[*0pG,eCG9j`CO'D*_H_pC@ufuc=(KC8@"@3P(#qOY"%e!-$VYMTtYXRR^>L*Fpa::_'pP<6>:OoL_4/rkDn[W+l6lH3!R
%WSg[ZNfF0YG=Okm1eWN6okr22q1d$L"Y#;n")lC)"Oo<g&eMSZOip3LfH8.X$pD@c)YCPgQlfAdn:ED(T(L=PPG&YUO]]#j'b)3c
%+fIl'Gag?.2t[#m<HF3]Y:ZSrK2ZZ^8k-"p8$jj'Z^h9-_@)9ffJu0&&."qd>LU_K)_LI*JhY8t0$$Qn:fDZD"t_eAMF`J^m+2]3
%B]6Q-SZP1]LtO./j+A[\`A'pWJI]Q&.0KIQW.%8Y[CGq-"Of'"s6<1A*6(mgN\pK'(5uLd^t(.c*HDWD9$rCkLC=`.d9\.$="q(i
%+ARn\DLEr;!qY.fg*/+;3/jep^'6I9MKJX!KHUordThQ>mq.DCW#F.C4$jm3%>OYsI=cLu&@C4>i(X8N&mO&#:_*V*f"/@chOCH)
%H?`]h`0[,cK(SIo_;HS(**1`+0Y/KBC0kbiC^TY=#U)Uk'^.SN[E6`4L4]M!eNUi8P2/fKc&]n'C?%TR>9q2#a[Y:*?V9g5O/pt`
%g/RN!lP<l*i2%><HE7SZkdQnt!RgK'd]*PbV-nn^&k%;KM(A(t0tKJN2=Y8\ng,s>d+pZT2bN(S)((eX>#XSeLP\kK+PP+X^(-@&
%R[qm/_5^_IJ,j)S!L\=M&tSjF6u0EL1T]s4q&jb+:<AL2>/[j>D`"C7lQ&8'(j7K$E3/f6GCahKB*k-W"lD,jc?b$3&LrTT9sge8
%.SSM6:FkcTa_Q^1'c;UX_%EE6H'aIWPb/KV4`H.TTMp/&'^/l:cUtok8rsW$/2JEjH/$AX%umhp/mAObQ+\Uie'UdX</fI>eo]>*
%+LsCCF/Oq`i]J=t@JQc7`cWGHD7X'<8'$YHahL!Gji8GuJj`o):OdqMnYa,ua8"+jSoo`+J(,6/I'3Nqcb%1>poirka4J0854Q=A
%n?jXg61J=2*KH0a$#nm.#YCB?1^Ln3Y!X0N$X1K.rsa8WIf8T$`6kHa9*"rkD;n?@q()GcrUu<Pl*(-SYJ8oJ]@s!mCq2ao)*6op
%W+j<q^?Z\^l`Y%BJ'aBl/O],9e3g#>n!XOO?e.XeS,2ZqI='IA"TMIb"jM;?<!<5$?0/>ns%;Gq[2@i:Y/d1Q&"3pb?e8lgE.X['
%*;SC%Q6Z1.l8eY4K;JbGf6*WKm+[.&,QmtI"UY1/HB8Qr]-\eOqaFfS&%hP2,O+WFduo7]\t11Qj;0\M5O?:O"smpR]+1ZMp9/1-
%+rYo-O8=J]5efp0ppSf\2pj:JD;L?KY=J5l?'q)MN&&b]#kapEU]X3.Tsr,!d?VfK\7Ig-8A;@+$r_(N:o.F;^+Me%lrS45/4kYl
%QB[:$UhA`72hn.,L(ir@>sh=B:X/+<>T[eqKLu$#o;_Cu)#M=/f#?VEJg+*M!mK199Z?+^;>]`dL&1_&mqah!9%YqW)/&e+Pm#^t
%:m"].\nQI0MT2KP](WX@k;qc&Wr*:V+?7L]WIGa8;"0j7!69J]d%lk7dNQm)$9HnOBU/c0W(%^7(mABhlXe&;lg5sKa0it:k.Q1h
%b<q\0@Ge?oc\=A1B5q_ie7.bYl[HiL"@t<DcntjB@HDJMd.f%[2Orj,fIca?Ibqgu7U(`EZ[CPK^'(RE*3,&UDJU>O4<Kg`a&#g;
%!>(#!d2]6XZ%%d;hMo`IY/m;=YUZVlo=hV0D*d.N@&h"hR>A/p82,O!h,RM\>JUuAhKJ1Ki4,,E\qDJ"cZ0?>@jIo7f1VK#XHC='
%pYJ5R3lInkL.3C87W`WmpmhETGd9*thCueBoOc#[e*bG8GTBro@,G02SOL,TC-44hD>CFU8`-TiL`/0)Z$#s%**s*)O&o0#kj\$3
%&8c>:qg8Z.7$>h2:K()nLg9[!pT6$Uc&sOJVKdL1LP1Z<'pMjdNgjcWd\&U/(I$S5rd6X%6g(_1aQn40_qnFcVV"k9WgBSb)aSEr
%\q[@;?)L-$FlQX-nTDHie/QdZl+1Ys62lSg(1^9%\X(gKeOpeoZEO-:1$)C/_cn(04?AkDV2>-i8Kr/GnQ7(j+aN3l[7S:aRW[MH
%,XbHe,Ejm;\D)`3#LqYTfDd"CAOVL]j6C;g1$dUmP[X:p.:+2M7DF7hMYSWmP25$_m*.k^qkIY-BiHNgfs19pHl]/n):$!mCa$E3
%[t\leBX`)D5g<]GlhtX,A]CP`'XT*,K'"-OqVE(Vg>C2.);j7<m[P:LH5:uMBY3?<374]so(7`5NU^L)R=9(BROl.8<U#SZINRH6
%-:O5,?,)XRMkW"B3#nL`;Qp0!QUAZ:?5d^6Eo0bl.Y^B+)e\m$pt+F0<,=6lh4U0ALj";<!%301V,gXi7#C[WR\^&F/9A.ecX>-H
%[)UhALXGneD]$%J;7;L!/7(!s(]gQ]@RIJAH>*,8^QgbLmm4AhmVt_C,0`hb+X!d2dKmtA78$&l%8nsbDn3mjk,/c901e(fR`G,#
%f\&-\csHV@l!$Bu1=nIFG2@RgZ#Fot[=f_mY,r6/h=ocjXR<e!J>+>&"9Qju'X$"">!i5l]m2"L7V5+Bj.kto'4mSrV7!#p^!CA:
%_`quBdsJ`I$bo6<d"K%-(*UP#^$[*nAWh@lhO?[FE]6bjQVmXCU+`K$;uu[2&G46#d$a]8dS>RXE7\RTaQ-jjbBN!,/o.lto2pn%
%D;o^%G=_7_C\gioZD>D]2$;AT^7F?"O6csY]>Rf=Pu".@b6m;]X\4fj5,?LCp1VbR7Cc]=kRre;Pen7"4<nq`129"K\qQHRg(9E<
%qWi(WRe6-g`Vk"],@._&<CNDhXrgip=AC??E)_358nA`M<kSb72^g6:<N-;53`I!-+c54]eB6:0TipVIE<][%'gc=CK,"u[QC:7i
%P2$/Xhce+VI]tGM2*\s*,2>XU63(I;&:Ve`i+5NMf`IIP7pZ?\a#Xn88YUFo:CY!jp?CU&0."OFhmi=<()h6],V\9u^"!p^krVAX
%qhD%%XL^(k#3c,FP9E&EFXeIN64LcI#ON$F?5#MV;-M*pU,>W<$?M%pi6i=&8\_VFg#oV*J6"77f<Pa]mnkj+!"q%.NX\=+!AVEF
%&@6qpIo>J@.+qj.LV;=_P'8jFc)0L>+A1F5Gjpl:ha!&maU2r*)T;t]b%%a!/3-RoA:8.K`e[I>:[)d,eRe>lU=`?6C]-^PP)gCt
%K4T>cH`S=;BI!n],0N?#L*RklRL+>:m\2ObXS.91U3PKT7fNB:2$b4JSKc6d$knI5Zbg:(<)@s+MN9P5P6HG/[p=8n4Xk?1b;)Kt
%/6")a6A>\X6A#:aF`&Wao$B\>[Ak$/ksQh35)o8%P$jKTng[5BZCusW]4Q?Y,@a98G,`[-eq$li;^B&\"`QG(!:besGF0UV=Lr`E
%=hL^0>=Ga'94cMr;=_1E6Xe.g=N'Mj'?8B66k9ijf"/!m;D`0]7H]sS."d.njf24JJZs[m<La,d@kD9&_h5rUcI]=qeIBX6$P;bm
%T/+H-X(?((cEWoU7Apf$eX9FJGRoD47t7T'0euC8@%KZc#-CQ':T1G=k+s9Z=5qD$^"&Gu*@nuLqt1$I.Zi0#Oa>B)R%p8/3sk-!
%N#J@0iaX13Z3%>J!s(;1:@#r2#?<;#D1%[8)[j=eT0m2.1hqPa57eC3R]Y(VdX&Kd8[NoONmNl!O];/^kglK@?>W)u,/i)qY92,F
%+t!6U9I_*=eL.hZCOh[[;SosfQ(X&r1HM7_<%aY>H)tbL5@9\`68ea6^,YMD9p3$>1eP\[rh%^-`4h[*V+BLCP3GbTcA!h)&O/s4
%eaH=Jdu[4)!A'qhccd\pB#$L%U2fV.ZSVQK9q46qCR/];as-.8/d?aHh2$AsHn]?L=h_%?J](I-mhVOST(T-YIjjT.Ab:;k0+b2*
%lRr]AEhDF9P!N'J!"Ec`bj)4`TQRj$P8"jD+12&>p]^b]oSjF(`bhc8X:HqO8^e-T"N[g]3G["Enq(q%&aHfd1;2V'.S]$a2<tXe
%9NV1dTr,B[?.n:Om8[1.lZ!LT>2^5i@[WP)1jL_63Y#F2dlL+N>()VF%9Mm`9-GaC#-PJ+<HaC%p\r\<Y;R+e\H$oLZQ*@K&nE:4
%CIq\Q;:5IY[>L+AFD:%AD:Ol7>%G07c6,UbY&(7mf%,c/n&92T>4hqna`_W\C(eN5kV/*YFj8r44_*PqUI`?Zg7h#-&o%Yha^OHF
%j7a)+9h*cZ!WVt9!#SWqQ"R95^X7#eTMR_\ID8(Q6bTq;^Yp-=lmhN;e10uh;N9]f<T9o0^j8t:-h"9u's#9J6jEge32.tV"mVZ<
%K5=QI_<"$N^>hN9.29@h6Fnl)n-`8C*[Ukj`FR,2ci]`Y<WT8>G=sfV`EV`-drp]eM=4J^LYF>Gj)n(S`7%[M9u""Yn`\a^oo:oh
%;<M3ieG%^\_@/(:du(/\#H-]&nZu+<hNHotV0\-r+U".](SsOt:gY8V84pg=W9b/e)iRF"X)*j\Z/kflhk23YLjrXe0.P=6>_4FC
%<p@o&A@8]rF_arg.Buuu;Kc5(X0f0O'"/P3PGQ';<Z5I4lX@&r9dQeB.$h\'WVorLKZikfVF1L+Tm<EA:bJlcH:&;e,<[G&P]m_t
%#^Q[*J/59&)STW(GN]Z%`>Mk8OtLXOQ!K[C@BVDE5cX3_0k-s,\S=-pdgRY+Q*&c1I+<"Dn*)9%/DI&+=K1XMc+=PZ3V=K!9Qj;m
%\,YCP("ErG.4FdkLcS1c`[uqQIl6I264-qL+6C/uL67=F>*P!m4BNmW27uYEn!B(ZDR/r1Fgu2/=m:?jclSa6HC=+/-EAe*71BhL
%;Q<PpV;1+"oQ&KJ@L,s!>*kmrC@uB"+3,kW/g1*Y+&IIA*r,N`4[\)?4ceHX346IdhH%HA4JYS-.Se'AA)^&&A_u^2G)]]k/Y,cm
%8IR1ebd?]Z[A5WXFs8Hn#L$i^hgT^Qa/^IGGtJbi9:0Z.klT&69U\*KY7<pQpaT5rVTG6Z*u$]6C!#9I^?N$rL#!CRD:^=J\rt>K
%'d*CVRGaClj.l6*h0j=GJ`7!7aQgchM\S_,G/.Efdsu#Ij`'p"'KLNdc5&"mYog#=+i;XF\,mSMmEB9X'$-8.9k+tB;H3e@C(6hg
%pct'_;h&QG^6=1SL>ddBJ8(?I4]'R7!Kt$)Ee@e;k2Q,p9=DJ+=OOG,C`1`s:)>NHGo`p2\41XEQa;E"KEjA@:0n2("]/+Qoo_t?
%cEFBKj)S`LppBCRM22=<"U7u=Fe.aK<TFSu"*UZMko2=:@RNf-_3OG08uj0Z$"B1VoO=:XG\hT5Z'j)c@=s1A='rt/0fNS`O%h4Y
%7;*Cgk!I,+4bES2VoSsp+\5fE:TCB&>*NK!OK;ms'YCd*:CZ.?!g^]=I=mr4qY;PH?M'u&>^eO`AV[S@AsBQ!g<#:u9&g0^P\'%<
%`6qP,)(\q4%)=E*#=t68BQV3t,*]3oh$I76]812b5P[c-9as\@Cs5((b^N=,,8WG'8aKZRB$.%4=N\L$#ac?c211@A-Wrs,Gr@3@
%SkRL6/N_N6pCiXR*WXlD-7NPN6<;;_U=nh_Tbi-EE@lc*WFBAEq[kDh.HME172SYu"!I6uU?:.KQtELQXtb$o](X#uP-A2Cl9]]e
%)+=G>jYg\\A"g+3/")4D?F[0uWmtu_XCVWMhk=2rNW\*m.9j^1=_K;LO4.Q]5UGK[('\^miR`08'4NpP5APFA.qZg;l@#jmQsbJE
%gM+52hKI+Ucm\Wl1(?_IPH^g"]a!L[c2K-cW-Po7[$D`0:BJ'Ug2I;9KXP=[&!fOKm]`s*G!o7dnL6>`cq1R&HimPlmK;Oc!&DU6
%,m7e0biF4u0fs7phk?:(J>sRaF:d:ulgmF66>=`.P3IKpM+%b]/46fZ$W&:dj!^Q_m$&3<lA#4;B;J]cfRHH\-cSqqBM5HqdTsf(
%!YRC?mURog'%&:najZO'G@8)6Xs/gBD^\1(Ubc25KoK95Dde\-;=c6d\#t-3VD=$6?<'RV72_=ecunCnY%aV1P_?(d$Xe?5BCi%L
%.naQdg8;hk3-2tu/)+\oENlJk<KU^.1Lc;u8Uib2&Bp'hjQ%k,)p:uJJYM*iAbmENSH!@(rX%o9T=2!JX>U'3[1!TO[hcRWjPf`F
%5T<#mLlsq2OP[S?YX7kK5.)R4m?3Ti&$A@7Je5"\[@.OQ&*H^j.NpK6i;iqCP;NL&#CmYq!L^+r2:o%OpJ#9rj7%oQ2/@K4rB;\h
%dLbs%j_='qCp4le!9o\"@ck\f&])[7@\m([oS:;T&fq1Fkd4,d`[bSnqBKP3Bg<sn&07N5QpG;AEX]:,&;LO6-VoY6>S@BmRr>??
%UN*-t2a!kWl-nM?o]qY^-D>5e^'"lI/ORuEc[h9,Yp&TD9O.\=RLHQ`1i+VM`WoLcguH2()klE\RjVt+aV!&'BDKWuI76L'>GK)K
%grX@hEu?]/jA'==ZHSgS<sGID#_Ot.L&=X'\Kq[D5Y.FS6sVOX3-?uQ.>%egDDqbM1o`lF'pT'l_B^LD/BR+2Y_p2hi[Y#/jN/#$
%_Oet[OS`)HU2imYF;6*N+1X\Na^YVf*Nl,b)+*0pQcsE70+:pblZd;^rO3n@VN;Wm*8"Aib8qjO1*]%P8'"'-P8OamD7^[21/PC8
%jl,:B&hVNGeS$<\jFFY]gf&Zg`='5HLWRuDakS(J?oY7:cC;K^hY'WBf>;8P:7oaMA58)YZH6c7cUH8"0ELc#+e\JL!/8&l+R,(M
%Tm@>NZ-[ID=j[_@d3fSJ]'PA'RIO<%PeR6Y48AkJS]hsV79`<8&KiOZalU81;!o?-/T=CBCiK_e`p-,uCK1a:;N)eJj6IF+f.A+,
%$G2CH!jZh7;S,RHEK]++EgIt!#lBe5<7jkWNE+1sR@AjfB`O5U$Z]2?0Off*;p2,Mg*H)Wbs])K+0!7#$!epuF4"WH6^]L8J=,&4
%6HS5I2Q28P\&m`oK=BpJ1H-%PZm07JeO0PV72IMLiEDI_kcCrO+9S)p)>AdX(qU>iXAdZ4./`57&T5a>`o@I.07]KZT4IV1',mT]
%<(T:$h[7$sdB9&nHs"^jmniP^,1Te)T(!a19/Yi%7U1MtiE0dQbRtM4Mt:GFL4S#N'^1fo59A&2EPh$LCLIKOZQ;&`3,$tk9%b^c
%GVcn2i*2.:'q&W3l"I=-_-:+.B]5Q%cYDJi_ddQ>%MK"$.NW\`eTc6$C_O!cDShjF"/R%XS5`c=,#ut06-XPGBc&sjlJ/FJfk+Ad
%oU?UuO:=2f9,XFce`[[nTba5sPl>]ti2cnt5V%^GjA$ZL8Z59>/ht;LM?Q5#nKr;@<!kWZrHp55JOpmt]$5Q1O/BTVFo%fsl=7],
%.Yhi'.*[Ya_%^'rW<Pu#DPG91bO:TPrs`6h\]QDE7A9S*OCEN@!d:GQ?N?kUi%b%Z.mQ%^*SPj:_V*dj4Zj3uN2P<@n@#%;XU(Ei
%OESu\9=<Mg?:6-0jOPRF6,\8eKgo*C9u?!CTKs/:4ir(ONrp:7m-oaB1gJE0C6pcqm:B3^GY&"&7BshjQS\j:<P&M+Njb_Vr9Dg;
%^C41#YZTE+?Ck)>Xt*PmGOkWN776&R$&/*gXY"+.fU&tRm'7TaBrL[5'dUDe@1]L)7rh*-0@X2Eg+os>_"<qIDMT=WDJA0:GhHf[
%/3Lt=S.[)j4t'YPqjuBg,T1N7D-2IWhpRtDL>B>G!/4W\5i]`F(:s5L)Ah1X__W3KC%'7B2;Zd(No0p_\^(/ZOAeM2%Q#ab\INO3
%o]P7]jhpU1VNY9*&'b^g[F*@Mn:p9TT+CC=O"=9;Pb!f"+Nq*3gsZ`lPXKk1$W[QcPA9.Q26ZS0LD5Xm1`"7ekfoj6nJQ.O#!1=!
%U9]CaKr*98XU+S*o9EW'PcT8H%Xo9`Pm@sbn"+76YjCg6&"3MRWMp0O8B%8?oMcg9Af!.m7eMKm2;Cd%X/UG;pugH/fe@gj0i4qP
%_rasUlVX_Km_c`u9:df-"Zt7[3<l:^5E'9f,adQ=SQ<[NTO)Ssji8Bl%c84?HKfu\WT=q0g3FU`YgS8l?2PJ?;BY<8A[P<G>)OmV
%X47Ie>m,gC<.A0,kcF;Q_fThNj;9tTP,`=#,H:jORSS0IC*ksu<jFuRMU!m#ikMm4WkMZ^\!]C"ds*A@43;br;&D99ADH9Ug378?
%1n/F10Qm]DgGi-CHnnipQQ'Acb2jX?[tg27QS,Tl?1WE\^be(7?Uh7+`Q@qKBqIhh)PNWq72R<C.De=eT\(+:a!`%0=_&h3*YFNt
%b(K?l#ESl8co<l$XZOjB'PjmMlSVcqS*pl37&B=4BGKf]7'W,a[E(Qf=]R;OGhFJdAYTirZu'6M7b+<dYZI=5eK:9l]<^]4G)\,u
%(*&;"C^DJK2kON$cD>q`JkkYhXqL=CU#pa`-Ye%i&ac<qB'49gRPS0s9_UKje-c=U97]/lqDJh9%=&]4i9Yan7SA=MpOcN0-bQTQ
%&JOuA\l:[]<OE+\GK6]LieBPXgj&'*<l,G4<a74m:>I#>Y*p`,.N&[SUdDRp.#I3=g.c2*M8mFUQ;K6:g@b7q6udJ?>?bD/Gd'ht
%eaPKPABK;uD"f0ugBXG#bL)4W`?C,;%8fNo`,rtZ<-%"lA!/HJj3VG6ZgAliTh*eZ$84@5YZKh9YO3Y*#PX>Vlh8uOn*WcQp?e:?
%:;eU=Hf])f4@P@V.jtD#/MV'WC#=l]+/l'W6%;-,%`;Tu,!JZ156TEe]e2Bj5>XG_ZPYG7E?e=6/j^,E2.)Up&5O:G&njp=;ZjZ8
%!/!$q0?Vt(qZ3/2;D^?SHmIeAO<Y$?+[FSWq]d")p[j]3Dp[e)r?k4X_,PhWB%R1.BSquu8%JMJ9)/Q,I>4V0/^V%h22ko2&^l4g
%LIHGAF]80^rZU4F'aWjfk?M?:NkZdCH=f#f6J]tQ_:lUcrfjuYU/@spmW<\C_t!K8%UXj?\e5_tpD5M1%D2?/rFMborj(Dmmk=.u
%eb`#7LN%_L+,ij#UZ)1bh@P&1p>2.-U3;_mOmq>kZ(u>)0K'i2HPS6j)#uO8gepAeTTiU'?G`pE6LK?!eh3%%Eu5Xc^X[9or)UZD
%P.Ph5)#5$,iqI/e_]$-Be8@ApK7WP306_C?CS^04eR/iCZ1[;B<fYFJJ/B%ZSDPpgaO05^XJ(JI#\3+B$Bp*"6@E3_%[?<F+Y"fh
%EA8T0!N!^dHK.7)Nf%e/F3`!;P3L_T_4cf514(ehS"X@.CSDoS.#71!A[-&:,VS(FA`P?aZc!VfJ$AF<AHr_l18jQo?@Y\$SP4\.
%@r,Ge`9bfUgL/j6^QP(Kb@Vud<kad"P7X4ci%I^]NDp3+d`JF#;QPn;%gC5A9XD0YIe%M-A8Tsbc3S0>p,(72f;LlM>9E<:q^#rV
%Ict01Aq!a4YnLAXf*D&Ie6G1jf9e]OM`Sf6ArA(tGj9q1r,fME*<?hCL6Z[ra@Z0s!`mf_,r3_Wa:'Ub)RkEkJVBcc>8!cK2K2!#
%>9c3>!dZ]#b/D`kUTfWu.)YB;c.)9t"Dqnk<YWnuQmBSPjS)f1;%DJ3/a#L+a5WFJ)joN%XUI:eM\5MkO#=IkC-\3,1VKHMj^9LG
%Z:_eW,qB"1JigUYbC_W/_(]YIBF3!Xg-SAR4<S80R0:VIqS8=h^.r]+BUeH/[+<KLlSF+3fYB??Z.NNphV's(9ZT0/D=,i%1q9[%
%CHibtBC1.84DWj3HQIUsg+-YpC/:(S>!V5k;+E2\:!O0->+h;ejGqs%gdeQ.g(ae#4)3BS>]Fu;U0?<=qOff_f5NT*3,7'ZqO41&
%=f(o\W')8Ee-=8>[;3fZR%kFhmDVJ]3GLikASR%rC!hdJ%SnZkNg7NYaIh`[D3X(P9l@dI$Y5OG^,g+iPA>:*WWbd\_!g]k-'Xk/
%?e&.Le:!/8Pi_OTjnTLbX1#5NRi/n1&V^UAo@0LUH9!iY/LpDc_uCXp,p%F)cgGl*kGJ+kbtksK].&B)(,ak%dbtRirjCXmT/JsN
%:OAboVZjG^>=k!*ema6T9oITeJlal_HD$ff2soF$:!s;b=q4hR\hU]!!VL"?BsJ%P8ZZ757mAS%4+GdV$`GHEMFd-s"#<)X7+G)V
%f-U$B_GA@?[k((tr3T_&UR=!+`@c&l.T\IWE+7RHoa5]3m'liL'XFOlh,0)fHC$Y<bd*0JlAfHGe=o4g)!A0R_1&=Lb8dqa:SjBP
%iKD0(KoP1/PlqP?e7*p>p_H@Oeptff\Z^1%R(W<2Qd^&d.4,HsYh=8h6:X&7C5,Pt/]Fj(X3Fej/LoF$k,aQj>HKst@Xaq9mrd?'
%1[IhL[Qoi_U:=E*@GF/_#4`TBb/#KLT9$bW(q?tlA__l_NMUVLLkm(HgDA98/DY(i!s0A"FmiXZNWa%<-0WB6r.ff'jSl&h+bk^]
%^$;stkR)bD+hcMM_!^)^L`J<;\/=^p;i0,&W(TouK!/EWG]l@qIu*V*C@WT]IJJ-SpP72,r@2)6eIKml0pGHUIqn'DF[T;0Nd+&C
%@"bEe_-Q.+dNSW6E^N]nSrXPmH/'M3fm`D5O!idC,r,<lrg3CE+]us'Z7JGeNd`!V71NFkb36\LZ8ES"_PO[jLXa#>Kp_g)\9*F]
%cX4.)rN*T>%<U#OIp2r''E*(Q=bGqInFl5SGLu2(DnVG'.ddAk+F=e\kfk/p-OZIi,p>3;*/.hPX75&D<?oBH*"&GP5\p(BRs/b"
%2NGXlhgTNgc!U5!gJ9aB8\+[O#`a2*BD_;D63%6M#T(c05lRQqqu'o'2YQVuLVaT*d+Z.ijuqIkNC2XKgWt/Sr+.N%rHt>#rDhQM
%\U=b:k2/k>a8uCbSWSTieQBAI?R\Y-abQOh_%U\9:lSD]2gbm0XVsL.0(,MGTfuOjDFBm*Rb,_%DKL1[?'@NiJ9h<Y?ukCgpj89@
%0Ae7VJfgqR=u246lmMRoE-t.e=efOG>ou%$'NO:m9<#95eKh%/<)'%+)hpf+`K,/f.1;fT2]X-t/8;oHT9$>UEfWV7VP`fbr[<"s
%Ba`]E+LUd(B8>REe^F_\kDo\p?uIe:TTn).09'N0;elh=ZM`)`[/A=-??3fIDeKUndmmOd^o9=FI?]^tQOu9AMOWbkWJld8^-S6+
%'U5%B"nL`mRcO@FU"$,RWaqAQfKZ412e:U:5W+1RH0hJJ!><r+P):,RGX@]Z)UW)PU?J'&2IF7."BLgO)UU*5N[-Qu/gX"Q1^Zg$
%-#+`;cQD8Y,gZ!$*3*l`39D"h2g_eDcQ36*\2E?Pi>a776BbP26[?b1B9.(4Rls;H36CD2^+3o>$O>DWB/P%#j/h"3GkNQO;G8=f
%@%%.HSM#=6ZUaiEDJ?>@50>40o8s/NQS@N.cMa[\iFTcOL0F(n.4n=:Q!paETH%dYEa6`g"K36nSE5b4e8U@>N5]&Lh9u::r$<US
%T?)B/gCqtN8ar/qMXG:I[n"e6B*>%4_]41"<-4-A9+)HY8@6T<DB7K$9H<-q\L^$C#N0`t*_^?\J]5P_XEaqsSS4>Q1dG>%*3l6c
%&4"p)eSI()+BjaIOp'irZ8#Hq-%d1XTl#C4jt#QR_/pdlbodigV-LlK>\*,i0ADPLeBJCm,En>^NIfH%)JNg2-,-a\qfsM?M;.k2
%]X/C,L\tI'$GJeB,F:TiO\+Q[a?^1A":Y"`fY3S('9F,_+TrC=TH06u,,DSWE=Ikn(o0lT@U(5V+Ga/BIXeAb:[YN?4.Jl8gUHMu
%R;uMk1blt'EJ]D2>X:fR9cqqdYeuYT?)L>Fo6$d"o)YdOh$0'[=J*Yp9T2(MW!6cU6'fJ'iGW\p!HnfHO`[CoT4"#3olq%,Kdm`K
%'%'gC_`9>po%U`kFqE&?aE;.F#m2N:F#!0Oq)jrKFf[cDNEjp\F_qY"Z)g8me&o2T!f9*q\&Ah8%HS$^9,]b*+])L.i`**:<rIDB
%q4cq(JHEfa0?H4KkHLYH3u^6_@q2%N/EXKab./WY*uDd]:e3mpME26IKRJ?@W!3M-C>CGZA7c(B,WIf2=9>MsR0>[/ZPAR"SE-IM
%B4PgX8X2kbR0IE"K`5@<QA(j1TV:\)2oHgsrc[JB+^?3_*R(PuNM!(N9e'(:[@8NQW!m@.mb'k%59h"j7*R%L+`H$'rXi/!.<qc5
%[1$%>+BTmsr++ick?)?IQ0f3f0D;e[]Cg2+]GV^76*n4<)E0[dlKB.("c]kH%ouI/*.!]f;QH6<L\Rr^nr$]AUqU_K,#&??caC]e
%o$>>k(<%"$Y_4sTIe.]V9q298R]"RK<`Z?jh!&kPcm>LK:R43RW!KG6enAkb4%PBn%^%*Npk.C$'>"rijMY^W:RC-arU'1"JF(J*
%17;97.^$MJf$K3gl%lL*bFCCO<-BE^3bc1.S*fh+/8/8QYWtt3r5>c&?KJcgS:eM'G;<KL:j"LAUj!jV@_q-%q$LmYI=rgp:8B<L
%a,G(&Hp4]c-Y_-"F1Icqe2#BJIBpF_>8B-&%"+8Ej+,?BdlddRFXj;8n%'dj!7JJ]DRP-T<':?^6nJL(U.)6Bnr]d?_$kFo`l?>&
%crkoG'bu3l6"f).5L^u'GbUP$@CYOf=]lpBF%,M8+sn[mV0HpbkFf04YK-An#9Am8WEscm<':Kb6nR/`_k2<7"0+17S7=.b(sjTi
%kT#@/UZ;$bPEB?bSkQi]gE"td9+8mH)I6Ve@F]JoI2%i)gDg)WV(U%CHnf)5:4DPZq&ugC9uREKi;gEHRT\jUN3(d4HPSY39;r^N
%>Vum0.!m6&!OC'4;<H0%UQAi*YF$W0"''@U\n5'P22b0UmY82f'5r;-4_7DUk;[(sqj"14>q>.Oih$4=Ik4e:\eH/?TgVs'(W:@9
%^e49d=StTCBF[(#oC6"q3BF,JI,CZaKmob:]cpU&e(r&$F?l13*Tud'khJM=9bH[nUcAI/%`6t64l-'5O(b!6[;-*n:u_f.'B)=*
%maE9*@4,I7,VKi8\hod6H12tMh<4b=U<qefYA+F0&PdCRDA3/deCQWeUWnVoI-fOE6#Js228>g-BWk(9=62sr(.i$nbkS28"rRm4
%e`D@.PgLURD&sNi)',@mUCYjcF?iPi>MucBB/F.f89FZd(AG,/Hq(kSRSiLI&8a;8lggJ&h;o4/n1n7^7KJJKEp[TQd%a/X6P.V>
%q08?Y%T!_`#O8$#FJ[ek>7S#dJFqXIE=Fc+NI_o^"!@Yk+L*n/g49QD(7&.Djt_%s/6:NdDHJY[5f6Ts]EnLE[4@aTkRgB*RLODc
%LO:GBXDK[(d%`Ur7M*p#6>u8C">m.gNu8*X-HbRE6pcYKOW^@F4qHok$-dF;HVjIRgSTf?3io8&Tgr-jk8$hJA_A8S.%s-@+[@BJ
%8!_*F+JCNd4.;Z`)A>>0$#gKiR;ScV7[etL2111jN':(#dGXRiLPR;QYV#\4K,K@6-m"o=rI5cb-fL#!BV*gk0lQ[c25@0kdC@SK
%#Ma5Oo]P7]?Ua##]WRjY(""4^>uEdDfk$ZH#1/%'JsSX*$Q^>s_FTjB7:4J*Y0c*"eK#G/d`d/_n-=m#C*cI<!]5o>:jjTYeWhGa
%$W%+eWqD%FkGk&Njf1^J05LJV2l2Dk9H%D\IkE+]1,S_G/X];@n/,*l0FWQ1F+udH9MY9=%pjbZgbF'nL0g'#]'"5'!lo?[Cg%KU
%B<k)Oq)RQ&[.LR6iggo8(=dMAbNk%!PDgnJ<O;4b1lS$I@X1mi_hHQ:_s*EB#sHn?+"gj:&B3UNVV_7o.PM`aNkVYu(2<]JZY]+(
%_9QV3[+^EIKcrKR)kr-(8Vr<H.En9E[b,T&kuDQkYl2JG?$^*\7gih)OSlcCHVA/%#PX&Nlh8]Gn*W3Ak3\#t5/\>r>NK]B4Pbj&
%AZm.kC)3%aRX&LNSiL@OS96h2d5L\l[Jg*=NC";Ug3T8kF)s7YrT$/]rSTC(#nOftDCOZlcJrl@R@^QYGP#5W).fe%DKGkaoJcC!
%.Cqnpi'M-Y9^3QR.(Z`Hjkkn)^G]1s/"i2rU1L(_0j8`hT;bGT/]T#;8W'g!;t1`]GF#A&r@j0c&L'_9k9S=-NsD$/o9/ll3M#j6
%-<GE/1uAd1(;aZ*U/gbh6uJ67?Wr5Po&:h?F<&Z%`_@_4GVYslW1N>$I]lpII);'$DA83jMp.3)>,*uMD)>I*Q$I\14t+D!"W7@U
%@I`IVebVaB\`ld;h[nd],ZqBZo2p@Y?%*B&pQf05NO[4e_%7PMdPZ>.[&.bSe8DYEk`qaIBYE=81_]Fa:h-S=4s!rPY*;@fAE<+d
%oijbMU8CEW0Tf'=R`CB!JbOR54GkRUOgfS)<54Z;*+e<uTO1EuX/^5O-!feHlB%1EB%f2@%_0M0f/h%<%&cdl&`5TaBE*`=#+eu2
%)Z,03("FQB$]o[7Yj7OQj1]&WmkXJJ:j*3qo?73bCc5C*l2YSm6B1^?A>suKW&i)lL^s$Vn@(dMD+Fa@*J%`%o`fXoVE'-emS:+0
%piFV.VIE)A=sJ(enu5HcNku?S46T5c;42c>$ok'J3$G'^LhP/@&[:VQ_bXrc\qq)sb7T0UN[UbkZ?tE+8;sPNk[o/c?O')6PXE=C
%@sG'H;3pEJDk5Z*<%`($%U&@V;;Y*;@Y>bh:ifWM0fMjS1X`ldPHM;'c0&]>A#$qHR2_.GeO'!/',j@qU*T++<..r<1^ln_F0IT<
%jp+VeJaTHXkK$WcXc#Q&,fY*8l*-5&L`_HDmH<hp*C.lPQR*6.;SjcOKH6:(b;:^om"f<p(<Dg1Y[HpGQWpA0X&faGfBcf9.S_4e
%k^AP=a4/rLBNor1hGo[aTuX[s])Y\[r8$aG&_cr]'/b,<7+L-?+0hq5UDI-u?-QBE(Jn=OC@jjU[).>"%mY;^fKodPe('??%lPr6
%Cdp'CAiSI5015hU+_<HU!Qpl5'RF8B[aFD/c+M"%:r\M/h:+Z$oSTRc]f6S'gT&X/OR_+BUDJ\UC#.;&"is5EoPBQRAfp"tlZ"EW
%&f_hR+U60S>h%oT@3'M1V9o[4j]e_3M^,>;[uF]2XcuL>0r#PV?%/WFd>L4Bm\PZcMr1q,EO0qaafFf^OXmaS:5u"&iGIHTP?2!b
%gZ6=^FAF/Zfk?\L7["X#AZK`ancH=>B/FmR4\SX`K?9%5F&SLKMeG!A:GZm^l`#q0!6sGEJ5gPKK-!`QK,;PFpdqp5M`]"h.96Y7
%P0I1tA+26U%q[Ia2lRC2CLE*S.\?%/r#\29mmueoWA8>u_rOR!T"UM]r^3DLZX'i/c:`01HADrer]A(&@Zt&rdg%h2H'6.e\e2MY
%P6IjWTl@W)1T#^l>dE$QaT)sIiX?qAh1l$s.k&g-1Kp:Lj?tF@=oR$53r3*XA;+;;N<)ESlIt#j;jGcCVF0j?A-&[8?;qQ:Tk0Xc
%ra7?jjsW8bQA:cs!CXfcm+eGG_)Z^NNt`^A*6r/.Gmb2n,BF;EGk;HV&(QH3pi<=-@YM*d>u'>rdJ^D?]&]6-Me6U/N,Nr1Ro=Q$
%<%3X!0Y08)\@,<D&O&\C$.Pe2.6N.u0t6HFJ@&@h62K'p/n0;aGYE>`Uh6U+h,@\.A\10Nd;oW]#B@W`A0dl).6KUq0#sH@$\Cj2
%D%*@FnV)UHSns9F%Ydi*Z>WJk"jmX0FX+d1J5K2ob^BO``R6f-#HO\&i1k8=8u3UuN5JR<=j:)F%SmCmSot4]gkRatFrQ3L7,uE<
%<l!u>1p4@eL1g.!%aTq'rUC,,OoHCWB6ZW>H>Xh+T&TO>CMMp@.2+IpNddL3Q?7)j23@sZY:)3&Ii%Q'nj,Q3`5AXKibPIj(SuKj
%f`7p+(]'3Q4,0>68)2%mP'tC-n:G[\dm5W/Ood7p^;6EAoe(NH8r7P:gX,QHLq('^%f;,/`LghpN8W-I-H/b\-%@Qr"L/7.)[Y=>
%jnsF)c8bJXEP$'%,KMMp#sPW/_f_$l1O_V4Pfe[2_V]oT0ubF+Nu<$tJ_lJNbp+I4%IPHl>s6SB%KFD4i66UV9Ksfs<%N]jAN%nD
%-p(csJs$kL.5H96H/fJc8?8`BbYoMD+#57D]hQVQ_Jo:\)J"j'U*09@E:D2>80cNAcB;SLm*m,tduB::I;`pY<]6K'1sKCUDqtIZ
%`(qosrR_rnbu?U@'N[$@M0sq6$r;aA2TC(O5IB\PESUe*l>/)9?As_Dnm9^)\.@N?A4V73LE??.8eW9Ci,4'!bBOSfN"8FK+.315
%1UT))*nt@f+0(tMQ7Aih;t_&HJcoLRMh4#s1Pr/+3M"3Rep4?VX<GFCg*f9a^n9(1N&O?l>^V4sTb"91jcOX.fRW/sF6UFJPEL(0
%0S(<;iZ,Jl0MK!K'2#UF$r]ZIe%Et7_HIPcFW"cC9#.:()dl5eaEnT.l/A1QAaf'm0ft>q%Z:ok!.%"6]<(a5e/JqkqHWJlq4u=/
%DR#Q+;eO;ZZ8jpZ?&:<X>%j\&D6nrV$%"(uno?jd@Pet8,gVR'"BN^8JcX!okEf7qVEU$R=!c9!s#r5OXNF80YKNJ(rn83),a=/^
%G)0JAVgP)0`lZ708]L6e#VpuC)^eXs[^5gqp_"9mpgG4/q*$@7E%QVA<S$%E&q0])Qlf1n5X,)FnR)=T5P1l'h*:iA3lR`j6ET6C
%IsKTTJ3W9'-bboIn0]5Bn6a]YNj"-?I,]J\ak,Bl"iYs_><'>3"Mfk4&L?7[f,8+pIoU8D^)$?q)uh5/iVqZ:kmg3NK(]3BfCan`
%rT16Xch6$WrhmO1\%hocX7XpXla<)DMe8Y-rG/uu%,AI<!W3c,Ma-FDZecl#YA#'Qm??r=r7A?;a-M2P.p[MM9*G8pblfj"UmjpH
%IT8ITD!Sje\L5'Zf$:I60)5+'mK3=<[?j,E`.M)8KCQ+r81T-hZ[l5(dV\L)?e0,oW,%GtO,WS?hP9j!Bg2+BGMPc8p8con+3rSm
%<i!A)9eR,nn>i"?r;%4PUHe+^PKkGCqb:kS1\qp\-@+jZC/09*#A@*$%Gt3Shu:gVAt"!,eA!'Pdm.?!_)(pd6X30Wm3mQT(@.uX
%p5pUUA?k^cEO5M]&FsKk!L5!*ibrL/-EJL>k87;h.lFfNj@O,QkOWT`N="gr>SQ&aJs(b3CR8]GCS&Y1QmM`'>QDhCjr<pDZ`.b4
%`m+n9>8Y"d4NQtrXr!WiSjB"+Rq:I+Y\3U+qY5aiaA@,=,a1JN]`81`0VGR+m[(Inq7\OI\+'\5Ak=pE//4'"..(S4&\t[Ld"\W4
%W.kj\n_@Q!qCRX[ZH%7+L_AZ&$B#C$QZN?p9`Ra/[\#PjD:JG'#pMl%PJ8@G7*7&&HN@P<Wo2W/O1:$D%tt!PZA#2,SC7ld,3?[*
%d-m$sG+AEtNNlMr;i?YZcGF061a"'EZ^\+3JI4\bU1aX4?+EYT%6TkW2>hi8prHM!^n40lpp#D-S#A6<n9D06XC2I/+-hY\a]j=-
%m_+A*S\(0Z(&;FI/kal['0Q_%6"2,YIY4@JZn`KUhOCH\L[\gs=0ud)8&2hRXK(6eqsK"00m`F%+UckP,V(r/X@k&$L<IcGhXHDT
%R.Ieqr!70#-,g?`NQte\b4,UgJ/"^Ek:A&Hf#t>>pn0NO,TIXS)!J::<Qp)cgNN/%\&B,ee\$)0j@^`f(_<o0'h$M*79]>OU$JGN
%p=dTel0Dt4L[7@X?<!MYAjLR0-K.<FXkD-1c4o_P\lOLhlWeDKT<qThZt[ZsVeTh*JpY1"BscJ2`RZoX0%XlqfLhqh%9qhoM*E%%
%8l,/RIs0)uQN*<m:kU*fAS_%odQ^uUhkB-'7(E+GFmo>`:gnAbLbjShZi0QY'i[')`!\-8PoNf]0S=V!#H%VR=art!MNgV@#!@9X
%2^2[t9NghC?Kt/;:0%JPkC6$mKqr7@`;lFQ)U#pKNLQg-4q3c.?D&i_5R09,'4V8'$m\(d+KZVL-V@:Bn@GV>]]$J'h>2m2(5`!`
%AiW%4gur2q$;d>#Qt0Xc!EACg,73+Z1o+#c*!R0+GkSU<,U]E:5C6CoE0h2:2HdJ7TLj)0d*"Cp&G7FJX]?b-=I.DAkT[hV_W;!b
%WYSIE<5(p)*M<R@HQNJrQ:,N&TMo<,aP9+>Bi#R#WeQ*Vc%)>\R\;AqE>S=KlQejE*CXLu`(lEai2R#MogldN)ng/^P,YZmLO9eH
%bseI&TsK_/9>H'mO4'R)mVWs^"p\&7oQ3?b"Rqp+N]`'XnVq:(S-V.,XA@%aA"J3CU(ugZH%`!ilK#&2)QlM$[QaH^)8(At@2%&p
%>r@B[V5"fek$:nTBTTlB03j1?6c%^_Y6!"+7bn=H1#FS^.c48"aWJRKLG:_(g\<6I_9Z4oPFLoDU=P!)JcZNe)lJ)".5YZnJYfXX
%H(p+]:fN,aY0IY<l&olt8`p@'E+fg2O$d04Xni:MHD"CYiuAeg3jh57iasE++@d9k%uFal0F<*r`rTM]Km0$=IZX$`n:_d2=C?*X
%Fkk&0f7"/M'G^Hmo^pogDSNYgJH36bWY*%bgFr-UeL9>QkQn,(8m9%L:J]`V%t"3bj?YO9iBZiQ<+/``)$Ao7]adUJ+;J&EV,]@0
%2^f7SPn"I]lE?eT-/10g3Mp9(EQO(jk,SUsX:A6%"ZaLY19\_6m7G'VPgjfI!@Y35lZ#g]967`*M#pXsQM6"[CWWm-qfR=$cE_qd
%hTWjj\pidi#^4<][e,14#^,5PPRM'T)6L3MG7>4Lo=QUD"/9u"-<3K/;j=b<<>(P$7&mMK-@p<f[3E:t**#4%KnSd=:<6(kj>-f?
%h=?Fb!cMhtV8egXJ(%\W0*HBBjf*da7bt8WboE0\d+RJ&$[1un7WL#XUB%8L85A/S"kf-?5WYhX@V*5H!!V6MknI(<'Hc3e`?mo1
%U12]'7Tl8;pO.saoQ!pt`CBYU`aN/849R@'Hg)I@.Ec&LpjUT<>5-d!a+Vncm&kT#E@9I;Qo+gE4#Z19cU[D=b&!ZD=U^=*A$b4h
%'GfY<hOknK0;tH8>>2S&YiV9=J"UGekp4hM&ZDkFCpE:UcF\K'r4B:%s6Y3\@$&Ld3G=*V)MCF_3)hgU1dIaC#\;<?)3Q`gJT&&2
%UEp5"`?aLfLJ.hJQ+4R+)Tn;l#HQ;'6#/R6/#J^Hn]0GuC#W3KYQ:@=8Dhuip<98_od&8pAPb:F8n2f%Ai4mB,C0P7dU;(e#u72O
%NB^2ErdXb;KfY[c\%uE)`CN>5;(#]8=U!gJpM'Ob,(st+Q1@LtppoDt4<i$!936<`V'bSN7q1*Ykqb!D=ns7eGsbHiDC!+nJI72h
%4s-.(4pOo<QJC4TLW]@M7f:$'I7paj8Q+XkM>qNR/\u,+-N*8FlqW+boLY\Veu3\gWX#N/)c\g>r]P7]RCSeW`,,NtQ(-!]?[,]J
%e(c"bL@Jmph(rT,g0r"pN:3a;`jsKE'&PeZ.<`Ab+:rf$D2$aq?iW4R(WQ(%OCJidQBX47o]ca8ZEcT2Llje]E7-aJA-/iH5I$B1
%p/r9)*N0+epulU$O-nW^Pb32_47bEcU2G!5ZOh>b;1q^3k/62%`nB"3fKF^":t5AZ&N_p>H"?l1V4s^mPC]NP`dq<o13V)hN*\)'
%=0RiK2fK0ND;I7CiSL\*AYm9`a3RS^C;'rA.lNfTcP_m;hNcJKT1D)Q3IbB>mjj159pS629MM8t#BJ2pV4qP45E!,mWN+>VUPcSj
%JoWk]jG[IaW>laZiS8B7cM5e\guh;^gba`Z6VJ<nL69?`Od&8c&R@OJr#UfcfdN@F`cJ\Q_ANJS_M)PCIIE["Hc?JA2JMSF9&T&$
%bub0mIPOB*g5$YgC;S`Fh[K6hm'[X[^)7^8[aEUB7luR@D*/Dh,N8[jB1M*EC#$shrhr\<53(Nc$pmlFEDlKq[1g[_j)$+NP0p-W
%D_q$YT$t,f,<DKop]9O@R@u3'U>%I`.@\.f($lb<@5D@WnmU8ppmRnB(dG\[aQ(_s8?uiLcZ"R4kX.pOG'i<:C&8JP[%pLF29%Ao
%(]IkR/[lt"Bm.Ct/Bup#0p:\re9STYacHu+^c.<'5;VuS1)JU=Ws50*@4P1-R8N7^Au0;j3AX97O3l[;^rn>-2?)&Sh!=rdRo1(S
%AnFLE'\t=!R$lL>mGqZ,+f:OO-lXi22W.'J]KjN[b\*Cp@@Z('0!;OHSBOV58'+G5kJTfjeG:<J=[qe7,<.qPH]2;/YF9#<)]:Fm
%3^dOb2D/U%8(Ef[H#7?<P_e"RX3iWY`qji8B*o(9Q9f#.<!APj/CB2D7mMs.WR:&:,T/J#PlM"*$tO'L+NhJt`A9s$152h/0<X;i
%Q-s4=hZ?H1AHafFXJ"WXS5O(X*_+uN_=RASH[a_jQ85en4<kL\lrq#7r<sudAu6(pNd,3cVQB2=$?$qSAO?u*-9m).];"So6crq5
%fKaaSd8Von+j'#'5KHsrXQ"0dlHs170c1=>T.C#cK+/&jfao/6mHQOOrGJ9.qqXNc4CU]8?!#^;$;@<_o@L(nDt+"=8Q:ojA!Q/3
%6M!#t2+nNE_/o-`WMFK5)5eD=r1[Y'1EL#+o1S+=eI4m"&V.5XAoM;J49qZbj>XR:-A@>K+b5eu+O(P6!2HsAC/(&u_6X)Di&>-J
%2pNJFn&r1D#!_IfS9:-6/d\@Amd"*:Bpi$;"1d!oAZ:<`]1b83Ef!G#hZE2m#^9DGYUj8&W2jh[BbpDb@%E""2ir`AJ[B+/Lo=-R
%bcJjQY@W-?WVkBQ0^\punMRSKDi'E0EdQ%-e&LECW=5W[dKHtLDh`:MPh$!/E:Qg-_e_H:goV=_KgT\m6_od:_!N]=&?IC"ns<M"
%f7A2_m,^pDG;/YD*/N^ENFImHY*fkJb'@]H_[*WO7Pmk8LAp">*[_\u#HW7?_Q),R"jg<si6')\R:U0A__\=Ec,<EuD@f_V.G(>A
%^HZD/`?KPT.X.<1!@s;Ej@S4$M;3g8,NMEUV$ig\`gX)&g^*aJ7YSadXqXf.k6cb^h@b1u6GeSc0;Rap*g"-B:lVu!'!Dd4BetND
%ZaWTZaShO>m?!UFmD(T3@I5YdCB"::`9e#P70OCkM_#700_hGQZnI`QbmFTn?cAgXn>g2s+^gBC.->$Md&WpSLG?g$cXO8EjKL/M
%W')\+h"%kh[pCXJQ0I"6<j/fFD2`rnb)ToPg(&4QTc;BLi6'Q`:UFDW!Om(X(Fi-]R(?9qV<UC9C8511l2i4K=d>s=!*@QMCnB0T
%#,^ZP`:caP>jA>3Y*oa>]sC^(T]T.7^H8KQX6,#lV,/^U*L_mc8b=K(S_$H2\\L=MCj[!5E=eub;0+/ggeDM7>f[CnN$6\U@.Kp/
%"Z7*O/Bq`.WO\\$B#T4u\PtsOB&cQabluW?Q((B'(O.:&TSocp($EPjk\(g2JLN2m1VLb;<*M$r_it7:/YF@2[Y@Ik!OoKL>>T#7
%9=a4fKMZ(tY+i4li6jaSB=@K5b!I&M/J_8fBEG?V<6i3m2-:$7Z`>(M<0jkO;07!1=b%sCm*]#:7Ve#F9;,#9=<+OYORmt_?"`,3
%O0j!EcF;m!rQu4">R:@$?Z5;dnhZ*XS'tM8Um.i(WQnC%Rb?pVi1I2Beg/FV+\QHfi6kadO?*c2(+-0"WNuSm"Z&hbWS'lpRF2/4
%(``UA(=M:L^JDO-D)k@*!CctJD`4_oK#"tp1\U1J,n[O#bf7PB.+;@-lTXZ7Vq+0r\ab\IDcr9RW@\K^$48/%]jY'/D$;FgiJ(97
%kbLaX;d/)l<.5uj>-Q!WX"2$sfFUtc*2n/k&91g>hLbQ*N0\/Nq5Gcs:n?H08QX1&7+j5!s.Hl$&12;5A`)^^0J8MGU'l(]bNj/g
%]6nPgjsl2?=E<)#@L#nS&#u"tHOQP_nSt3WqJA`1"3Xu[S;WC#9_M$o_Jj?jk+9R(5b+\O568;;6f]38kQdT$9Zg^7/e8e,A[f^&
%qc!r<TCgorLeFHa,1u`p*PrnpWDUb0X+t\i.RtLo:e,;\\Kc&t`(@$;b"[OBW\QNo;q6/f\!AZ=bi/asb#d'Vj@&T0o"Tbj`@A*9
%eW8W*3TQFj'!4l0M<kRQU9sX_P^-O8l)mBt3r@Hpe9,C3C=Z/>*K#9n0>cO!CWND%*XO(R6P.Vt.)mGMR0ejno&*>=Y0j$nI^u%e
%0=P'bd>XsQe>iD1]M)I1DW?HM`dr$QSSP@(O28e=iZ<RP(\<UgQ1tQlfk;<0D-s)TZYa&`DjZ-DFYb3.:%K?6,dW(#FrVQ#>@]Hl
%*W&tJ7T;k")^&WKY*:lLrDq[G\Op8q9I:S_Dh)ri:G]^(AF.:4B8uH;1p-8S<&iKuYh_-9dCqTG)b;'KYtOGWUMU`J(dtUUN(\Ag
%N;`a^UJ/fZUba2f@pF:s)S+@>M^H[Xl1;7;_SL9QO@=3M5W8l)a$-Zt@Y&E#XiDO"`G]gi^R+bU>Am>9*6,mP$!aIlNu9/u0m<o)
%LYX+mDc,BTn9*Zj2m!0l@IDn$_f"ku>26lPjQNIXOM^I6,>t.dQ'ihP8;g'??LkY-T#b)6.>lj%lG8[;$5`K/:DK\)b/"@N%:Qpg
%4ID6\O<+*/YRP/NB/r0[8((Hm/02:Uc'CHi=$:>u<6R>+$`[mX3eE57^8Vicp2uq2-9foRbSDKh@h+r)Nl1h3g=a_aYd2!*eIH\i
%1BI`:_-1tLl]sPAd:-u9"57'##[5&c*jL,t+66Y$(h6l2V!8#X?"FYoI9[Bu]eRHRpsRj;?LP!@*P/a\m@ncSNp`d8P:T_Rda#WV
%JOFD"PX*t4/\X\@$9/?nZ5fY5A@ucjHiQWL#oqg#[fYF50gV_FPN>I)S'9AUCHgm,)W(8U3b.",3]KV-7?6I7XATA6Cda-q.lbL9
%Ds;ZpF@L$9GqShF.BSe=ruI88=Q9U+B"U%+^d\pnHC0Y6>-n9=(r`!?<`phYg1oT:jS,%t;jR2q-eL:c&8)4uO2,L\h_&;&L]k5u
%@o3gO#^lN:I[O,_:]g_HigVNR"/_dK,m')KN)QNf^(Z'8h1FEFX"r$e'TEgG'_MNkO[^L!pj*=)8R,IJJijFW0ESB.H)F;S2rktc
%U>n7-M(TA](Q?e5g#aDX&&q%$MO5\Ob7PTS2f-:&eBclTGnn^"l],:aDnSQ28i^88\f6/go?.3lkB#[FBO3\;@0]0bBX^Vt1N.e7
%4^1V#,\@./WaR93Q[Veh;C4ur'1d?1M4CJp]`NV5YRF`EVYM@2C)IWr*e7MEBn;?L[JI`l4(LXtm:RsZDh\T%J[/7`R5\j[Q/8uR
%TlJAAfZ[k^:o2M^C)YK.Rik@TU8\cBYJOUe^/0O#*`Ho^2VXhV&*@#IW=NPQ,l0-*\WY,q8"HGd-:NaoS$arP%L/*K/Ne4rjK+'`
%Z4JXY86(5!*,HSBU-su$Yf^5R9i]Y>&MA/,)Q7(6%ZsWkoq4S.Ne@/<Q.!J""fqS_O%j_PEE:9/g+4>nQrqr*gnF%X9"BuDQDWZ3
%jB"jWngu\6!%H#J*KAkUW6D&0?MU<,`cStJ,H:ehVbt@bC41`"N05$q>gBG?,G4%7$l(jJ^To&q^0%uq-@9YPA02`aAJ62H@Q'f#
%YsDK0ZR.3kZ>RG-h>P&>^H\UD3AST]S2ZdlZ5=gOR[X78%jGSmMFZhL04Ei=#djkC:T_?3Ji4J:jZhF@5q/o%#m4NUK_mc$'_m"P
%&Tj(Lf7g\@s3#'9M7=@'$%ppl2Xl2E[sOWJ/]Y]=&*I?>Ed%!mbM;-Wisc`R@ZY#:2=%I"W=2VKD?Uk'9qa:fXQ-lF=UGMM2D>KC
%qJ1HU&R:AqcIcop-u!4HU@6Cb@Bi0pR'=n"'@A!+Tt^hS*r$o3TAZATGeBAaTFtA=aLT)4P'd*=guX2Cl%&.<&Z)D:QhQNa_M3%Q
%dN6Fa"fub^Q[gIj_E\_5"p[1lf&MhLV'G:d5LFtBiRH+6s)pYpZM!;ST8.Mr2*0guc9b^`Cd%b'mL/:;0?.BZHj3@a\>%;::&=Cm
%Wgt8W7Kt'r+YY.Up3#E6I!j887#t"%U\.B'0:2R*r!E;=%,n.il\PjFimn&3A(eX+/M(S$"KN1=,nXc"6P)n;%RMgEYV9QCi/1M[
%M1`&H):j:/!mF?@q'u)S]&o+518:Rj^lDZQ<<2_fR1l[PfHbGa+`C#t![C.YH"XoG\g#%R-ttr0$7]GM`8r-`)6dfDecUSLOMQka
%77L2*!dQ^kYFmW2UT/N=Wp?7Ce58(;McGkD\UUGhTU:im)fcY92k40O)*j-=Q`h-f*caHCa%4Fg84NcY6rmt([.HF4P6.<pUQ#a6
%<(%0\>pFS5kc^:)Em$`"Z[k^3[i#9\H]nU-6RkPZV-N=A:@R@2AnQsT]cMY+h;^^Tie/+=dT(7gmdF%mHP\hb_rA8onOIO]:5T7`
%/Wa"C-j.KC+r&i,N@qSIYO1jME':qK$a).9@;PBfE-mr;)>EnN\/sPbPui7UeSJOq=1eMXQ@<WC!R0Eak&>H$mdF%mIi%[ciha8Y
%_=dU&XtJ;!rETcumqQl5hOAorfAkVtR);`RI;%R<Xs"5>Ha?M@H[L;Zb#?5O*uapc#XI+)CU4Q0H@13D&S(_;/d:unBmK?afgg!E
%^;$^?M#%$&"o!3i!RBQg,IefPhUSn.LJ&^-\A,(;@f,$K'BgLph\F,T\A'Ohhr?$`]kQ)1+2IREr[t>"]"^nSrEY4CMXAjY,IefP
%hZXJL\FuVJqn%a<MtUa)_=dSagqAoA?V;2=(jqT@bRrc_q&!@?c`KW]d;oNQ?[N0a)RWHBo'QJTr?$OgkMQ73m4Wq[RpWqFs6I/o
%qtiU,O!"D`g])H=P!!*>&FLiNTT_!Dr8e0V'D^5A-d,aOBkiiWJPJ=D[#uF,#WeAlD18e7%G$/\Oa2LQ4>=@'6M^sKR;ZqkZHV@@
%Z1ZR)O"K=X>(>TD5pu31`Qo:/^gpS#PM(L^3g<[Fm6biLGAm):A^243[`Q0I-Q^dnGjYA33gjo'I^71VFM(:Z#<MCdVYkiB3gjo'
%I^70C%D.EYYpCBAr:4uCG+b&og>_9&bS\docKmeD*Kj7&40o%F%K+f>-d/%1iNgS<5UTmcUn\Gc-hFIb:R2kL.G(-DJPNjV4fHu'
%fmuo\>FV691L)l*SU"X:3(/e7lO8!1PPEkkk6d0Dj)j+F*U':lb%gDH\AZ"gq8kCeWp"S<G+]KZ"fH6d^Ha1<Xj'Y-),X>aS_8Qh
%4;=R(m`Z/_1>gg`A=:&?Nbfn8C^Gm,MOVoX5UZ*0`Qo89^AXPHlp)p=4dtb*E/AdWo93a_s78"6*U(EDKueCLG+b&pf&e@'N*;t-
%S_8Qh4SX3*40o$[bdTJp=_?<r00AdBS8_$Y\F.QNF:qqbr*4dXo78QYfmuf-&^=&A$nh)<D18e7T[^L>bRSaSZ,l>-&9K\bgAGKL
%;'PbG1HWs?f/1e;"45/;C\)UYrbjPDO_C^/K\8Z1(ptajjZmbor,OIuM%s>;KT($KJl30Lf#'%+*gO%8Qc#!CcX-%m-d4_Hf2bKM
%ESBnJ1q6Ep-m+Kq0"<rJ>F3)i`.iT`B8`<@GENCA,-]uZ\[sO@rX3cG93m\FD9&g(R=HG)YQ4#LFR=i.SjQ<<\iKMgJ"\7"C[*T?
%bGqlE(F:@`m&(L!-OjN%$sUE(O:a159gFD\IiaKF/m]CJ]@,F8['>,P5LMKB*L^F/-I_?lhT[eN?_1*=BJb(&";mgo-m6U&fZRc?
%*7hGlfQq^^6N.$>IS-%XP`"rAHuiBt&hb`d\:^'GT.kWcp!DQ23lZ5uNHHJc3&cc,b>q'-l/LgA4;cW37=0@BPA'[R"1/Hu"(&k2
%c&Nnk(o8`R<5`"5dk:/=#VnYHYLj<>cR%bL@jTi$#X\$RfZR^-oU9^HSpeK2ZTiKH<FL/TY5o$#n78Yn:<YRUT7+R?GR\*fZJ+83
%El7h,J8%%MA(l8&$!YaPf,tm2BR#(cC"W+t`.!uW2u/!7B=HJl$-Lt.UR6O*N=r"s2>Mp-B7IQo\,BZOQ2Y7\^P"R/"T3rUWNM"3
%aA25(2!k[4-[>eZ>hk7g('GF@h_C(=F''>Qc3O&cEmcI>A2k(PGMhX%La3-+W0Og+A*P%c[[8K1JT5e.oen?>lT=h9+@nqqB1BsA
%;2!KGE?#Ar71TXsIZd/NjTQ4`NsWH@6[r#\[N<1%dOXKXNKVlgd#`5=k)iaK*dOA`OG)*c&N$c`#s^rm6ZbB@"3TE:*k*<S:th9?
%f#dm$J[nkU<]P197(?PghUR6$,drleKN\DO.U9rJ(1[CX0ot8!B6bjI*'&:`JQd:ao=[7aO7aVUa\bDpJ&A4Z'-WtjV'8RGoI<a#
%7!<)J!'moOINN@O3$b4VKKc;AOVb\`+KKH/`]+Imqc4'c@b(Mk7``<%([MD77^-GM$h9W8-$?%NR)o0RJpOP(>PFa]ZD(I#;^4=N
%-jqDf=<33oe>(;IdPatlRWUB`As6,5mf>=!\==(6'pWoA-A(l@2LBk(\]Do=ob<`t@""I7F(L<0%*WTM\ueqtjuG<)W,%_3b&^pW
%aPKVurq+]'YBrHLcJZIb=\I2BDiChZs-ao5K&mo*c9LB]S4F\]l5G2*rLFG3,;u#`aP`bm1)6?MLj4,7Ap(M*F_D\ZPu64c$2MSg
%Vsr)TLd9^I(`s;.&BW'+$"8T?iB[:cq)sFZ&:n*SkH]_%&u"IrH)GH(L;\Oq/Ajge)JV'Ap3X)^YmRN=id7.i&l8VEEu8GtP9fWX
%,gVF+%;ZZ^Q)!X+(CY)N=:\R<IXspc>8\,$qdgoqA4Dr9$+@ZAoJ\fu`jX;IEW1<@n.bs-p!$2;7G^%#\0nn\'u[ED"<^9(7Wul"
%hf/EaVq,<"1L2eS*^P#&KS1:dWbkudRaaMA#'Pu,ad#`c]#>/)1>#>>5u<1-24Mrq#s9A6Wj]lU6d,hDhralc-+l;lU,?;n\!!aD
%'1kfg+;W7"M]f)W"$UnV=p+"lFu=r[0t3U@:LrtK3\u%J![0?4OHCeW)Be)>#Z`Cm"t'&,ih$3tdn256,TCG%fA07KaOnEkPrmF4
%F^<4&<sm73/8D-\nll>^Ym(Bjs5jG)af`_n@s0gG;A.0od?@/P`.1K)WCkkUU=rMnq9N^_Y\9#6Vc+_%dD5FGlXhPdf[(7N>Y>>9
%7!a/;o`:!ei+.^>:Ej]In+<:ajonR!6":e;QW;QSAcZa>1kqn3C6rP5R*!(";;Tsm=?66=G`mSU`n"e]YY.K#IY.\f\+JP2a2k$b
%D0IP^1or-nNsf\J2'"uGZFgR)=.-[747tU%//JtY4Bk(T[/#^*I=A*_4%,R*kCtEoLH+O-q@aumXte^emHKF[`P@Y!=3fT0UKq""
%Kl[f05"Xp8oQ+to`gVN__d'[CREcF66NQ54m_dGXIkjYdftmp+C1]An8:I^s[K5HNPfG,:6)oHYR%DN#X9lYmTb8NPBM9a8S]t>\
%'nTMXKWL:<l9eGX:`%9r`k'i&NC3KoOrYtTgE.j'HI)uENg0X/6uT4CkcuRV*_X*0OJB8c<&s#""2P?Td\j%od<H(Y/h]>ADRMj\
%8IYJMrScOP\6*NaIfIC#+k;#@A[fVEJ(BleM(M0X7uL66ZAd>Xno6,pUPf]eU[).uP"=jcbGg;k<ur'e8(ir&($VHCgq[A.dd*8l
%'qq0#/q+5:lEl@j/m5rG8QR)SXuoj(?1)Z;S[$IJ@Dh^[4#-%%hbYV"3'+Heej5DS-eGa3"pt^Hl_:P6m(3)N]^O`+'u=XkU4Pq;
%YQKe/5nt$#gRF9k%VE*nW'FW+$UDOOaC\&n+)0&Ao,9"PbX1'^"";E?nn3&1'%kP98[e[`ZXLqSHPu4=E$+\*_Euk/!Sl&;<-RtC
%$AU7;"cc_PV''PVeFZ6B$Vj=cJA"XAoaNHNL!3[0Crd7u,bYfd0I<b843j<6^FV6B>0m(FdP!,^Z#_gtMfb-7k)WK*ifSG>"-I6Q
%rN&QlK<u,c.LoairD[]'*+;bi%ZpLr=TEp@F6[S*KeCUDV]"QuEWs'Amd>pM(D)GZ"_4I".l[naHQHa4c+^:(m9M&MQ&U993%D9T
%]fAK,P19WCT@(_&LCVsH5uniI.`)l/R3X#E)2'`T(en!!O[H84i+H,Sng=8#_R1R+A"l,E;Lt4_X*lS[iP_Z?0ba(OfIA/fr1IYg
%J*n,o>d5;aDC],]34>GZgdC6F+_jfB`?Q__aCI9m$%Wu*7]_DE?lMInqYS`T5MSqpT2LQ<>9rA1[Xeb*)G0ABHY0[g:*`jROrudT
%-coL.[WIU#K:J2>r2N!p_6egI3iR,!7/!s.mYs2q!\k<)cco!gH3[($6rWuM[SjG$]8@r^RRcu`jhV,KbkBc++pSG/T3#lG64fp3
%I;C?KeQnD-U\LK#LYG/ch=\;E[-XCP%pg$iaMF;p6TTN7rQ7jNnZYCGSC6NDNEHkIUMX]?M=47#mIgc#+Ylc`:OLn^/U%R?R?#U7
%Re1/Wl\`o=:-O[G9:$/<(7C/qqTa5@lcl@ri9P#i>._-fA/cNIo"K/Z>"Du$"HrHA7:4.$P7=l_EF9Dk;RV(R:7br='jj"j.ca+L
%R0@$*lMT.Z.Lipp3Hg=rc"1umn\86JBJ$?8Ft[+<@</In1YM`Jc8BP[mY;7G2Ku<Q,PdU(cB2nBQud&lEcD(n%R]WP@!hJG%2l6M
%HDH6ta9bjG7^cBgMEL^V[]:13_1k0Ah\dN&A(c;hk3Y#sagO\!]QS<db2S)-A<W7T%i!W/LYXqOSA$.0$%nTIeQNBqY[CZ+'hKg]
%FMe_b'?J^lpE1fZibR[BfrC9S@82`]Oqu!++EqLdU4AF@S^h4nLid>ZFo*$`C>3PLPs9"GQ)MG@al#5cOg@QSBH0FHD.8,%<?l6H
%gV#FcHd4>2LFQ<U*YFr85@(/;54q0'VEU&T_q6Zs0]3NaG%%$Q"&XNrG&B3s[`g=<_e<2@A>^#lr)QZhi+g1q6=mMkoiuY/Z6)rI
%L9tB^8kpjNXtUea6Q%>Zc-qEpP_&GLZsdd,fe=DE2@MFmk?,TU_7DbHes5d#ToH"J#hgtocRRNI>ont._;=H,*><MsYb)ZX\%YNL
%#+43<^fVol`$!WVpqqacVR9lRd=_NG#MgBEKE3bI\f/drJX=BOrX"Z5%#f?`itlPL(t`ilQ>&5c`'%((-F@2<MnblGX6YbQrur;e
%a6dM]OkI_`)b,J)Id!M*)[8j_P1ani_a#t^:9&rnLp8+8`RmGE1!ilV-!r.2^o/;s0/><f-DjOO2.Nj]MlAM>@t6_F2SBB`*<R>5
%m:S7d#\BR9A:Wjg/er-A!+T@"k37MQMWu]Pl,pndEs'XHiBXe\1ii3@JIagH?5K'u'l(d&]`(F;BZIn^/]HUP0n_]7%EgeE;mKR>
%\u.41OFc[kafO63a'e9c'8q#B<.[0T=?sid`>3T/0f'$<A=C#2/F^fPb8m\8*mGN=rH3sPP)QZK8JN>R@pfed.2qOiaGEUF9u?SB
%;PR(GVel)?G%-sof#m*GC,$Gtm2/r<XdeJRFptkOWk*?-T6E@d)cEm'$U*R+jB&gN*--hJ(,cAseOd-P4_r\G:[Q8DiG]bngIq2"
%=hm(3ggfY,]!Sl;7gK_S0tuk;Q(EgGm*u="4E\5i'+:#m"_=1pp%XGMCdM.i7I+NV6OldnQ"5d'Z0c-VCd01o@"6OT`r(VK^ZG$g
%?-A@TB-k]:f'I6?i;O$0'V1N1^!'J(N]AW+$IFOmmW;JRju;%KQHi*X9P<IARBt=mlE!DFh6\Fg.nO4$D/WKg-%sfdJ?.*j9Ws)P
%UHVZL7fR[@69-qS:ENb6Ek3_*%-30b2s.+CB2fnOR.6o*(u/jU3IR/&=h`#f<50]'g2aek\cjWdV$#7Jfp24%Mn(;TK=t_K%V,DL
%iWA^OSp_49B"r:`@VmfIq:=qG%$WKq.6\%`90)9UbZW%;kQ]I<$-',^@AU:CS8;nG][^5C-q2mFbZP5^[[_HYdp"iRDP7?LPml`^
%)/\5&E("h)E=4QMW:dTUIpWQ.>Nr$/nlE'bZI^W]f1J!h)laSh^-X^OT6`$"'dthU-#)k;BgqMl@Y!4Eeg9A-$Jdfdk*X(D4j8HJ
%#b&5C"6lojS(_;n71`opMa:J%9$hJ#F[p?rW9S-fI\D)n4a8IhBu/`-;n&Qb9sVThG9hi_7\,H0UJ$Wcrn,%0Sf)r[ib*AuKIh8Z
%,iC*?9_0*\;e:=N`"6W0DdfB0K&W6T_++CQ4WK13CjugL3GEJ[ojC=>Lkk1T!_VQ2%jK@ncM#Um/?'Dr6k[WRW`2/^0QQ%=+>o#S
%nICkQI!H<*_%f?F@(ci<:d(X:m&,VIgs6ZKjH<4gJrP:86jPR[AQ5pNV/65I6j[G$lQF'UXqE!W#Q#"+d26F;<N,D)<haO=XQs&T
%a+Lc+Obj0+ZAa!>WQ[jXJ<C[GY`M<[Yk9'f+tgf+'qc58KNXR*4SDG.#?>am/4=nuOh99D)3"MVZ-ZHDi[j9c1a%g]RR?E)1hW?:
%J0?$cO$"_j8IAlDdY.C%]mCD46NchB)#+;-E)o4=b8Wj8'S_'=pE*Lb)(Hb/ShR#Z,")5fF<U/iQ"`WfjIH2ID9WDTUjmECFoN=P
%9F?BT6<UO%HU691!QGd$7Lf]'Jh"&Kc;cQomTD&[Y3o]&$Gn[98Z']tE$uNnMKErK9Y13O,OulDb;Q17O!6n1'#b]K=_=fF5P&ed
%_$@cW#uec#-gRS4]^5hVdmP8d>4j$Xf-@00OY*6%%@tO;9F[>8Rk?+aKu*.71I=\iP_^(1rJj240?nbaJOdoN!\.bk7e*@Q#eaCI
%bn.Pqd`+2sKs&$3[@"aA8Fg'diKsOhMLRXo+$&^CMh>'TnmD\Q.4[/2RiQG_U1P063H65KV)/N0`F+$*63TVI+Sqpp?^Y!-24t+!
%EGYXD7r!sGM1Np>5p(7QPWnEPaY"JBnZ!@:eZ)=5<#%[Z+MgHJ$pccr<39s'EcMk[\bH_(?!H+^-!]ND(Zl5oW9M/D<5Nhl:E#*i
%`C2IRZFuA(`t>u"RRu/h8@C&IU%]:l)'Ce+%h5uS(0Z"[^/qJOSj1,;<0cBlJV0`KCjG*Z4OGm,3suWgjX*5-2K";sHTq)<bN/3m
%e#\,Yo8.B%0W%/YGKfc$(?HqeYEaM@933[ekJoGVn5+'nkbC%;ccpl1M'R>YHlOuGm>KBT&nd-1!u>="Sojo?XhQp1,d%:9NmTKK
%B3/"WYVj"#YHrV2!ti9u*g0Y@OU>6UG__l(q$]XgoM1>goo_/E71UXHe0e"G1A>jUW%&5&FMPMS/dpF;P1%a_q,Xo$Mi,<8.uTdG
%i?E`9,&1hk/$RE=#RCA-Bu$?GW*3&/T+qa@l../6?qs7G/<.io%TueLG,'i$Kn<Jl/?J"N$J>LZidpPH8KVTEE/0T[3X7qeY>q<K
%e1-e$ig`==UL?eXC0<3L=i!Q=RX&]Y>[%DI2X1-c!o5b6UXZKWK'MgApf<7H!(VcGiNWF#G$]fe_rW3O1G1jc>f6)nd8]k8(`mo9
%#8UH?0=,Q=/;mK`/hKG`*H!qt-FX:(-NJbLlqFX)K!f4g@Bq51*B5*#Jgb:+alE,b+^#*:M/O2,_?P_unPUT!<1-dIel<gqh&r;*
%h:>3YkGN@qou'h';YF[W)Gh]X=?d1*nIDWM0D4sprMHE/hX+WB2#U'0U"heAb<S)$22t?_/86!%"]galkCGg#,p.ldBAFM0OI[HB
%<bt8@!u-FuW\^0'R6_/Q6+Z]aC0Yk:XJmHLe@Egj+cY1/5M5WI7Y53REF;.4HDkFq0PnOn`7]"K4F(gsrTK5@P'D23Wj'p;m\ViM
%e3t/Z[J+Ft\,AIiB$5hRHPD&PWa,8i*p&K+O4lk27laE7;/EtGP/hoK<Pl0trZ25OS)&L3NPak7]k$PB9khe[*=jL0U\^U*$UE]/
%.Z2,C&n9oCAMp:#YgI(uA6+Z33o>1CElbg^D4k1&C69Lq.oq8qj)KjM=rqL`f)(E+Jr_bA=ZO1+LrHR/Y]u-/>NM6q&HfcpKtBgj
%!T/4UJ#9YI]10V:>j^OJf-p:N]ZfmaL!!kfhdG%aoW*YI\8)fVe]j=k]g\VCQGbW422^8g_r%5(QY7n]7nkB)@AX#RHJ-LiA@)3F
%'\kjoc'WX76H=r/_E^dPEK&X8l9msRWXn>W$8b;KlHUUh*m\1H"V3O@N:4!]@5fY5m#Z()?(+l59f0!`5eBTJ:iB6S`o,QF$LncB
%[,u7(N3k;;O>eVup:D@(o'*V)HFQPS"L!;s]CWK@lr*Nb/ufi^?u)_:!B6tp-)"YqAmXbD%<_ai$O<S31W'[/mM6D?V(DiRT"U=i
%Lau,a'C9[/B<FsU];)1rM1jp9Y,2k,6T/':Jf?A6NJEhYTN29!BLD-cKs44t:9h\;&]@C8QUOF0P*+G7e7"Kk46Y`ioEMI&'RYtQ
%;V+YJ7pt(04EPS!eeH?;/ON7Z!MkT$*kiEWHtmWVZEf1@5,:B0#!1]6l7=J5V%,Mj%\^dWX?b>9"DBtkFVY,26_i+.iWB8"*c7iY
%7nSfs_?k4HlDL-;MDYFnLX#5WZU5ptK<f9CITEr:,,_kk^(_9GRghLJLl_!S-l()<iV\fC(Ka1=q\$SnK+'Bu+>n7Oc3u;i`h4Y_
%n#)l\aX%RQL\s[U)kr31h>FheZ<:Znr2'l`W/<E6O]H9"Ng(T%W-acj$=X35jat!M>q-S/)%IPAW?Z/q8;5;rLnX"W?iX/lathaC
%=V":R4nh&r*`V>ZN(ku6L.u:%T3WBiqo.;QYZ,,^VdOI[i!u^^e9NRN-!*g</h;su4*&+^$0Fk9mcCf6b&_9U@9\k-,'`-&g)Z.'
%?pp_#Q>:>`L)!f30[Ogr<MOlf&S3cBN-VE2*9lG,PH,e\n_7[Hg&+u>qP*6*N3l,R.U?AJRfsi&\gDH;!r?3te3MI:I:'^uhjYUf
%kPld"7VKRLZP2CC"^`4YDJ\`\"b1i5;dJl+\!u1H/pG!MmomF.fBdN)gtTJ0LLFS[*g_'1G+d^%gCWr>0D!KFL7$H)GWifM3/VT%
%]QBo6>hpt,T\48DU4RQ!GP0/*HF&U#2lR9;T3_%!/b9J@rOe9r"QK+<]EnmY!JhsKL/cPc&Ot.=`P7'-DUHb#4%OF&bSMrUrLV!c
%C>]M2)7gtkh&:VPe_.6]HQci@o/K6k2Je-C/;]!g2=SWNBpu;7M"K%+Gll<a+hftjc]Hf+/Y<U)V6lV85:h(1Z5YK:)Lp%a>T?9I
%pYk!eBUg/,QVkMYfa0;P?1-4@pdMC]+aksKl=OG:oB_309a5a<7HWF2r8/*L8eoK/AQVtc(5Kt$GB)fiT1(`$'VUPJ)'GD7%(#_*
%B-p%_OSLdb<9$@jNa%;&^qT]%%d;b'!(_p%\dbmGLVd[]5<k<RK!Y(4c0`e+^9Cg0XV$P<*iduYYo56,'.t03mE[Y$7[(7PQI3W&
%:plb%7BBOR%5Fp*I04Fh'>.NhdEZL4JM[sINqG0o\<ONQQ&r]HYTM>lX!Ygr>FW*jJ0HGMMq-kk>H-IoK$KBgojiJ8V"m`CN7O62
%bU@X-4)\?/2af`ZcH-aU,R>;5[7p_$2i*-L8Pi>`rK$jkCqn\`!<th;7Zi%g[!$WY<8m>Qog-05ik'9H(oPbCi^TM(>Go)::"[j!
%9`o,fiG_ap`6NeINL6//2T3fdpX+FDRik=:pd7N<$WAoi;Cb*.e#Oe1"se%%L(e80.!0kcBIndJ`hF\X.pA=O=_4Rt,-3,-7g=jB
%8PY1.7(T0+\Xs?"5[hLJ+T^MA3[?4/Vtp9jN6cE/'flXCA?V<aOToQeVEm$G]#,8f4GT>`mU4sinHr;GlDM*VR:8-;n4=6YJh)CM
%Up-$>S5>WY2<H$iM)#0qr-Zoud-YIShKp*ZfU6>a1G%dDWg;s@.2muIUi)cP,[@)gjY?3_>nj7AqS"A$1O0+onoC48CHd&BUjp&I
%omK/T3CK]XJb2@APAfN.MmY2$jWMU>[N=8?./c.l#-0K+*m4O%K1"QN34J7XGgO7-70?m9LeI*6qlf]n\D%79<SFuj>##S#C[&B7
%*J8[AFIFW-%uoI#kn]rLn5Ta3M\=M/@p^;+/t":qYKaNqnF_&<*ldIpq!00=[Tc$DE)]G`HX(c)ehBjm5VVQd0dREWq.H>(p$@_U
%G-CR980*Q3fLqps9T55QTn'BhjT]5u,Zp/$@^o"#LXKoa#]\4;=-uZJ6W5o*DiiK5)mOmr(JRGSR8'We[nlk3</pR#;=[NP\Nu8:
%M'9Bk=%Eb]3@,^(UmP8HaN;t+AYR"e<OKaIeA4KP_#-dTo%LF0$#H67Qq9)<0mTrEp!mtg\"[2P`_'C;?W'JC8lRc2^PPg!OCBm$
%\7L!_'BZ7jDXG.:k8]G>Kk/Vt'CP+]:Vs5h+2M6qcXgQ2&QTUO5cOO3=Ru:VfD;u?s"FDn"(Y4+kWg?p>`F)V5]%S/Bi8/L2>2R2
%-b!.cdB;7T'NqW<8Q+`[k+8gMUjkf`i7@L*AB9'#lqJqq?1NfR-\&e"qYrD[hq)dAi7EHWropV8p]"RWs2PX7J,+*d^\YS2J,@,J
%r;?LXs7F4TJ,X)qrPSC0p;>YZ^\]&(Jq*Q^o=s.2qst>JpuCgmro*5Ts8Vin%Km<e#Cc?H^\Z^"rprAO:SFZC%K~>
%AI9_PrivateDataEnd
